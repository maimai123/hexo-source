{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/36.png","path":"img/36.png","modified":0,"renderable":0},{"_id":"source/img/5.png","path":"img/5.png","modified":0,"renderable":0},{"_id":"source/img/65.png","path":"img/65.png","modified":0,"renderable":0},{"_id":"source/img/es6.png","path":"img/es6.png","modified":0,"renderable":0},{"_id":"source/img/img - 副本.jpg","path":"img/img - 副本.jpg","modified":0,"renderable":0},{"_id":"source/img/new.png","path":"img/new.png","modified":0,"renderable":0},{"_id":"source/img/logos.jpg","path":"img/logos.jpg","modified":0,"renderable":0},{"_id":"source/img/return.png","path":"img/return.png","modified":0,"renderable":0},{"_id":"source/img/react.png","path":"img/react.png","modified":0,"renderable":0},{"_id":"source/img/router.png","path":"img/router.png","modified":0,"renderable":0},{"_id":"source/img/search.png","path":"img/search.png","modified":0,"renderable":0},{"_id":"source/img/style.png","path":"img/style.png","modified":0,"renderable":0},{"_id":"source/img/image.png","path":"img/image.png","modified":0,"renderable":0},{"_id":"source/img/jsx2.png","path":"img/jsx2.png","modified":0,"renderable":0},{"_id":"source/img/jsx.png","path":"img/jsx.png","modified":0,"renderable":0},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0,"renderable":1},{"_id":"source/img/IMG_2372.jpg","path":"img/IMG_2372.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/img/lbt.png","path":"img/lbt.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/yilia/.gitignore","hash":"0d5c2fdbdc974f10150baa12e1fc171a34960ed8","modified":1469501678087},{"_id":"themes/yilia/README.md","hash":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1469501678087},{"_id":"themes/yilia/_config.yml","hash":"237c19223ddbe62296273ad91b76c3f59f7e0e24","modified":1486880109885},{"_id":"themes/yilia/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1469501678096},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1469501678079},{"_id":"themes/yilia/.git/ORIG_HEAD","hash":"154ba3f579c6295c558c47456b8023ff4f0cc214","modified":1469501957276},{"_id":"themes/yilia/.git/config","hash":"24300cece9d72967ea63724bdb2a8e3c2ac2cc52","modified":1469501678081},{"_id":"themes/yilia/.git/FETCH_HEAD","hash":"0e51cf7c560e073e6ecc501023e32e783df28278","modified":1469501957222},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1469500172519},{"_id":"themes/yilia/.git/packed-refs","hash":"102a8556f68dca2b07b7ef5c523080d0dcbbe257","modified":1469501678076},{"_id":"themes/yilia/.git/index","hash":"faacad93889dbe12f6796fc4fdd4bd8a208f1195","modified":1469514454835},{"_id":"themes/yilia/languages/en.yml","hash":"a093e794aef63ec9e9e9ef490cf7e4474e45e59f","modified":1469501678089},{"_id":"themes/yilia/languages/de.yml","hash":"bc80f78f61c3d7af9652e6aa6fc3e4ff39b0c8d3","modified":1469501678088},{"_id":"themes/yilia/languages/default.yml","hash":"f0a7a032b31555c9ec05a711e1ac19bb07724708","modified":1469501678088},{"_id":"themes/yilia/languages/fr-FR.yml","hash":"04b9a0d80d88d01e039e8077afe88f741e9620ba","modified":1469501678089},{"_id":"themes/yilia/languages/ru.yml","hash":"62f84ea82a696060c481fc22d4742e6201bb9bdc","modified":1469501678089},{"_id":"themes/yilia/languages/zh-Hans.yml","hash":"d2336578e14bb880d152266981c2b17523fc8742","modified":1469501678090},{"_id":"themes/yilia/languages/zh-hk.yml","hash":"e702fc43556e54c396917bdf7c869d528742e28b","modified":1469501678090},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1469501678095},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"005559baa96b7bb34e1efe6b031829a95d58d5e0","modified":1469501678090},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1469501678095},{"_id":"themes/yilia/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1469501678095},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1469501678096},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1469501678096},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1469501678096},{"_id":"source/img/36.png","hash":"844151e0b62455e9111c721c0a4c23a05193ec5a","modified":1490349497346},{"_id":"themes/yilia/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1469501678095},{"_id":"source/img/5.png","hash":"29eb0a7e990d69fbe6ed03064b3430cbaedb7bf8","modified":1490349497346},{"_id":"source/img/65.png","hash":"02f538e7301216edada6125248df6c036b1f76a8","modified":1490349497347},{"_id":"source/img/es6.png","hash":"62e7cda0e979fbb6fb4d20929153a1ff5dc18f1a","modified":1490349497353},{"_id":"source/img/img - 副本.jpg","hash":"b152317668128d21382a2126af70cb25b73057e2","modified":1490349497357},{"_id":"source/img/new.png","hash":"d903d2c7b59b79ae79b105d8572e32c4da7445e5","modified":1490349497375},{"_id":"source/img/logos.jpg","hash":"b152317668128d21382a2126af70cb25b73057e2","modified":1490349497374},{"_id":"source/img/return.png","hash":"45dba82cc6c4c638e5670b0144a74f1f83cb53b2","modified":1490349497376},{"_id":"source/img/react.png","hash":"0e28b92c702e96afd6396d76b6f62d9b677f1c94","modified":1490349497376},{"_id":"source/img/router.png","hash":"fcfe73d5143a46c5cd09840b6fede58ef5435ffb","modified":1490349497377},{"_id":"source/img/search.png","hash":"93ab53bfa14f77efc0f66b808eb1c2dffd3b1de3","modified":1490349497378},{"_id":"source/img/style.png","hash":"8a7b617714b71092c122b4145fe93c178134f135","modified":1490349497378},{"_id":"source/_posts/yyf.md","hash":"fad0b75291b1ead9ea8a8204dd041f15ff6a0859","modified":1490349497262},{"_id":"source/_posts/vuex学习小计.md","hash":"d6af3fab2595a2d71cff87bc1a5ed8eb5cc9f19f","modified":1490349497257},{"_id":"source/_posts/小难题.md","hash":"116f399cffae1e2ac348b1a9826941ba8640222f","modified":1490349497270},{"_id":"source/_posts/张鑫旭最精简css resetcss通用样式库.md","hash":"5cad8e35ee9d6af537c69d2a29ae73fdd3254bfb","modified":1490349497275},{"_id":"source/_posts/react日常小难题.md","hash":"fc00eac34ed75218d3e22f8f9d3fc3750fb2b4a3","modified":1490349497251},{"_id":"source/_posts/react-table.md","hash":"db990c16be325219cbf6c573cd794bd2c8a87886","modified":1490349497241},{"_id":"source/_posts/插件.md","hash":"243210724a79887af6c9474b39e5b700d2b97a86","modified":1490349497314},{"_id":"source/_posts/弹出框.md","hash":"a49e18af1145be97f9737a27b96333ad1d5dfe19","modified":1490349497304},{"_id":"source/_posts/用 cooking 搭建一个多页面易配置的 Vue 2 项目.md","hash":"90fe109d57408429c1fea29f1418340126af670c","modified":1490349497338},{"_id":"source/_posts/差评小计.md","hash":"7da7548d1163a3a9edc36b66323e9b95b287a4a5","modified":1500373046372},{"_id":"source/_posts/日常小计.md","hash":"e5d0ba499c63c21103d18ac974f8bb8eebdac7d8","modified":1490349497330},{"_id":"source/_posts/轮播图.md","hash":"206efe1660736381770af41f20717bcc8e249214","modified":1490349497345},{"_id":"source/img/image.png","hash":"b83303aa63318d77e8d4b3c849847a0fbded8191","modified":1490349497354},{"_id":"source/img/jsx2.png","hash":"ea72fd0fa8d2ac546282975f28808203fb82a7e9","modified":1490349497360},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1469500172534},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1469500172530},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1469500172539},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1469500172552},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1469500172544},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1469500172525},{"_id":"source/img/jsx.png","hash":"07c1b62303d0823228b54be60a1002a727ba7b3f","modified":1490349497359},{"_id":"source/_posts/整理各对象常用方法和属性.md","hash":"efc0fdb51a8d5d7a2beaaf6ffb81dc420093f60b","modified":1490349497323},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1469500172548},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1469500172555},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1469500172561},{"_id":"themes/yilia/.git/logs/HEAD","hash":"c303829d0d5d2d2b3d161b9a5838b620a0681150","modified":1469501678080},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1469500172558},{"_id":"themes/yilia/source/js/main.js","hash":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1469514453605},{"_id":"themes/yilia/source/js/jquery.lazyload.js","hash":"9c34c37b4dca82386648d364da913153d1db902e","modified":1469501678115},{"_id":"themes/yilia/source/js/mobile.js","hash":"387c047e661f04fbb5f5bfc4b2db617023e836ce","modified":1469501678116},{"_id":"themes/yilia/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1469501678115},{"_id":"themes/yilia/source/css/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1469501678097},{"_id":"themes/yilia/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1469501678097},{"_id":"themes/yilia/source/css/style.styl","hash":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1469501678105},{"_id":"themes/yilia/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1469501678105},{"_id":"themes/yilia/source/js/pc.js","hash":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1469501678116},{"_id":"themes/yilia/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1469501678101},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1469501678106},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1469501678105},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1469501678105},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1469501678106},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","hash":"96138eaddfbd305160ddcb98a5f08555ca6cb4ee","modified":1469501678110},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1469501678106},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","hash":"004bb0812414554ab48067792f09e978603253b6","modified":1469501678111},{"_id":"themes/yilia/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1469501678111},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1469501678111},{"_id":"themes/yilia/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1469501678111},{"_id":"themes/yilia/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1469501678112},{"_id":"themes/yilia/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1469501678112},{"_id":"themes/yilia/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1469501678112},{"_id":"themes/yilia/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1469501678112},{"_id":"themes/yilia/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1469501678113},{"_id":"themes/yilia/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1469501678113},{"_id":"themes/yilia/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1469501678113},{"_id":"themes/yilia/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1469501678113},{"_id":"themes/yilia/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1469501678113},{"_id":"themes/yilia/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1469501678114},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1469501678114},{"_id":"themes/yilia/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1469501678114},{"_id":"themes/yilia/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1469501678114},{"_id":"themes/yilia/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1469501678115},{"_id":"themes/yilia/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1469501678114},{"_id":"themes/yilia/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1469501678115},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"9f9515af1accacc02c18de0ae96d52813a07af58","modified":1469519409752},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"5b29a383418cfdcf8d5c5719b4fc4608aaba6fe7","modified":1469501678091},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1469501678091},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1469501678092},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"2bbf5aad03f54055d9d7852e70ff7e6952a41f26","modified":1469501678092},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1469501678092},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1469501678092},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"420b94c78832456686ebd9831a5bfcb05365645a","modified":1469501678091},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"b03e8424b4798d4887801afdfae457fbf6027838","modified":1469501678092},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"6a7a2a4960dabf9d7cd523573da7869eebf4b02d","modified":1469501678093},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"34b2d7050db88fed9f70b8233f16f451bad501f4","modified":1469519462009},{"_id":"source/img/IMG_2372.jpg","hash":"016748eea930343459b29a7873b80ea0ec1db043","modified":1490349497352},{"_id":"themes/yilia/.git/refs/heads/master","hash":"154ba3f579c6295c558c47456b8023ff4f0cc214","modified":1469501678079},{"_id":"themes/yilia/.git/objects/pack/pack-c0ce3a82683b3280631ef55cfbf569830b474762.idx","hash":"32a28ea1a7096e5f79da1255f289fb94cb85831d","modified":1469501677956},{"_id":"themes/yilia/source/css/_partial/article.styl","hash":"ee44828159bd4e802e1242a5cdf2890a7ed79b8c","modified":1483433272912},{"_id":"themes/yilia/source/css/_partial/footer.styl","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1469501678098},{"_id":"themes/yilia/source/css/_partial/archive.styl","hash":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1469501678097},{"_id":"themes/yilia/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1469501678098},{"_id":"themes/yilia/source/css/_partial/highlight - 副本.styl","hash":"08d3205dde3235f3e6881126268e6c473f46a8ac","modified":1469501678099},{"_id":"themes/yilia/source/css/_partial/main.styl","hash":"c368f1533053d4cffdf0ad982603271400b08e33","modified":1469501678099},{"_id":"themes/yilia/source/css/_partial/highlight.styl","hash":"c630248d8d7dd8dd52328bcb6a2e47715838a4a7","modified":1483434307051},{"_id":"themes/yilia/source/css/_partial/page.styl","hash":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1469501678100},{"_id":"themes/yilia/source/css/_partial/scroll.styl","hash":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1469501678100},{"_id":"themes/yilia/source/css/_partial/instagram.styl","hash":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1469501678099},{"_id":"themes/yilia/source/css/_partial/share.styl","hash":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1469501678100},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","hash":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1469501678099},{"_id":"themes/yilia/source/css/_partial/mobile.styl","hash":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1469501678099},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","hash":"af0115de5c6455f899a2e09225b50224982c039d","modified":1469501678100},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1469501678100},{"_id":"themes/yilia/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1469501678101},{"_id":"themes/yilia/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1469501678101},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1469501678103},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1469501678104},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1469501678104},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1469501678107},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1469501678102},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1469501678107},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1469501678109},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1469501678109},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1469501678109},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"27fab3e6ccc41c075dc4c5ba3ca9e7f3b6247945","modified":1469501678093},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1469501678110},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"06d8914b5aef73b5ec2cabb0105e275ff821b321","modified":1469501678093},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1469501678095},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"c115c282eebfb6b18612d2d8733272c270b03066","modified":1469501678094},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"37b82b76eab7d7f8f05c25c0e0a9cfefa10676f9","modified":1469519540521},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"12e86e8dfb4b1245374d35a3ad916e587505605a","modified":1469519522295},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1469501678103},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"4ab6cab2a975a4df8419448b33dec4724279d85c","modified":1469501678094},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"c303829d0d5d2d2b3d161b9a5838b620a0681150","modified":1469501678080},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"acf1b9d79ccec172881f9f0080e96667f4178885","modified":1469501678094},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1469501678077},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"c303829d0d5d2d2b3d161b9a5838b620a0681150","modified":1469501678079},{"_id":"source/img/lbt.png","hash":"4f57899e5ce8ee5990ad1ec32d974076d9c9b4b6","modified":1490349497371},{"_id":"themes/yilia/.git/objects/pack/pack-c0ce3a82683b3280631ef55cfbf569830b474762.pack","hash":"3a584895c714da5326b0b6acd2273164cc58c8c0","modified":1469501677987},{"_id":"public/2017/04/19/差评小计/index.html","hash":"1815d6721c44c5bc55e73046e1e4cdcf61d7179b","modified":1500373050996},{"_id":"public/archives/index.html","hash":"97fad9406ae3eab44c6458eb2ea8f7c096ac85d7","modified":1500373050996},{"_id":"public/archives/page/2/index.html","hash":"6ae250ceed526a4a1af484e3b239d7b21c2b573e","modified":1500373050996},{"_id":"public/archives/2017/index.html","hash":"fb8a8d38dd3e571723e55aa5e6ab576bd2feea1b","modified":1500373050996},{"_id":"public/archives/2017/03/index.html","hash":"4afc87c31ac22b49fb23ec2b08077395b4b82d25","modified":1500373050996},{"_id":"public/index.html","hash":"730efb3738581e93b3211ae89d72957a3d58d679","modified":1500373050997},{"_id":"public/page/2/index.html","hash":"08e08ccd9ad8aa2f0749bf735ffc6a554e650231","modified":1500373050997},{"_id":"public/2017/03/24/日常小计/index.html","hash":"2ac20a77b882f672594946518ac07239d4eb7913","modified":1500373050995},{"_id":"public/2017/03/24/yyf/index.html","hash":"ee4859e4cd42ed3e3babb3cb1dc72cd55615d7d9","modified":1500373050995},{"_id":"public/archives/2017/page/2/index.html","hash":"fc011d1e49110eca917b0cef89080163d8d01f9b","modified":1500373050996},{"_id":"public/archives/2017/03/page/2/index.html","hash":"466f2e72d0eeae740a7682c5b4e89a81305b37c2","modified":1500373050996},{"_id":"public/archives/2017/04/index.html","hash":"ca027db177dd87e853a7c35367c4edbbb6ff3006","modified":1500373050996},{"_id":"public/2017/03/24/轮播图/index.html","hash":"12ae8c774268306105e0f71baaf0b17d5d3c4599","modified":1500373050996},{"_id":"public/2017/03/24/用 cooking 搭建一个多页面易配置的 Vue 2 项目/index.html","hash":"eade47bff96dfbf0db5765d395015795a559eb4d","modified":1500373050997},{"_id":"public/2017/03/24/整理各对象常用方法和属性/index.html","hash":"af3d07627477183554c14a7c7abb318feb0eb093","modified":1500373050997},{"_id":"public/2017/03/24/插件/index.html","hash":"6d5875d692492ce7672506ebc987a88d66cfd076","modified":1500373050997},{"_id":"public/2017/03/24/弹出框/index.html","hash":"a05fc95cb1ad7d4ee2c5849e4c76ff0b23864306","modified":1500373050997},{"_id":"public/2017/03/24/张鑫旭最精简css resetcss通用样式库/index.html","hash":"fd87aa9919245e31634e7fffdb17cdb332036a4e","modified":1500373050997},{"_id":"public/2017/03/24/小难题/index.html","hash":"502cd32dbf4c8dc93db2c917b3f5ddfd8b43526e","modified":1500373050997},{"_id":"public/2017/03/24/vuex学习小计/index.html","hash":"ee3414a738b85e03fcb14a267485c9a88d316e99","modified":1500373050997},{"_id":"public/2017/03/24/react日常小难题/index.html","hash":"df322b8114a672ed3399d35449d0b28c22d1723c","modified":1500373050997},{"_id":"public/2017/03/24/react-table/index.html","hash":"e1301907d557198dca78336116f993812b28a041","modified":1500373050997}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"hexo博客搭建（麦麦）","_content":"<font size=1>**如有转载，请注明出处。**</font>\n\n已经在D盘D:\\git\\hexo下面装好了hexo 只需要\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\" />\n输入 hexo generate 回车\n        hexo server就可以启动了\n本地访问localhost:4000可以访问了\n不知道github上 ，登录github账号\n\n在hexo的安装路径D:\\git\\hexo下找到_config.yml\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\" />\ndeploy:\n  type: git\n  repository: git@github.com:maimai123/maimai123.github.io.git\n  branch: master\n\n\n先按ctrl+c停止本地的再\n输入 hexo generate 回车\n        hexo deploy就可以部署了\n\n\n\n如果部署失败 则可能是没有设置ssh\nhttp://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\n\nssh内容在C:\\Users\\Administrator\\.ssh下\n设置完以后要查看邮箱\nssh密码为空\n部署到github上\nnpm install hexo-deployer-git --save\nhexo  generate\n hexo deploy\nbugs\n在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了\n\n同步到github上\nhexo s -g\nhexo d -g\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/yyf.md","raw":"---\ntitle: hexo博客搭建（麦麦）\n---\n<font size=1>**如有转载，请注明出处。**</font>\n\n已经在D盘D:\\git\\hexo下面装好了hexo 只需要\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\" />\n输入 hexo generate 回车\n        hexo server就可以启动了\n本地访问localhost:4000可以访问了\n不知道github上 ，登录github账号\n\n在hexo的安装路径D:\\git\\hexo下找到_config.yml\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\" />\ndeploy:\n  type: git\n  repository: git@github.com:maimai123/maimai123.github.io.git\n  branch: master\n\n\n先按ctrl+c停止本地的再\n输入 hexo generate 回车\n        hexo deploy就可以部署了\n\n\n\n如果部署失败 则可能是没有设置ssh\nhttp://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\n\nssh内容在C:\\Users\\Administrator\\.ssh下\n设置完以后要查看邮箱\nssh密码为空\n部署到github上\nnpm install hexo-deployer-git --save\nhexo  generate\n hexo deploy\nbugs\n在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了\n\n同步到github上\nhexo s -g\nhexo d -g\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"yyf","published":1,"date":"2017-03-24T09:58:17.258Z","updated":"2017-03-24T09:58:17.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1g90000mwigoqh81a5h","content":"<font size=\"1\"><strong>如有转载，请注明出处。</strong></font>\n\n<p>已经在D盘D:\\git\\hexo下面装好了hexo 只需要<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\"><br>输入 hexo generate 回车<br>        hexo server就可以启动了<br>本地访问localhost:4000可以访问了<br>不知道github上 ，登录github账号</p>\n<p>在hexo的安装路径D:\\git\\hexo下找到_config.yml<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\"><br>deploy:<br>  type: git<br>  repository: git@github.com:maimai123/maimai123.github.io.git<br>  branch: master</p>\n<p>先按ctrl+c停止本地的再<br>输入 hexo generate 回车<br>        hexo deploy就可以部署了</p>\n<p>如果部署失败 则可能是没有设置ssh<br><a href=\"http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\" target=\"_blank\" rel=\"external\">http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html</a></p>\n<p>ssh内容在C:\\Users\\Administrator.ssh下<br>设置完以后要查看邮箱<br>ssh密码为空<br>部署到github上<br>npm install hexo-deployer-git –save<br>hexo  generate<br> hexo deploy<br>bugs<br>在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了</p>\n<p>同步到github上<br>hexo s -g<br>hexo d -g</p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"","more":"<font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<p>已经在D盘D:\\git\\hexo下面装好了hexo 只需要<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\" /><br>输入 hexo generate 回车<br>        hexo server就可以启动了<br>本地访问localhost:4000可以访问了<br>不知道github上 ，登录github账号</p>\n<p>在hexo的安装路径D:\\git\\hexo下找到_config.yml<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\" /><br>deploy:<br>  type: git<br>  repository: git@github.com:maimai123/maimai123.github.io.git<br>  branch: master</p>\n<p>先按ctrl+c停止本地的再<br>输入 hexo generate 回车<br>        hexo deploy就可以部署了</p>\n<p>如果部署失败 则可能是没有设置ssh<br><a href=\"http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\">http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html</a></p>\n<p>ssh内容在C:\\Users\\Administrator.ssh下<br>设置完以后要查看邮箱<br>ssh密码为空<br>部署到github上<br>npm install hexo-deployer-git –save<br>hexo  generate<br> hexo deploy<br>bugs<br>在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了</p>\n<p>同步到github上<br>hexo s -g<br>hexo d -g</p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"Vuex学习小计（麦麦）","_content":"<i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。\n<font size=2>vuex是什么？ 下面是官网给出的说法。\nVuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，\n并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，\n提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。\n总而言之，言而总之。就是用来管理你的state的！！！</font>\n<font size=1>**如有转载，请注明出处。**</font>\n\n**我们从零开始。**\n<font size=1>可以参考官网 [vuex](https://github.com/vuejs/vuex) 以及vuex文档 [vuex-文档](https://vuex.vuejs.org/zh-cn/intro.html) 也可以直接clone我的代码 [麦麦的github](https://github.com/maimai123/maimai-vuex-Test.git)</font>\n<!--more-->\n> <font size=2>打开一个空的文件夹 dua~ 打开了吧？</font>\n> <font size=2>安装 vue-cli。(确保你有node和npm)</font>\n> <font size=2>npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n> <font size=2>然后创建一个webpack项目并且下载依赖</font>\n> <font size=2>vue init webpack Test</font>\n\n> <font size=2>进入 你创建的文件夹下 安装依赖</font>\n> <font size=2>npm install</font>\n\n> <font size=2>这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font>\n> <font size=2>npm i vue-resource vue-router vuex --save</font>\n\n> <font size=2>如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader\n> <font size=2>npm install less less-loader --save-dev</font>\n\n> <font size=2>接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n>\n> <font size=2>打开浏览器应该可以看到我们的vue应用啦~</font>\n>\n>*  <font size=2>我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n>\n>*  <font size=2>然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n>\n>*  <font size=2>**App.vue**是一个类似于layout的文件。路由配置在**router**文件夹下</font>\n>\n>*  <font size=2>**components**文件夹下用来放你的组件</font>\n>\n>*  <font size=2>**assets**文件夹下存放你的静态资源</font>\n>\n>*  <font size=2>我们新建一个**vuex**文件夹，这就开始学习状态管理啦~</font>\n>\n>* <font size=2>先新建 **store.js** 用来存放我们的状态</font>\n>\n>* <font size=2>再新建 **getters** 文件夹 用来处理state数据</font>\n>\n>* <font size=2>再新建 **mutations** 文件夹 用来注册我们各种数据变化的方法</font>\n>\n>* <font size=2>再新建 **mutations-types.js** 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n>\n>* <font size=2>再新建 **actions** 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n>\n>* <font size=2>文件建好就开始开始写代码了</font>\n>\n>* <font size=2> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹\n>* 当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</font>\n>* <font size=2> 代码如下：(必须要写 Vue.use(Vuex) )</font>\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport actions from './actions'\nimport * as getters from './getters'\nimport mutations from './mutations'\n\nVue.use(Vuex)\n\nconst state = {\n    total:2,\n    lists: [\n      {\n        id:0,\n        articleName : '如何学好vue',\n        avatar : 'http://cn.vuejs.org/images/logo.png',\n        date : '2016-12-25',\n        comment : 'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。',\n        likes: 113,\n        liked:true\n      },\n      {\n        id:1,\n        articleName : '如何完全读懂javascript高级程序设计',\n        avatar : 'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256',\n        date : '2017-12-25',\n        comment : '从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。',\n        likes: 564,\n        liked:false\n      }\n    ]\n};\n\nexport default new Vuex.Store({\n  state, //状态\n  getters, //处理state数据\n  mutations, // 注册我们各种数据变化的方法\n  actions, //可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件\n})\n\n```\n\n>* <font size=2> state中是你的数据 </font>\n>\n>* <font size=2> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或...反正就是当没有这些数据也不至于让你的项目报错！</font>\n>\n>* <font size=2> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n>\n>* <font size=2> 然后在 **mutations-types.js** 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n>\n>* <font size=2> 再在mutations文件夹中写你的方法</font>\n>\n>* <font size=2> actions commit你的事件</font>\n>\n>* <font size=2> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/vuex学习小计.md","raw":"---\ntitle: Vuex学习小计（麦麦）\n---\n<i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。\n<font size=2>vuex是什么？ 下面是官网给出的说法。\nVuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，\n并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，\n提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。\n总而言之，言而总之。就是用来管理你的state的！！！</font>\n<font size=1>**如有转载，请注明出处。**</font>\n\n**我们从零开始。**\n<font size=1>可以参考官网 [vuex](https://github.com/vuejs/vuex) 以及vuex文档 [vuex-文档](https://vuex.vuejs.org/zh-cn/intro.html) 也可以直接clone我的代码 [麦麦的github](https://github.com/maimai123/maimai-vuex-Test.git)</font>\n<!--more-->\n> <font size=2>打开一个空的文件夹 dua~ 打开了吧？</font>\n> <font size=2>安装 vue-cli。(确保你有node和npm)</font>\n> <font size=2>npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n> <font size=2>然后创建一个webpack项目并且下载依赖</font>\n> <font size=2>vue init webpack Test</font>\n\n> <font size=2>进入 你创建的文件夹下 安装依赖</font>\n> <font size=2>npm install</font>\n\n> <font size=2>这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font>\n> <font size=2>npm i vue-resource vue-router vuex --save</font>\n\n> <font size=2>如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader\n> <font size=2>npm install less less-loader --save-dev</font>\n\n> <font size=2>接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n>\n> <font size=2>打开浏览器应该可以看到我们的vue应用啦~</font>\n>\n>*  <font size=2>我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n>\n>*  <font size=2>然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n>\n>*  <font size=2>**App.vue**是一个类似于layout的文件。路由配置在**router**文件夹下</font>\n>\n>*  <font size=2>**components**文件夹下用来放你的组件</font>\n>\n>*  <font size=2>**assets**文件夹下存放你的静态资源</font>\n>\n>*  <font size=2>我们新建一个**vuex**文件夹，这就开始学习状态管理啦~</font>\n>\n>* <font size=2>先新建 **store.js** 用来存放我们的状态</font>\n>\n>* <font size=2>再新建 **getters** 文件夹 用来处理state数据</font>\n>\n>* <font size=2>再新建 **mutations** 文件夹 用来注册我们各种数据变化的方法</font>\n>\n>* <font size=2>再新建 **mutations-types.js** 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n>\n>* <font size=2>再新建 **actions** 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n>\n>* <font size=2>文件建好就开始开始写代码了</font>\n>\n>* <font size=2> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹\n>* 当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</font>\n>* <font size=2> 代码如下：(必须要写 Vue.use(Vuex) )</font>\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport actions from './actions'\nimport * as getters from './getters'\nimport mutations from './mutations'\n\nVue.use(Vuex)\n\nconst state = {\n    total:2,\n    lists: [\n      {\n        id:0,\n        articleName : '如何学好vue',\n        avatar : 'http://cn.vuejs.org/images/logo.png',\n        date : '2016-12-25',\n        comment : 'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。',\n        likes: 113,\n        liked:true\n      },\n      {\n        id:1,\n        articleName : '如何完全读懂javascript高级程序设计',\n        avatar : 'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256',\n        date : '2017-12-25',\n        comment : '从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。',\n        likes: 564,\n        liked:false\n      }\n    ]\n};\n\nexport default new Vuex.Store({\n  state, //状态\n  getters, //处理state数据\n  mutations, // 注册我们各种数据变化的方法\n  actions, //可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件\n})\n\n```\n\n>* <font size=2> state中是你的数据 </font>\n>\n>* <font size=2> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或...反正就是当没有这些数据也不至于让你的项目报错！</font>\n>\n>* <font size=2> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n>\n>* <font size=2> 然后在 **mutations-types.js** 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n>\n>* <font size=2> 再在mutations文件夹中写你的方法</font>\n>\n>* <font size=2> actions commit你的事件</font>\n>\n>* <font size=2> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"vuex学习小计","published":1,"date":"2017-03-24T09:58:17.251Z","updated":"2017-03-24T09:58:17.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gh0001mwigx3a9lw96","content":"<p><i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。</p>\n<font size=\"2\">vuex是什么？ 下面是官网给出的说法。<br>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，<br>并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，<br>提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。<br>总而言之，言而总之。就是用来管理你的state的！！！</font><br><font size=\"1\"><strong>如有转载，请注明出处。</strong></font>\n\n<p><strong>我们从零开始。</strong></p>\n<font size=\"1\">可以参考官网 <a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"external\">vuex</a> 以及vuex文档 <a href=\"https://vuex.vuejs.org/zh-cn/intro.html\" target=\"_blank\" rel=\"external\">vuex-文档</a> 也可以直接clone我的代码 <a href=\"https://github.com/maimai123/maimai-vuex-Test.git\" target=\"_blank\" rel=\"external\">麦麦的github</a></font><br><a id=\"more\"></a><br>&gt; <font size=\"2\">打开一个空的文件夹 dua~ 打开了吧？</font><br>&gt; <font size=\"2\">安装 vue-cli。(确保你有node和npm)</font><br>&gt; <font size=\"2\">npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n<blockquote>\n<font size=\"2\">然后创建一个webpack项目并且下载依赖</font><br><font size=\"2\">vue init webpack Test</font>\n\n<font size=\"2\">进入 你创建的文件夹下 安装依赖</font><br><font size=\"2\">npm install</font>\n\n<font size=\"2\">这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font><br><font size=\"2\">npm i vue-resource vue-router vuex –save</font>\n\n<font size=\"2\">如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader<br><font size=\"2\">npm install less less-loader –save-dev</font>\n\n<font size=\"2\">接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n\n<font size=\"2\">打开浏览器应该可以看到我们的vue应用啦~</font>\n\n<ul>\n<li><font size=\"2\">我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n</li>\n<li><font size=\"2\">然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n</li>\n<li><font size=\"2\"><strong>App.vue</strong>是一个类似于layout的文件。路由配置在<strong>router</strong>文件夹下</font>\n</li>\n<li><font size=\"2\"><strong>components</strong>文件夹下用来放你的组件</font>\n</li>\n<li><font size=\"2\"><strong>assets</strong>文件夹下存放你的静态资源</font>\n</li>\n<li><font size=\"2\">我们新建一个<strong>vuex</strong>文件夹，这就开始学习状态管理啦~</font>\n</li>\n<li><font size=\"2\">先新建 <strong>store.js</strong> 用来存放我们的状态</font>\n</li>\n<li><font size=\"2\">再新建 <strong>getters</strong> 文件夹 用来处理state数据</font>\n</li>\n<li><font size=\"2\">再新建 <strong>mutations</strong> 文件夹 用来注册我们各种数据变化的方法</font>\n</li>\n<li><font size=\"2\">再新建 <strong>mutations-types.js</strong> 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n</li>\n<li><font size=\"2\">再新建 <strong>actions</strong> 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n</li>\n<li><font size=\"2\">文件建好就开始开始写代码了</font>\n</li>\n<li><p><font size=\"2\"> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹</font></p>\n</li>\n<li>当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</li>\n<li><p><font size=\"2\"> 代码如下：(必须要写 Vue.use(Vuex) )</font></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> actions <span class=\"keyword\">from</span> <span class=\"string\">'./actions'</span></div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> getters <span class=\"keyword\">from</span> <span class=\"string\">'./getters'</span></div><div class=\"line\"><span class=\"keyword\">import</span> mutations <span class=\"keyword\">from</span> <span class=\"string\">'./mutations'</span></div><div class=\"line\"></div><div class=\"line\">Vue.use(Vuex)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> state = &#123;</div><div class=\"line\">    <span class=\"attr\">total</span>:<span class=\"number\">2</span>,</div><div class=\"line\">    <span class=\"attr\">lists</span>: [</div><div class=\"line\">      &#123;</div><div class=\"line\">        <span class=\"attr\">id</span>:<span class=\"number\">0</span>,</div><div class=\"line\">        <span class=\"attr\">articleName</span> : <span class=\"string\">'如何学好vue'</span>,</div><div class=\"line\">        <span class=\"attr\">avatar</span> : <span class=\"string\">'http://cn.vuejs.org/images/logo.png'</span>,</div><div class=\"line\">        <span class=\"attr\">date</span> : <span class=\"string\">'2016-12-25'</span>,</div><div class=\"line\">        <span class=\"attr\">comment</span> : <span class=\"string\">'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。'</span>,</div><div class=\"line\">        <span class=\"attr\">likes</span>: <span class=\"number\">113</span>,</div><div class=\"line\">        <span class=\"attr\">liked</span>:<span class=\"literal\">true</span></div><div class=\"line\">      &#125;,</div><div class=\"line\">      &#123;</div><div class=\"line\">        <span class=\"attr\">id</span>:<span class=\"number\">1</span>,</div><div class=\"line\">        <span class=\"attr\">articleName</span> : <span class=\"string\">'如何完全读懂javascript高级程序设计'</span>,</div><div class=\"line\">        <span class=\"attr\">avatar</span> : <span class=\"string\">'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256'</span>,</div><div class=\"line\">        <span class=\"attr\">date</span> : <span class=\"string\">'2017-12-25'</span>,</div><div class=\"line\">        <span class=\"attr\">comment</span> : <span class=\"string\">'从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。'</span>,</div><div class=\"line\">        <span class=\"attr\">likes</span>: <span class=\"number\">564</span>,</div><div class=\"line\">        <span class=\"attr\">liked</span>:<span class=\"literal\">false</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</div><div class=\"line\">  state, <span class=\"comment\">//状态</span></div><div class=\"line\">  getters, <span class=\"comment\">//处理state数据</span></div><div class=\"line\">  mutations, <span class=\"comment\">// 注册我们各种数据变化的方法</span></div><div class=\"line\">  actions, <span class=\"comment\">//可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><font size=\"2\"> state中是你的数据 </font>\n</li>\n<li><font size=\"2\"> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或…反正就是当没有这些数据也不至于让你的项目报错！</font>\n</li>\n<li><font size=\"2\"> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n</li>\n<li><font size=\"2\"> 然后在 <strong>mutations-types.js</strong> 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n</li>\n<li><font size=\"2\"> 再在mutations文件夹中写你的方法</font>\n</li>\n<li><font size=\"2\"> actions commit你的事件</font>\n</li>\n<li><font size=\"2\"> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</li>\n</ul>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"<p><i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。</p>\n<font size=2>vuex是什么？ 下面是官网给出的说法。<br>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，<br>并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，<br>提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。<br>总而言之，言而总之。就是用来管理你的state的！！！</font><br><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<p><strong>我们从零开始。</strong></p>\n<font size=1>可以参考官网 <a href=\"https://github.com/vuejs/vuex\">vuex</a> 以及vuex文档 <a href=\"https://vuex.vuejs.org/zh-cn/intro.html\">vuex-文档</a> 也可以直接clone我的代码 <a href=\"https://github.com/maimai123/maimai-vuex-Test.git\">麦麦的github</a></font><br>","more":"<br>&gt; <font size=2>打开一个空的文件夹 dua~ 打开了吧？</font><br>&gt; <font size=2>安装 vue-cli。(确保你有node和npm)</font><br>&gt; <font size=2>npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n<blockquote>\n<font size=2>然后创建一个webpack项目并且下载依赖</font><br><font size=2>vue init webpack Test</font>\n\n<font size=2>进入 你创建的文件夹下 安装依赖</font><br><font size=2>npm install</font>\n\n<font size=2>这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font><br><font size=2>npm i vue-resource vue-router vuex –save</font>\n\n<font size=2>如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader<br><font size=2>npm install less less-loader –save-dev</font>\n\n<font size=2>接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n\n<font size=2>打开浏览器应该可以看到我们的vue应用啦~</font>\n\n<ul>\n<li><font size=2>我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n</li>\n<li><font size=2>然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n</li>\n<li><font size=2><strong>App.vue</strong>是一个类似于layout的文件。路由配置在<strong>router</strong>文件夹下</font>\n</li>\n<li><font size=2><strong>components</strong>文件夹下用来放你的组件</font>\n</li>\n<li><font size=2><strong>assets</strong>文件夹下存放你的静态资源</font>\n</li>\n<li><font size=2>我们新建一个<strong>vuex</strong>文件夹，这就开始学习状态管理啦~</font>\n</li>\n<li><font size=2>先新建 <strong>store.js</strong> 用来存放我们的状态</font>\n</li>\n<li><font size=2>再新建 <strong>getters</strong> 文件夹 用来处理state数据</font>\n</li>\n<li><font size=2>再新建 <strong>mutations</strong> 文件夹 用来注册我们各种数据变化的方法</font>\n</li>\n<li><font size=2>再新建 <strong>mutations-types.js</strong> 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n</li>\n<li><font size=2>再新建 <strong>actions</strong> 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n</li>\n<li><font size=2>文件建好就开始开始写代码了</font>\n</li>\n<li><p><font size=2> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹</p>\n</li>\n<li>当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</font></li>\n<li><p><font size=2> 代码如下：(必须要写 Vue.use(Vuex) )</font></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> actions <span class=\"keyword\">from</span> <span class=\"string\">'./actions'</span></div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> getters <span class=\"keyword\">from</span> <span class=\"string\">'./getters'</span></div><div class=\"line\"><span class=\"keyword\">import</span> mutations <span class=\"keyword\">from</span> <span class=\"string\">'./mutations'</span></div><div class=\"line\"></div><div class=\"line\">Vue.use(Vuex)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> state = &#123;</div><div class=\"line\">    <span class=\"attr\">total</span>:<span class=\"number\">2</span>,</div><div class=\"line\">    <span class=\"attr\">lists</span>: [</div><div class=\"line\">      &#123;</div><div class=\"line\">        <span class=\"attr\">id</span>:<span class=\"number\">0</span>,</div><div class=\"line\">        <span class=\"attr\">articleName</span> : <span class=\"string\">'如何学好vue'</span>,</div><div class=\"line\">        <span class=\"attr\">avatar</span> : <span class=\"string\">'http://cn.vuejs.org/images/logo.png'</span>,</div><div class=\"line\">        <span class=\"attr\">date</span> : <span class=\"string\">'2016-12-25'</span>,</div><div class=\"line\">        <span class=\"attr\">comment</span> : <span class=\"string\">'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。'</span>,</div><div class=\"line\">        <span class=\"attr\">likes</span>: <span class=\"number\">113</span>,</div><div class=\"line\">        <span class=\"attr\">liked</span>:<span class=\"literal\">true</span></div><div class=\"line\">      &#125;,</div><div class=\"line\">      &#123;</div><div class=\"line\">        <span class=\"attr\">id</span>:<span class=\"number\">1</span>,</div><div class=\"line\">        <span class=\"attr\">articleName</span> : <span class=\"string\">'如何完全读懂javascript高级程序设计'</span>,</div><div class=\"line\">        <span class=\"attr\">avatar</span> : <span class=\"string\">'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256'</span>,</div><div class=\"line\">        <span class=\"attr\">date</span> : <span class=\"string\">'2017-12-25'</span>,</div><div class=\"line\">        <span class=\"attr\">comment</span> : <span class=\"string\">'从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。'</span>,</div><div class=\"line\">        <span class=\"attr\">likes</span>: <span class=\"number\">564</span>,</div><div class=\"line\">        <span class=\"attr\">liked</span>:<span class=\"literal\">false</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</div><div class=\"line\">  state, <span class=\"comment\">//状态</span></div><div class=\"line\">  getters, <span class=\"comment\">//处理state数据</span></div><div class=\"line\">  mutations, <span class=\"comment\">// 注册我们各种数据变化的方法</span></div><div class=\"line\">  actions, <span class=\"comment\">//可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><font size=2> state中是你的数据 </font>\n</li>\n<li><font size=2> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或…反正就是当没有这些数据也不至于让你的项目报错！</font>\n</li>\n<li><font size=2> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n</li>\n<li><font size=2> 然后在 <strong>mutations-types.js</strong> 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n</li>\n<li><font size=2> 再在mutations文件夹中写你的方法</font>\n</li>\n<li><font size=2> actions commit你的事件</font>\n</li>\n<li><font size=2> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</li>\n</ul>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"张鑫旭最精简css resetcss通用样式库（麦麦）","_content":"<font size=1>**如有转载，请注明出处。**</font>\n<h1>CSS reset</h1>\n```python\nbody{\n    line-height:1.4;\n    color:#333;\n    font-family:arial;\n    font-size: 12px;\n    background:white;\n}\ninput,textarea,select{\n    font-size:12px;\n    font-size:100%;\n    font-family:arial;\n    font-family:inherit;\n}\nbody,h1,h2,h3,h4,h5,h6,p,ul,ol,form{\n    margin:0;\n}\nh4,h5,h6{\n    font-size:1em;\n}\nul,ol{\n    padding-left:0;\n    list-style-type:none;\n}\n/*image with no-border*/\na img{border:0;}\nimg{border:0;}\n```\n<h1>css通用样式库</h1>\n```python\n.l{float:left;}.r{float:right;}.cl{clear:both;}\n.n{font-weight:normal; font-style:normal;}.b{font-weight:bold;}.i{font-style:italic;}\n.fa{font-family:Arial;}.fg{font-family:Georgia;}.ft{font-family:Tahoma;}.fl{font-family:Lucida Console;}.fs{font-family:'宋体';}.fw{font-family:'微软雅黑';}\n.tc{text-align:center;}.tr{text-align:right;}.tl{text-align:left;}\n.tdl{text-decoration:underline;}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none;}\n.g0{color:#000000;}.g3{color:#333333;}.g6{color:#666666;}.g9{color:#999999;}.red{color:red;}.wh{color:white;}\n.f0{font-size:0;}.f10{font-size:10px;}.f12{font-size:12px;}.f13{font-size:13px;}.f14{font-size:14px;}.f16{font-size:16px;}.f20{font-size:20px;}.f24{font-size:24px;}\n.vm{vertical-align:middle;}.vtb{vertical-align:text-bottom;}.vt{vertical-align:top;}.vn{vertical-align:-2px;}.vimg{margin-bottom:-3px;}\n.m0{margin:0;}.ml1{margin-left:1px;}.ml2{margin-left:2px;}.ml5{margin-left:5px;}.ml10{margin-left:10px;}.ml20{margin-left:20px;}.mr1{margin-right:1;}.mr2{margin-right:2px;}.mr5{margin-right:5px;}.mr10{margin-right:10px;}.mr20{margin-right:20px;}.mt1{margin-top:1;}.mt2{margin-top:2px;}.mt5{margin-top:5px;}.mt10{margin-top:10px;}.mt20{margin-top:20px;}.mb1{margin-bottom:1px;}.mb2{margin-bottom:2px;}.mb5{margin-bottom:5px;}.mb10{margin-bottom:10px;}.mb20{margin-bottom:20px;}.ml-1{margin-left:-1px;}.mt-1{margin-top:-1px;}\n.p1{padding:1px;}.pl1{padding-left:1px;}.pt1{padding-top:1px;}.pr1{padding-right:1px;}.pb1{padding-bottom:1px;}.p2{padding:2px;}.pl2{padding-left:2px;}.pt2{padding-top:2px;}.pr2{padding-right:2px;}.pb2{padding-bottom:2px;}.pl5{padding-left:5px;}.p5{padding:5px;}.pt5{padding-top:5px;}.pr5{padding-right:5px;}.pb5{padding-bottom:5px;}.p10{padding:10px;}.pl10{padding-left:10px;}.pt10{padding-top:10px;}.pr10{padding-right:10px;}.pb10{padding-bottom:10px;}.p20{padding:20px;}.pl20{padding-left:20px;}.pt20{padding-top:20px;}.pr20{padding-right:20px;}.pb20{padding-bottom:20px;}\n.rel{position:relative;}.abs{position:absolute;}\n.dn{display:none;}.db{display:block;}.dib{-moz-inline-stack:inline-block; display:inline-block;}.di{display:inline;}\n.ovh{overflow:hidden;}.ovs{overflow:scroll;}.vh{visibility:hidden;}.vv{visibility:visible;}\n.lh14{line-height:14px;}.lh16{line-height:16px;}.lh18{line-height:18px;}.lh20{line-height:20px;}.lh22{line-height:22px;}.lh24{line-height:24px;}\n.fix{*zoom:1;}.fix:after,.fix:before{display:block; content:\"clear\"; height:0; clear:both; overflow:hidden; visibility:hidden;}.z{_zoom:1;}\n```\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/张鑫旭最精简css resetcss通用样式库.md","raw":"---\ntitle: 张鑫旭最精简css resetcss通用样式库（麦麦）\n---\n<font size=1>**如有转载，请注明出处。**</font>\n<h1>CSS reset</h1>\n```python\nbody{\n    line-height:1.4;\n    color:#333;\n    font-family:arial;\n    font-size: 12px;\n    background:white;\n}\ninput,textarea,select{\n    font-size:12px;\n    font-size:100%;\n    font-family:arial;\n    font-family:inherit;\n}\nbody,h1,h2,h3,h4,h5,h6,p,ul,ol,form{\n    margin:0;\n}\nh4,h5,h6{\n    font-size:1em;\n}\nul,ol{\n    padding-left:0;\n    list-style-type:none;\n}\n/*image with no-border*/\na img{border:0;}\nimg{border:0;}\n```\n<h1>css通用样式库</h1>\n```python\n.l{float:left;}.r{float:right;}.cl{clear:both;}\n.n{font-weight:normal; font-style:normal;}.b{font-weight:bold;}.i{font-style:italic;}\n.fa{font-family:Arial;}.fg{font-family:Georgia;}.ft{font-family:Tahoma;}.fl{font-family:Lucida Console;}.fs{font-family:'宋体';}.fw{font-family:'微软雅黑';}\n.tc{text-align:center;}.tr{text-align:right;}.tl{text-align:left;}\n.tdl{text-decoration:underline;}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none;}\n.g0{color:#000000;}.g3{color:#333333;}.g6{color:#666666;}.g9{color:#999999;}.red{color:red;}.wh{color:white;}\n.f0{font-size:0;}.f10{font-size:10px;}.f12{font-size:12px;}.f13{font-size:13px;}.f14{font-size:14px;}.f16{font-size:16px;}.f20{font-size:20px;}.f24{font-size:24px;}\n.vm{vertical-align:middle;}.vtb{vertical-align:text-bottom;}.vt{vertical-align:top;}.vn{vertical-align:-2px;}.vimg{margin-bottom:-3px;}\n.m0{margin:0;}.ml1{margin-left:1px;}.ml2{margin-left:2px;}.ml5{margin-left:5px;}.ml10{margin-left:10px;}.ml20{margin-left:20px;}.mr1{margin-right:1;}.mr2{margin-right:2px;}.mr5{margin-right:5px;}.mr10{margin-right:10px;}.mr20{margin-right:20px;}.mt1{margin-top:1;}.mt2{margin-top:2px;}.mt5{margin-top:5px;}.mt10{margin-top:10px;}.mt20{margin-top:20px;}.mb1{margin-bottom:1px;}.mb2{margin-bottom:2px;}.mb5{margin-bottom:5px;}.mb10{margin-bottom:10px;}.mb20{margin-bottom:20px;}.ml-1{margin-left:-1px;}.mt-1{margin-top:-1px;}\n.p1{padding:1px;}.pl1{padding-left:1px;}.pt1{padding-top:1px;}.pr1{padding-right:1px;}.pb1{padding-bottom:1px;}.p2{padding:2px;}.pl2{padding-left:2px;}.pt2{padding-top:2px;}.pr2{padding-right:2px;}.pb2{padding-bottom:2px;}.pl5{padding-left:5px;}.p5{padding:5px;}.pt5{padding-top:5px;}.pr5{padding-right:5px;}.pb5{padding-bottom:5px;}.p10{padding:10px;}.pl10{padding-left:10px;}.pt10{padding-top:10px;}.pr10{padding-right:10px;}.pb10{padding-bottom:10px;}.p20{padding:20px;}.pl20{padding-left:20px;}.pt20{padding-top:20px;}.pr20{padding-right:20px;}.pb20{padding-bottom:20px;}\n.rel{position:relative;}.abs{position:absolute;}\n.dn{display:none;}.db{display:block;}.dib{-moz-inline-stack:inline-block; display:inline-block;}.di{display:inline;}\n.ovh{overflow:hidden;}.ovs{overflow:scroll;}.vh{visibility:hidden;}.vv{visibility:visible;}\n.lh14{line-height:14px;}.lh16{line-height:16px;}.lh18{line-height:18px;}.lh20{line-height:20px;}.lh22{line-height:22px;}.lh24{line-height:24px;}\n.fix{*zoom:1;}.fix:after,.fix:before{display:block; content:\"clear\"; height:0; clear:both; overflow:hidden; visibility:hidden;}.z{_zoom:1;}\n```\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"张鑫旭最精简css resetcss通用样式库","published":1,"date":"2017-03-24T09:58:17.270Z","updated":"2017-03-24T09:58:17.275Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gj0002mwig7ij14buv","content":"<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<p></p><h1>CSS reset</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">body&#123;</div><div class=\"line\">    line-height:<span class=\"number\">1.4</span>;</div><div class=\"line\">    color:<span class=\"comment\">#333;</span></div><div class=\"line\">    font-family:arial;</div><div class=\"line\">    font-size: <span class=\"number\">12</span>px;</div><div class=\"line\">    background:white;</div><div class=\"line\">&#125;</div><div class=\"line\">input,textarea,select&#123;</div><div class=\"line\">    font-size:<span class=\"number\">12</span>px;</div><div class=\"line\">    font-size:<span class=\"number\">100</span>%;</div><div class=\"line\">    font-family:arial;</div><div class=\"line\">    font-family:inherit;</div><div class=\"line\">&#125;</div><div class=\"line\">body,h1,h2,h3,h4,h5,h6,p,ul,ol,form&#123;</div><div class=\"line\">    margin:<span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">h4,h5,h6&#123;</div><div class=\"line\">    font-size:<span class=\"number\">1</span>em;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,ol&#123;</div><div class=\"line\">    padding-left:<span class=\"number\">0</span>;</div><div class=\"line\">    list-style-type:none;</div><div class=\"line\">&#125;</div><div class=\"line\">/*image <span class=\"keyword\">with</span> no-border*/</div><div class=\"line\">a img&#123;border:<span class=\"number\">0</span>;&#125;</div><div class=\"line\">img&#123;border:<span class=\"number\">0</span>;&#125;</div></pre></td></tr></table></figure><p></p>\n<p></p><h1>css通用样式库</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">.l&#123;float:left;&#125;.r&#123;float:right;&#125;.cl&#123;clear:both;&#125;</div><div class=\"line\">.n&#123;font-weight:normal; font-style:normal;&#125;.b&#123;font-weight:bold;&#125;.i&#123;font-style:italic;&#125;</div><div class=\"line\">.fa&#123;font-family:Arial;&#125;.fg&#123;font-family:Georgia;&#125;.ft&#123;font-family:Tahoma;&#125;.fl&#123;font-family:Lucida Console;&#125;.fs&#123;font-family:<span class=\"string\">'宋体'</span>;&#125;.fw&#123;font-family:<span class=\"string\">'微软雅黑'</span>;&#125;</div><div class=\"line\">.tc&#123;text-align:center;&#125;.tr&#123;text-align:right;&#125;.tl&#123;text-align:left;&#125;</div><div class=\"line\">.tdl&#123;text-decoration:underline;&#125;.tdn,.tdn:hover,a.tdl:hover&#123;text-decoration:none;&#125;</div><div class=\"line\">.g0&#123;color:<span class=\"comment\">#000000;&#125;.g3&#123;color:#333333;&#125;.g6&#123;color:#666666;&#125;.g9&#123;color:#999999;&#125;.red&#123;color:red;&#125;.wh&#123;color:white;&#125;</span></div><div class=\"line\">.f0&#123;font-size:<span class=\"number\">0</span>;&#125;.f10&#123;font-size:<span class=\"number\">10</span>px;&#125;.f12&#123;font-size:<span class=\"number\">12</span>px;&#125;.f13&#123;font-size:<span class=\"number\">13</span>px;&#125;.f14&#123;font-size:<span class=\"number\">14</span>px;&#125;.f16&#123;font-size:<span class=\"number\">16</span>px;&#125;.f20&#123;font-size:<span class=\"number\">20</span>px;&#125;.f24&#123;font-size:<span class=\"number\">24</span>px;&#125;</div><div class=\"line\">.vm&#123;vertical-align:middle;&#125;.vtb&#123;vertical-align:text-bottom;&#125;.vt&#123;vertical-align:top;&#125;.vn&#123;vertical-align:<span class=\"number\">-2</span>px;&#125;.vimg&#123;margin-bottom:<span class=\"number\">-3</span>px;&#125;</div><div class=\"line\">.m0&#123;margin:<span class=\"number\">0</span>;&#125;.ml1&#123;margin-left:<span class=\"number\">1</span>px;&#125;.ml2&#123;margin-left:<span class=\"number\">2</span>px;&#125;.ml5&#123;margin-left:<span class=\"number\">5</span>px;&#125;.ml10&#123;margin-left:<span class=\"number\">10</span>px;&#125;.ml20&#123;margin-left:<span class=\"number\">20</span>px;&#125;.mr1&#123;margin-right:<span class=\"number\">1</span>;&#125;.mr2&#123;margin-right:<span class=\"number\">2</span>px;&#125;.mr5&#123;margin-right:<span class=\"number\">5</span>px;&#125;.mr10&#123;margin-right:<span class=\"number\">10</span>px;&#125;.mr20&#123;margin-right:<span class=\"number\">20</span>px;&#125;.mt1&#123;margin-top:<span class=\"number\">1</span>;&#125;.mt2&#123;margin-top:<span class=\"number\">2</span>px;&#125;.mt5&#123;margin-top:<span class=\"number\">5</span>px;&#125;.mt10&#123;margin-top:<span class=\"number\">10</span>px;&#125;.mt20&#123;margin-top:<span class=\"number\">20</span>px;&#125;.mb1&#123;margin-bottom:<span class=\"number\">1</span>px;&#125;.mb2&#123;margin-bottom:<span class=\"number\">2</span>px;&#125;.mb5&#123;margin-bottom:<span class=\"number\">5</span>px;&#125;.mb10&#123;margin-bottom:<span class=\"number\">10</span>px;&#125;.mb20&#123;margin-bottom:<span class=\"number\">20</span>px;&#125;.ml<span class=\"number\">-1</span>&#123;margin-left:<span class=\"number\">-1</span>px;&#125;.mt<span class=\"number\">-1</span>&#123;margin-top:<span class=\"number\">-1</span>px;&#125;</div><div class=\"line\">.p1&#123;padding:<span class=\"number\">1</span>px;&#125;.pl1&#123;padding-left:<span class=\"number\">1</span>px;&#125;.pt1&#123;padding-top:<span class=\"number\">1</span>px;&#125;.pr1&#123;padding-right:<span class=\"number\">1</span>px;&#125;.pb1&#123;padding-bottom:<span class=\"number\">1</span>px;&#125;.p2&#123;padding:<span class=\"number\">2</span>px;&#125;.pl2&#123;padding-left:<span class=\"number\">2</span>px;&#125;.pt2&#123;padding-top:<span class=\"number\">2</span>px;&#125;.pr2&#123;padding-right:<span class=\"number\">2</span>px;&#125;.pb2&#123;padding-bottom:<span class=\"number\">2</span>px;&#125;.pl5&#123;padding-left:<span class=\"number\">5</span>px;&#125;.p5&#123;padding:<span class=\"number\">5</span>px;&#125;.pt5&#123;padding-top:<span class=\"number\">5</span>px;&#125;.pr5&#123;padding-right:<span class=\"number\">5</span>px;&#125;.pb5&#123;padding-bottom:<span class=\"number\">5</span>px;&#125;.p10&#123;padding:<span class=\"number\">10</span>px;&#125;.pl10&#123;padding-left:<span class=\"number\">10</span>px;&#125;.pt10&#123;padding-top:<span class=\"number\">10</span>px;&#125;.pr10&#123;padding-right:<span class=\"number\">10</span>px;&#125;.pb10&#123;padding-bottom:<span class=\"number\">10</span>px;&#125;.p20&#123;padding:<span class=\"number\">20</span>px;&#125;.pl20&#123;padding-left:<span class=\"number\">20</span>px;&#125;.pt20&#123;padding-top:<span class=\"number\">20</span>px;&#125;.pr20&#123;padding-right:<span class=\"number\">20</span>px;&#125;.pb20&#123;padding-bottom:<span class=\"number\">20</span>px;&#125;</div><div class=\"line\">.rel&#123;position:relative;&#125;.abs&#123;position:absolute;&#125;</div><div class=\"line\">.dn&#123;display:none;&#125;.db&#123;display:block;&#125;.dib&#123;-moz-inline-stack:inline-block; display:inline-block;&#125;.di&#123;display:inline;&#125;</div><div class=\"line\">.ovh&#123;overflow:hidden;&#125;.ovs&#123;overflow:scroll;&#125;.vh&#123;visibility:hidden;&#125;.vv&#123;visibility:visible;&#125;</div><div class=\"line\">.lh14&#123;line-height:<span class=\"number\">14</span>px;&#125;.lh16&#123;line-height:<span class=\"number\">16</span>px;&#125;.lh18&#123;line-height:<span class=\"number\">18</span>px;&#125;.lh20&#123;line-height:<span class=\"number\">20</span>px;&#125;.lh22&#123;line-height:<span class=\"number\">22</span>px;&#125;.lh24&#123;line-height:<span class=\"number\">24</span>px;&#125;</div><div class=\"line\">.fix&#123;*zoom:<span class=\"number\">1</span>;&#125;.fix:after,.fix:before&#123;display:block; content:<span class=\"string\">\"clear\"</span>; height:<span class=\"number\">0</span>; clear:both; overflow:hidden; visibility:hidden;&#125;.z&#123;_zoom:<span class=\"number\">1</span>;&#125;</div></pre></td></tr></table></figure><p></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"","more":"<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<p><h1>CSS reset</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">body&#123;</div><div class=\"line\">    line-height:<span class=\"number\">1.4</span>;</div><div class=\"line\">    color:<span class=\"comment\">#333;</span></div><div class=\"line\">    font-family:arial;</div><div class=\"line\">    font-size: <span class=\"number\">12</span>px;</div><div class=\"line\">    background:white;</div><div class=\"line\">&#125;</div><div class=\"line\">input,textarea,select&#123;</div><div class=\"line\">    font-size:<span class=\"number\">12</span>px;</div><div class=\"line\">    font-size:<span class=\"number\">100</span>%;</div><div class=\"line\">    font-family:arial;</div><div class=\"line\">    font-family:inherit;</div><div class=\"line\">&#125;</div><div class=\"line\">body,h1,h2,h3,h4,h5,h6,p,ul,ol,form&#123;</div><div class=\"line\">    margin:<span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">h4,h5,h6&#123;</div><div class=\"line\">    font-size:<span class=\"number\">1</span>em;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,ol&#123;</div><div class=\"line\">    padding-left:<span class=\"number\">0</span>;</div><div class=\"line\">    list-style-type:none;</div><div class=\"line\">&#125;</div><div class=\"line\">/*image <span class=\"keyword\">with</span> no-border*/</div><div class=\"line\">a img&#123;border:<span class=\"number\">0</span>;&#125;</div><div class=\"line\">img&#123;border:<span class=\"number\">0</span>;&#125;</div></pre></td></tr></table></figure></p>\n<p><h1>css通用样式库</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">.l&#123;float:left;&#125;.r&#123;float:right;&#125;.cl&#123;clear:both;&#125;</div><div class=\"line\">.n&#123;font-weight:normal; font-style:normal;&#125;.b&#123;font-weight:bold;&#125;.i&#123;font-style:italic;&#125;</div><div class=\"line\">.fa&#123;font-family:Arial;&#125;.fg&#123;font-family:Georgia;&#125;.ft&#123;font-family:Tahoma;&#125;.fl&#123;font-family:Lucida Console;&#125;.fs&#123;font-family:<span class=\"string\">'宋体'</span>;&#125;.fw&#123;font-family:<span class=\"string\">'微软雅黑'</span>;&#125;</div><div class=\"line\">.tc&#123;text-align:center;&#125;.tr&#123;text-align:right;&#125;.tl&#123;text-align:left;&#125;</div><div class=\"line\">.tdl&#123;text-decoration:underline;&#125;.tdn,.tdn:hover,a.tdl:hover&#123;text-decoration:none;&#125;</div><div class=\"line\">.g0&#123;color:<span class=\"comment\">#000000;&#125;.g3&#123;color:#333333;&#125;.g6&#123;color:#666666;&#125;.g9&#123;color:#999999;&#125;.red&#123;color:red;&#125;.wh&#123;color:white;&#125;</span></div><div class=\"line\">.f0&#123;font-size:<span class=\"number\">0</span>;&#125;.f10&#123;font-size:<span class=\"number\">10</span>px;&#125;.f12&#123;font-size:<span class=\"number\">12</span>px;&#125;.f13&#123;font-size:<span class=\"number\">13</span>px;&#125;.f14&#123;font-size:<span class=\"number\">14</span>px;&#125;.f16&#123;font-size:<span class=\"number\">16</span>px;&#125;.f20&#123;font-size:<span class=\"number\">20</span>px;&#125;.f24&#123;font-size:<span class=\"number\">24</span>px;&#125;</div><div class=\"line\">.vm&#123;vertical-align:middle;&#125;.vtb&#123;vertical-align:text-bottom;&#125;.vt&#123;vertical-align:top;&#125;.vn&#123;vertical-align:<span class=\"number\">-2</span>px;&#125;.vimg&#123;margin-bottom:<span class=\"number\">-3</span>px;&#125;</div><div class=\"line\">.m0&#123;margin:<span class=\"number\">0</span>;&#125;.ml1&#123;margin-left:<span class=\"number\">1</span>px;&#125;.ml2&#123;margin-left:<span class=\"number\">2</span>px;&#125;.ml5&#123;margin-left:<span class=\"number\">5</span>px;&#125;.ml10&#123;margin-left:<span class=\"number\">10</span>px;&#125;.ml20&#123;margin-left:<span class=\"number\">20</span>px;&#125;.mr1&#123;margin-right:<span class=\"number\">1</span>;&#125;.mr2&#123;margin-right:<span class=\"number\">2</span>px;&#125;.mr5&#123;margin-right:<span class=\"number\">5</span>px;&#125;.mr10&#123;margin-right:<span class=\"number\">10</span>px;&#125;.mr20&#123;margin-right:<span class=\"number\">20</span>px;&#125;.mt1&#123;margin-top:<span class=\"number\">1</span>;&#125;.mt2&#123;margin-top:<span class=\"number\">2</span>px;&#125;.mt5&#123;margin-top:<span class=\"number\">5</span>px;&#125;.mt10&#123;margin-top:<span class=\"number\">10</span>px;&#125;.mt20&#123;margin-top:<span class=\"number\">20</span>px;&#125;.mb1&#123;margin-bottom:<span class=\"number\">1</span>px;&#125;.mb2&#123;margin-bottom:<span class=\"number\">2</span>px;&#125;.mb5&#123;margin-bottom:<span class=\"number\">5</span>px;&#125;.mb10&#123;margin-bottom:<span class=\"number\">10</span>px;&#125;.mb20&#123;margin-bottom:<span class=\"number\">20</span>px;&#125;.ml<span class=\"number\">-1</span>&#123;margin-left:<span class=\"number\">-1</span>px;&#125;.mt<span class=\"number\">-1</span>&#123;margin-top:<span class=\"number\">-1</span>px;&#125;</div><div class=\"line\">.p1&#123;padding:<span class=\"number\">1</span>px;&#125;.pl1&#123;padding-left:<span class=\"number\">1</span>px;&#125;.pt1&#123;padding-top:<span class=\"number\">1</span>px;&#125;.pr1&#123;padding-right:<span class=\"number\">1</span>px;&#125;.pb1&#123;padding-bottom:<span class=\"number\">1</span>px;&#125;.p2&#123;padding:<span class=\"number\">2</span>px;&#125;.pl2&#123;padding-left:<span class=\"number\">2</span>px;&#125;.pt2&#123;padding-top:<span class=\"number\">2</span>px;&#125;.pr2&#123;padding-right:<span class=\"number\">2</span>px;&#125;.pb2&#123;padding-bottom:<span class=\"number\">2</span>px;&#125;.pl5&#123;padding-left:<span class=\"number\">5</span>px;&#125;.p5&#123;padding:<span class=\"number\">5</span>px;&#125;.pt5&#123;padding-top:<span class=\"number\">5</span>px;&#125;.pr5&#123;padding-right:<span class=\"number\">5</span>px;&#125;.pb5&#123;padding-bottom:<span class=\"number\">5</span>px;&#125;.p10&#123;padding:<span class=\"number\">10</span>px;&#125;.pl10&#123;padding-left:<span class=\"number\">10</span>px;&#125;.pt10&#123;padding-top:<span class=\"number\">10</span>px;&#125;.pr10&#123;padding-right:<span class=\"number\">10</span>px;&#125;.pb10&#123;padding-bottom:<span class=\"number\">10</span>px;&#125;.p20&#123;padding:<span class=\"number\">20</span>px;&#125;.pl20&#123;padding-left:<span class=\"number\">20</span>px;&#125;.pt20&#123;padding-top:<span class=\"number\">20</span>px;&#125;.pr20&#123;padding-right:<span class=\"number\">20</span>px;&#125;.pb20&#123;padding-bottom:<span class=\"number\">20</span>px;&#125;</div><div class=\"line\">.rel&#123;position:relative;&#125;.abs&#123;position:absolute;&#125;</div><div class=\"line\">.dn&#123;display:none;&#125;.db&#123;display:block;&#125;.dib&#123;-moz-inline-stack:inline-block; display:inline-block;&#125;.di&#123;display:inline;&#125;</div><div class=\"line\">.ovh&#123;overflow:hidden;&#125;.ovs&#123;overflow:scroll;&#125;.vh&#123;visibility:hidden;&#125;.vv&#123;visibility:visible;&#125;</div><div class=\"line\">.lh14&#123;line-height:<span class=\"number\">14</span>px;&#125;.lh16&#123;line-height:<span class=\"number\">16</span>px;&#125;.lh18&#123;line-height:<span class=\"number\">18</span>px;&#125;.lh20&#123;line-height:<span class=\"number\">20</span>px;&#125;.lh22&#123;line-height:<span class=\"number\">22</span>px;&#125;.lh24&#123;line-height:<span class=\"number\">24</span>px;&#125;</div><div class=\"line\">.fix&#123;*zoom:<span class=\"number\">1</span>;&#125;.fix:after,.fix:before&#123;display:block; content:<span class=\"string\">\"clear\"</span>; height:<span class=\"number\">0</span>; clear:both; overflow:hidden; visibility:hidden;&#125;.z&#123;_zoom:<span class=\"number\">1</span>;&#125;</div></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"vue或其他小难题整理（麦麦）","_content":"初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D\n<font size=1>**如有转载，请注明出处。**</font>\n## Vue\n## 1、emmet在jsx中不能使用的情况\n> 大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet\n> 我用的是atom编辑器。\n> 首先，当然是打开atom 安装emmet插件 打开设置->key bindings -> 点击 用户键盘映射 ->修改文件\n```javascript\n'atom-text-editor[data-grammar=\"source js jsx\"]':\n  'F12':'atom-html-preview:toggle',\n  'tab': 'emmet:expand-abbreviation-with-tab'\n```\n> 这样就ok啦~ 尽情的使用emmet吧！\n\n## 2、一个关于webpack的问题。\n> 起服务以后，用localhost访问可以访问，\n> 用具体ip 如：192.168.91.75:8080/index 却访问不到地址\n> 这是啥问题呐(⊙o⊙)?\n> 原来原来 只要在配置文件中加上 --host 0.0.0.0 就可以啦\n> 具体在哪里加呢 答案就是在**package.json**中的start中啦~\n```javascript\n\"scripts\": {\n  \"start\": \"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\",\n  \"build\": \"webpack --progress --profile --colors --config webpack.production.config.js\"\n}\n```\n\n## 3、说个vue的 外链css的问题\n> 再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css\n> 于是我import 'xxx.less' --->报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的\n> 后来我才知道 vue中 外链css 要卸载style标签内部 然后@import 'xxx.less'\n> 这样就没问题了~\n> 还有个如果你想在页面的style中使用less或sass要怎么办呢\n> 给style加个 lang=\"less\"就可以啦\n\n<!--more-->\n## 4、对于github一直要输入账户名密码问题\n> git config -- global user.name \"maimai123\"\n> git config --global user.email maimaixxx@163.com\n> git config -- global credential.helperstore\n\n## 5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\n> 路由中换个模式就好了\n> 那么怎么写呢 参考地址：[vue-router](http://router.vuejs.org/en/essentials/history-mode.html)\n\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\" />\n\n## 6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\n```javascript\n  devServer:{ //配置服务器环境\n    colors:true,\n    historyApiFallback:true,\n    inline:true, //自动刷新\n    port:'1234', //修改端口号\n    host : '0.0.0.0',\n    progress:true\n},\n\n```\n\nThere are some additional options:\n\n--content-base <file/directory/url/port>: base path for the content.\n--quiet: don’t output anything to the console.\n--no-info: suppress boring information.\n--colors: add some colors to the output.\n--no-colors: don’t use colors in the output.\n--compress: use gzip compression.\n--host <hostname/ip>: hostname or IP. 0.0.0.0 binds to all hosts.\n--port <number>: port.\n--inline: embed the webpack-dev-server runtime into the bundle.\n--hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.\n--hot --inline also adds the webpack/hot/dev-server entry.\n--public: overrides the host and port used in --inline mode for the client (useful for a VM or Docker).\n--lazy: no watching, compiles on request (cannot be combined with --hot).\n--https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.\n--cert, --cacert, --key: Paths the certificate files.\n--open: opens the url in default browser (for webpack-dev-server versions > 2.0).\n--history-api-fallback: enables support for history API fallback.\n--client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.\n\n> 也可以写在package.json的start中。如：webpack-dev-server --devtool eval --progress --colors --inline --hot --content-base build --port1234\n> 但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,\n\n## 7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\n> 我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。\n> 我在actions、mutations和getters中都默认输出了，即：export default{ ... }, 而在store中还以\n> import * as actions from './actions'\n> 这种方法引入。。。简直作死啊~~\n> 以后你们可别犯这种傻错啊\n\n## 8、换了新电脑是 --air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\n\n\n\n\n\n\n\n\n## 8、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/小难题.md","raw":"---\ntitle: vue或其他小难题整理（麦麦）\n---\n初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D\n<font size=1>**如有转载，请注明出处。**</font>\n## Vue\n## 1、emmet在jsx中不能使用的情况\n> 大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet\n> 我用的是atom编辑器。\n> 首先，当然是打开atom 安装emmet插件 打开设置->key bindings -> 点击 用户键盘映射 ->修改文件\n```javascript\n'atom-text-editor[data-grammar=\"source js jsx\"]':\n  'F12':'atom-html-preview:toggle',\n  'tab': 'emmet:expand-abbreviation-with-tab'\n```\n> 这样就ok啦~ 尽情的使用emmet吧！\n\n## 2、一个关于webpack的问题。\n> 起服务以后，用localhost访问可以访问，\n> 用具体ip 如：192.168.91.75:8080/index 却访问不到地址\n> 这是啥问题呐(⊙o⊙)?\n> 原来原来 只要在配置文件中加上 --host 0.0.0.0 就可以啦\n> 具体在哪里加呢 答案就是在**package.json**中的start中啦~\n```javascript\n\"scripts\": {\n  \"start\": \"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\",\n  \"build\": \"webpack --progress --profile --colors --config webpack.production.config.js\"\n}\n```\n\n## 3、说个vue的 外链css的问题\n> 再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css\n> 于是我import 'xxx.less' --->报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的\n> 后来我才知道 vue中 外链css 要卸载style标签内部 然后@import 'xxx.less'\n> 这样就没问题了~\n> 还有个如果你想在页面的style中使用less或sass要怎么办呢\n> 给style加个 lang=\"less\"就可以啦\n\n<!--more-->\n## 4、对于github一直要输入账户名密码问题\n> git config -- global user.name \"maimai123\"\n> git config --global user.email maimaixxx@163.com\n> git config -- global credential.helperstore\n\n## 5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\n> 路由中换个模式就好了\n> 那么怎么写呢 参考地址：[vue-router](http://router.vuejs.org/en/essentials/history-mode.html)\n\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\" />\n\n## 6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\n```javascript\n  devServer:{ //配置服务器环境\n    colors:true,\n    historyApiFallback:true,\n    inline:true, //自动刷新\n    port:'1234', //修改端口号\n    host : '0.0.0.0',\n    progress:true\n},\n\n```\n\nThere are some additional options:\n\n--content-base <file/directory/url/port>: base path for the content.\n--quiet: don’t output anything to the console.\n--no-info: suppress boring information.\n--colors: add some colors to the output.\n--no-colors: don’t use colors in the output.\n--compress: use gzip compression.\n--host <hostname/ip>: hostname or IP. 0.0.0.0 binds to all hosts.\n--port <number>: port.\n--inline: embed the webpack-dev-server runtime into the bundle.\n--hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.\n--hot --inline also adds the webpack/hot/dev-server entry.\n--public: overrides the host and port used in --inline mode for the client (useful for a VM or Docker).\n--lazy: no watching, compiles on request (cannot be combined with --hot).\n--https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.\n--cert, --cacert, --key: Paths the certificate files.\n--open: opens the url in default browser (for webpack-dev-server versions > 2.0).\n--history-api-fallback: enables support for history API fallback.\n--client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.\n\n> 也可以写在package.json的start中。如：webpack-dev-server --devtool eval --progress --colors --inline --hot --content-base build --port1234\n> 但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,\n\n## 7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\n> 我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。\n> 我在actions、mutations和getters中都默认输出了，即：export default{ ... }, 而在store中还以\n> import * as actions from './actions'\n> 这种方法引入。。。简直作死啊~~\n> 以后你们可别犯这种傻错啊\n\n## 8、换了新电脑是 --air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\n\n\n\n\n\n\n\n\n## 8、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"小难题","published":1,"date":"2017-03-24T09:58:17.263Z","updated":"2017-03-24T09:58:17.270Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gm0003mwig1bw5es42","content":"<p>初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D</p>\n<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h2 id=\"1、emmet在jsx中不能使用的情况\"><a href=\"#1、emmet在jsx中不能使用的情况\" class=\"headerlink\" title=\"1、emmet在jsx中不能使用的情况\"></a>1、emmet在jsx中不能使用的情况</h2><blockquote>\n<p>大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet<br>我用的是atom编辑器。<br>首先，当然是打开atom 安装emmet插件 打开设置-&gt;key bindings -&gt; 点击 用户键盘映射 -&gt;修改文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'atom-text-editor[data-grammar=\"source js jsx\"]'</span>:</div><div class=\"line\">  <span class=\"string\">'F12'</span>:<span class=\"string\">'atom-html-preview:toggle'</span>,</div><div class=\"line\">  <span class=\"string\">'tab'</span>: <span class=\"string\">'emmet:expand-abbreviation-with-tab'</span></div></pre></td></tr></table></figure></p>\n<p>这样就ok啦~ 尽情的使用emmet吧！</p>\n</blockquote>\n<h2 id=\"2、一个关于webpack的问题。\"><a href=\"#2、一个关于webpack的问题。\" class=\"headerlink\" title=\"2、一个关于webpack的问题。\"></a>2、一个关于webpack的问题。</h2><blockquote>\n<p>起服务以后，用localhost访问可以访问，<br>用具体ip 如：192.168.91.75:8080/index 却访问不到地址<br>这是啥问题呐(⊙o⊙)?<br>原来原来 只要在配置文件中加上 –host 0.0.0.0 就可以啦<br>具体在哪里加呢 答案就是在<strong>package.json</strong>中的start中啦~<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</div><div class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\"</span>,</div><div class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --progress --profile --colors --config webpack.production.config.js\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"3、说个vue的-外链css的问题\"><a href=\"#3、说个vue的-外链css的问题\" class=\"headerlink\" title=\"3、说个vue的 外链css的问题\"></a>3、说个vue的 外链css的问题</h2><blockquote>\n<p>再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css<br>于是我import ‘xxx.less’ —&gt;报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的<br>后来我才知道 vue中 外链css 要卸载style标签内部 然后@import ‘xxx.less’<br>这样就没问题了~<br>还有个如果你想在页面的style中使用less或sass要怎么办呢<br>给style加个 lang=”less”就可以啦</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"4、对于github一直要输入账户名密码问题\"><a href=\"#4、对于github一直要输入账户名密码问题\" class=\"headerlink\" title=\"4、对于github一直要输入账户名密码问题\"></a>4、对于github一直要输入账户名密码问题</h2><blockquote>\n<p>git config – global user.name “maimai123”<br>git config –global user.email maimaixxx@163.com<br>git config – global credential.helperstore</p>\n</blockquote>\n<h2 id=\"5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\"><a href=\"#5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\" class=\"headerlink\" title=\"5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\"></a>5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，</h2><blockquote>\n<p>路由中换个模式就好了<br>那么怎么写呢 参考地址：<a href=\"http://router.vuejs.org/en/essentials/history-mode.html\" target=\"_blank\" rel=\"external\">vue-router</a></p>\n</blockquote>\n<p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\"></p>\n<h2 id=\"6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\"><a href=\"#6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\" class=\"headerlink\" title=\"6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\"></a>6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">  devServer:&#123; <span class=\"comment\">//配置服务器环境</span></div><div class=\"line\">    colors:<span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">historyApiFallback</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">inline</span>:<span class=\"literal\">true</span>, <span class=\"comment\">//自动刷新</span></div><div class=\"line\">    port:<span class=\"string\">'1234'</span>, <span class=\"comment\">//修改端口号</span></div><div class=\"line\">    host : <span class=\"string\">'0.0.0.0'</span>,</div><div class=\"line\">    <span class=\"attr\">progress</span>:<span class=\"literal\">true</span></div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>There are some additional options:</p>\n<p>–content-base <file directory=\"\" url=\"\" port=\"\">: base path for the content.<br>–quiet: don’t output anything to the console.<br>–no-info: suppress boring information.<br>–colors: add some colors to the output.<br>–no-colors: don’t use colors in the output.<br>–compress: use gzip compression.<br>–host <hostname ip=\"\">: hostname or IP. 0.0.0.0 binds to all hosts.<br>–port <number>: port.<br>–inline: embed the webpack-dev-server runtime into the bundle.<br>–hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.<br>–hot –inline also adds the webpack/hot/dev-server entry.<br>–public: overrides the host and port used in –inline mode for the client (useful for a VM or Docker).<br>–lazy: no watching, compiles on request (cannot be combined with –hot).<br>–https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.<br>–cert, –cacert, –key: Paths the certificate files.<br>–open: opens the url in default browser (for webpack-dev-server versions &gt; 2.0).<br>–history-api-fallback: enables support for history API fallback.<br>–client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.</number></hostname></file></p>\n<blockquote>\n<p>也可以写在package.json的start中。如：webpack-dev-server –devtool eval –progress –colors –inline –hot –content-base build –port1234<br>但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,</p>\n</blockquote>\n<h2 id=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\"><a href=\"#7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\" class=\"headerlink\" title=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\"></a>7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法</h2><blockquote>\n<p>我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。<br>我在actions、mutations和getters中都默认输出了，即：export default{ … }, 而在store中还以<br>import * as actions from ‘./actions’<br>这种方法引入。。。简直作死啊~~<br>以后你们可别犯这种傻错啊</p>\n</blockquote>\n<h2 id=\"8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\"><a href=\"#8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\" class=\"headerlink\" title=\"8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\"></a>8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学</h2><h2 id=\"8、请耐心等待，麦麦会不定期更新哒\"><a href=\"#8、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"8、请耐心等待，麦麦会不定期更新哒~\"></a>8、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"external\">麦麦</a></p>\n","excerpt":"<p>初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h2 id=\"1、emmet在jsx中不能使用的情况\"><a href=\"#1、emmet在jsx中不能使用的情况\" class=\"headerlink\" title=\"1、emmet在jsx中不能使用的情况\"></a>1、emmet在jsx中不能使用的情况</h2><blockquote>\n<p>大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet<br>我用的是atom编辑器。<br>首先，当然是打开atom 安装emmet插件 打开设置-&gt;key bindings -&gt; 点击 用户键盘映射 -&gt;修改文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'atom-text-editor[data-grammar=\"source js jsx\"]'</span>:</div><div class=\"line\">  <span class=\"string\">'F12'</span>:<span class=\"string\">'atom-html-preview:toggle'</span>,</div><div class=\"line\">  <span class=\"string\">'tab'</span>: <span class=\"string\">'emmet:expand-abbreviation-with-tab'</span></div></pre></td></tr></table></figure></p>\n<p>这样就ok啦~ 尽情的使用emmet吧！</p>\n</blockquote>\n<h2 id=\"2、一个关于webpack的问题。\"><a href=\"#2、一个关于webpack的问题。\" class=\"headerlink\" title=\"2、一个关于webpack的问题。\"></a>2、一个关于webpack的问题。</h2><blockquote>\n<p>起服务以后，用localhost访问可以访问，<br>用具体ip 如：192.168.91.75:8080/index 却访问不到地址<br>这是啥问题呐(⊙o⊙)?<br>原来原来 只要在配置文件中加上 –host 0.0.0.0 就可以啦<br>具体在哪里加呢 答案就是在<strong>package.json</strong>中的start中啦~<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</div><div class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\"</span>,</div><div class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --progress --profile --colors --config webpack.production.config.js\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"3、说个vue的-外链css的问题\"><a href=\"#3、说个vue的-外链css的问题\" class=\"headerlink\" title=\"3、说个vue的 外链css的问题\"></a>3、说个vue的 外链css的问题</h2><blockquote>\n<p>再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css<br>于是我import ‘xxx.less’ —&gt;报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的<br>后来我才知道 vue中 外链css 要卸载style标签内部 然后@import ‘xxx.less’<br>这样就没问题了~<br>还有个如果你想在页面的style中使用less或sass要怎么办呢<br>给style加个 lang=”less”就可以啦</p>\n</blockquote>","more":"<h2 id=\"4、对于github一直要输入账户名密码问题\"><a href=\"#4、对于github一直要输入账户名密码问题\" class=\"headerlink\" title=\"4、对于github一直要输入账户名密码问题\"></a>4、对于github一直要输入账户名密码问题</h2><blockquote>\n<p>git config – global user.name “maimai123”<br>git config –global user.email maimaixxx@163.com<br>git config – global credential.helperstore</p>\n</blockquote>\n<h2 id=\"5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\"><a href=\"#5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\" class=\"headerlink\" title=\"5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\"></a>5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，</h2><blockquote>\n<p>路由中换个模式就好了<br>那么怎么写呢 参考地址：<a href=\"http://router.vuejs.org/en/essentials/history-mode.html\">vue-router</a></p>\n</blockquote>\n<p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\" /></p>\n<h2 id=\"6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\"><a href=\"#6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\" class=\"headerlink\" title=\"6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\"></a>6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">  devServer:&#123; <span class=\"comment\">//配置服务器环境</span></div><div class=\"line\">    colors:<span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">historyApiFallback</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">inline</span>:<span class=\"literal\">true</span>, <span class=\"comment\">//自动刷新</span></div><div class=\"line\">    port:<span class=\"string\">'1234'</span>, <span class=\"comment\">//修改端口号</span></div><div class=\"line\">    host : <span class=\"string\">'0.0.0.0'</span>,</div><div class=\"line\">    <span class=\"attr\">progress</span>:<span class=\"literal\">true</span></div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>There are some additional options:</p>\n<p>–content-base <file/directory/url/port>: base path for the content.<br>–quiet: don’t output anything to the console.<br>–no-info: suppress boring information.<br>–colors: add some colors to the output.<br>–no-colors: don’t use colors in the output.<br>–compress: use gzip compression.<br>–host <hostname/ip>: hostname or IP. 0.0.0.0 binds to all hosts.<br>–port <number>: port.<br>–inline: embed the webpack-dev-server runtime into the bundle.<br>–hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.<br>–hot –inline also adds the webpack/hot/dev-server entry.<br>–public: overrides the host and port used in –inline mode for the client (useful for a VM or Docker).<br>–lazy: no watching, compiles on request (cannot be combined with –hot).<br>–https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.<br>–cert, –cacert, –key: Paths the certificate files.<br>–open: opens the url in default browser (for webpack-dev-server versions &gt; 2.0).<br>–history-api-fallback: enables support for history API fallback.<br>–client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.</p>\n<blockquote>\n<p>也可以写在package.json的start中。如：webpack-dev-server –devtool eval –progress –colors –inline –hot –content-base build –port1234<br>但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,</p>\n</blockquote>\n<h2 id=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\"><a href=\"#7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\" class=\"headerlink\" title=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\"></a>7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法</h2><blockquote>\n<p>我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。<br>我在actions、mutations和getters中都默认输出了，即：export default{ … }, 而在store中还以<br>import * as actions from ‘./actions’<br>这种方法引入。。。简直作死啊~~<br>以后你们可别犯这种傻错啊</p>\n</blockquote>\n<h2 id=\"8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\"><a href=\"#8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\" class=\"headerlink\" title=\"8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\"></a>8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学</h2><h2 id=\"8、请耐心等待，麦麦会不定期更新哒\"><a href=\"#8、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"8、请耐心等待，麦麦会不定期更新哒~\"></a>8、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\">麦麦</a></p>"},{"title":"初学react 简单的table（包含增删查）-by 麦麦","_content":"><i class=\"icon-cloud\"></i>react table\n> 注意：react的script标签必须type为\"text/babel\"！！！\n#主图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\" />\n#点击新增\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\" />\n#搜索\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\" />\n部分代码如下：\n ```python\n var CartBox = React.createClass({\n   //初始化数据，由state控制\n   getInitialState:function(){\n     return {\n       Itemd :\n       [\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ],\n       selItem :[\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ]\n     }\n   },\n   handleChange: function (rows) {\n        this.setState({\n            selItem : rows\n        });\n    },\n   render : function(){\n     return(\n       <div>\n         <WarpLeft onSear={this.handleChange} Itemdata={this.state.Itemd} />\n         <Prop onAdd={this.handleChange} Itemdata={this.state.Itemd} />\n         <WarpRight onDel={this.handleChange} Itemdata={this.state.selItem} />\n       </div>\n     );\n   }\n });\n //搜索\n var WarpLeft = React.createClass({\n   handleAdd :function(e){\n     e.preventDefault();\n     var self = this;\n     var string = self.refs.findVal.value;\n     var rows = self.props.Itemdata;\n     var dataIn = \"\";\n     var array =[];\n     if(string.length > 0){\n       $.each(rows,function(i,item){\n         dataIn = item.goodsname.indexOf(string);\n         if( dataIn > -1){\n           array.push(item);\n         }\n       });\n     }else{\n       array = self.props.Itemdata;\n     }\n     this.props.onSear(array);\n   },\n   render :function(){\n     var self = this;\n     return(\n       <div className=\"pull-left f2 he6 mt12\">\n         <form>\n           <input id=\"search\" ref=\"findVal\" type=\"text\" autoComplete=\"off\" placeholder=\"请输入名称搜索\"/>\n           <button className=\"btn-sm r btn\" onClick={self.handleAdd}>搜索</button>\n         </form>\n       </div>\n     );\n   }\n });\n //新增弹出框\n var Prop = React.createClass({\n   handleAdd : function(e){\n     var self = this;\n     $(\".propBox\").show();\n   },\n   handleCan : function(e){\n     var self = this;\n     $(\".propBox\").hide();\n   },\n   handleYes : function(e){\n     var self = this;\n     var goodsname = self.refs.goodsname.value.trim();\n     var batch = self.refs.batch.value.trim();\n     var goodscolor = self.refs.goodscolor.value.trim();\n     var prize = self.refs.prize.value.trim();\n     var rows = self.props.Itemdata;\n     if (goodsname != '' & batch != '' & goodscolor != '' & prize != '') {\n        rows.push({'goodsname':goodsname,'batch':batch,'goodscolor':goodscolor,'price':prize});\n        this.props.onAdd(rows);\n     }\n     self.refs.goodsname.value = \"\";\n     self.refs.batch.value= \"\";\n     self.refs.goodscolor.value=\"\";\n     self.refs.prize.value=\"\";\n     $(\".propBox\").hide();\n   },\n```\n<!--more-->\n```python\nrender :function(){\n  var self = this;\n  return (\n    <div>\n    <button onClick={self.handleAdd} className=\"addNew btn mt10 btn-primary\">新增</button>\n    <div className=\"propBox hide\"> <div onClick={self.handleCan} className=\"close\">×</div>\n    <br/>\n      <div className=\"row\">\n        <label htmlFor=\"goodsname\">物品：</label><input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"batch\">批号：</label><input ref=\"batch\" type=\"text\" id=\"batch\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"goodscolor\">颜色：</label><input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"prize\">价格：</label><input ref=\"prize\" type=\"text\" id=\"prize\"/>\n      </div>\n      <div className=\"row tc\">\n        <button onClick={self.handleYes} className=\"btn btn-sm btn-primary\">确定</button>\n      </div>\n    </div>\n    </div>\n);\n}\n});\n//展示数据\nvar WarpRight = React.createClass({\nhandleDel : function(e){\n  var delIndex = e.target.getAttribute('data-key');\n  this.props.Itemdata.splice(delIndex, 1);\n  this.props.onDel(this.props.Itemdata);\n},\nrender :function(){\n  var self = this;\n  return(\n    <div className=\"pull-right f6 he6 l\">\n    <table className=\"table mt10\">\n      <thead>\n        <tr>\n          <th>物品</th>\n          <th>批号</th>\n          <th>颜色</th>\n          <th>价格</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        this.props.Itemdata.map( function(item,i){\n          return (\n            <tr key={i}>\n              <td key={i}>{item.goodsname}</td>\n              <td>{item.batch}</td>\n              <td>{item.goodscolor}</td>\n              <td>{item.price}</td>\n              <td><button onClick={self.handleDel} className=\"destroy\"  data-key={i} >delete</button></td>\n            </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n    </div>\n  );\n}\n});\nReactDOM.render(\n<CartBox />,\ndocument.getElementById(\"warp\")\n);\n```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/react-table.md","raw":"---\ntitle: 初学react 简单的table（包含增删查）-by 麦麦\n---\n><i class=\"icon-cloud\"></i>react table\n> 注意：react的script标签必须type为\"text/babel\"！！！\n#主图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\" />\n#点击新增\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\" />\n#搜索\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\" />\n部分代码如下：\n ```python\n var CartBox = React.createClass({\n   //初始化数据，由state控制\n   getInitialState:function(){\n     return {\n       Itemd :\n       [\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ],\n       selItem :[\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ]\n     }\n   },\n   handleChange: function (rows) {\n        this.setState({\n            selItem : rows\n        });\n    },\n   render : function(){\n     return(\n       <div>\n         <WarpLeft onSear={this.handleChange} Itemdata={this.state.Itemd} />\n         <Prop onAdd={this.handleChange} Itemdata={this.state.Itemd} />\n         <WarpRight onDel={this.handleChange} Itemdata={this.state.selItem} />\n       </div>\n     );\n   }\n });\n //搜索\n var WarpLeft = React.createClass({\n   handleAdd :function(e){\n     e.preventDefault();\n     var self = this;\n     var string = self.refs.findVal.value;\n     var rows = self.props.Itemdata;\n     var dataIn = \"\";\n     var array =[];\n     if(string.length > 0){\n       $.each(rows,function(i,item){\n         dataIn = item.goodsname.indexOf(string);\n         if( dataIn > -1){\n           array.push(item);\n         }\n       });\n     }else{\n       array = self.props.Itemdata;\n     }\n     this.props.onSear(array);\n   },\n   render :function(){\n     var self = this;\n     return(\n       <div className=\"pull-left f2 he6 mt12\">\n         <form>\n           <input id=\"search\" ref=\"findVal\" type=\"text\" autoComplete=\"off\" placeholder=\"请输入名称搜索\"/>\n           <button className=\"btn-sm r btn\" onClick={self.handleAdd}>搜索</button>\n         </form>\n       </div>\n     );\n   }\n });\n //新增弹出框\n var Prop = React.createClass({\n   handleAdd : function(e){\n     var self = this;\n     $(\".propBox\").show();\n   },\n   handleCan : function(e){\n     var self = this;\n     $(\".propBox\").hide();\n   },\n   handleYes : function(e){\n     var self = this;\n     var goodsname = self.refs.goodsname.value.trim();\n     var batch = self.refs.batch.value.trim();\n     var goodscolor = self.refs.goodscolor.value.trim();\n     var prize = self.refs.prize.value.trim();\n     var rows = self.props.Itemdata;\n     if (goodsname != '' & batch != '' & goodscolor != '' & prize != '') {\n        rows.push({'goodsname':goodsname,'batch':batch,'goodscolor':goodscolor,'price':prize});\n        this.props.onAdd(rows);\n     }\n     self.refs.goodsname.value = \"\";\n     self.refs.batch.value= \"\";\n     self.refs.goodscolor.value=\"\";\n     self.refs.prize.value=\"\";\n     $(\".propBox\").hide();\n   },\n```\n<!--more-->\n```python\nrender :function(){\n  var self = this;\n  return (\n    <div>\n    <button onClick={self.handleAdd} className=\"addNew btn mt10 btn-primary\">新增</button>\n    <div className=\"propBox hide\"> <div onClick={self.handleCan} className=\"close\">×</div>\n    <br/>\n      <div className=\"row\">\n        <label htmlFor=\"goodsname\">物品：</label><input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"batch\">批号：</label><input ref=\"batch\" type=\"text\" id=\"batch\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"goodscolor\">颜色：</label><input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"prize\">价格：</label><input ref=\"prize\" type=\"text\" id=\"prize\"/>\n      </div>\n      <div className=\"row tc\">\n        <button onClick={self.handleYes} className=\"btn btn-sm btn-primary\">确定</button>\n      </div>\n    </div>\n    </div>\n);\n}\n});\n//展示数据\nvar WarpRight = React.createClass({\nhandleDel : function(e){\n  var delIndex = e.target.getAttribute('data-key');\n  this.props.Itemdata.splice(delIndex, 1);\n  this.props.onDel(this.props.Itemdata);\n},\nrender :function(){\n  var self = this;\n  return(\n    <div className=\"pull-right f6 he6 l\">\n    <table className=\"table mt10\">\n      <thead>\n        <tr>\n          <th>物品</th>\n          <th>批号</th>\n          <th>颜色</th>\n          <th>价格</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        this.props.Itemdata.map( function(item,i){\n          return (\n            <tr key={i}>\n              <td key={i}>{item.goodsname}</td>\n              <td>{item.batch}</td>\n              <td>{item.goodscolor}</td>\n              <td>{item.price}</td>\n              <td><button onClick={self.handleDel} className=\"destroy\"  data-key={i} >delete</button></td>\n            </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n    </div>\n  );\n}\n});\nReactDOM.render(\n<CartBox />,\ndocument.getElementById(\"warp\")\n);\n```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"react-table","published":1,"date":"2017-03-24T09:58:17.231Z","updated":"2017-03-24T09:58:17.241Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gm0004mwigw3v2g5cu","content":"<blockquote>\n<p><i class=\"icon-cloud\"></i>react table<br>注意：react的script标签必须type为”text/babel”！！！</p>\n<p>#主图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\"></p>\n<p>#点击新增<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\"></p>\n<p>#搜索<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\"><br>部分代码如下：<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">var CartBox = React.createClass(&#123;</div><div class=\"line\">  //初始化数据，由state控制</div><div class=\"line\">  getInitialState:function()&#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      Itemd :</div><div class=\"line\">      [</div><div class=\"line\">        &#123;\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"&#125;</div><div class=\"line\">      ],</div><div class=\"line\">      selItem :[</div><div class=\"line\">        &#123;\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"&#125;</div><div class=\"line\">      ]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  handleChange: function (rows) &#123;</div><div class=\"line\">       this.setState(&#123;</div><div class=\"line\">           selItem : rows</div><div class=\"line\">       &#125;);</div><div class=\"line\">   &#125;,</div><div class=\"line\">  render : function()&#123;</div><div class=\"line\">    return(</div><div class=\"line\">      &lt;div&gt;</div><div class=\"line\">        &lt;WarpLeft onSear=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</div><div class=\"line\">        &lt;Prop onAdd=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</div><div class=\"line\">        &lt;WarpRight onDel=&#123;this.handleChange&#125; Itemdata=&#123;this.state.selItem&#125; /&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">//搜索</div><div class=\"line\">var WarpLeft = React.createClass(&#123;</div><div class=\"line\">  handleAdd :function(e)&#123;</div><div class=\"line\">    e.preventDefault();</div><div class=\"line\">    var self = this;</div><div class=\"line\">    var string = self.refs.findVal.value;</div><div class=\"line\">    var rows = self.props.Itemdata;</div><div class=\"line\">    var dataIn = \"\";</div><div class=\"line\">    var array =[];</div><div class=\"line\">    if(string.length &gt; 0)&#123;</div><div class=\"line\">      $.each(rows,function(i,item)&#123;</div><div class=\"line\">        dataIn = item.goodsname.indexOf(string);</div><div class=\"line\">        if( dataIn &gt; -1)&#123;</div><div class=\"line\">          array.push(item);</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">      array = self.props.Itemdata;</div><div class=\"line\">    &#125;</div><div class=\"line\">    this.props.onSear(array);</div><div class=\"line\">  &#125;,</div><div class=\"line\">  render :function()&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    return(</div><div class=\"line\">      &lt;div className=\"pull-left f2 he6 mt12\"&gt;</div><div class=\"line\">        &lt;form&gt;</div><div class=\"line\">          &lt;input id=\"search\" ref=\"findVal\" type=\"text\" autoComplete=\"off\" placeholder=\"请输入名称搜索\"/&gt;</div><div class=\"line\">          &lt;button className=\"btn-sm r btn\" onClick=&#123;self.handleAdd&#125;&gt;搜索&lt;/button&gt;</div><div class=\"line\">        &lt;/form&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">//新增弹出框</div><div class=\"line\">var Prop = React.createClass(&#123;</div><div class=\"line\">  handleAdd : function(e)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    $(\".propBox\").show();</div><div class=\"line\">  &#125;,</div><div class=\"line\">  handleCan : function(e)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    $(\".propBox\").hide();</div><div class=\"line\">  &#125;,</div><div class=\"line\">  handleYes : function(e)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    var goodsname = self.refs.goodsname.value.trim();</div><div class=\"line\">    var batch = self.refs.batch.value.trim();</div><div class=\"line\">    var goodscolor = self.refs.goodscolor.value.trim();</div><div class=\"line\">    var prize = self.refs.prize.value.trim();</div><div class=\"line\">    var rows = self.props.Itemdata;</div><div class=\"line\">    if (goodsname != '' &amp; batch != '' &amp; goodscolor != '' &amp; prize != '') &#123;</div><div class=\"line\">       rows.push(&#123;'goodsname':goodsname,'batch':batch,'goodscolor':goodscolor,'price':prize&#125;);</div><div class=\"line\">       this.props.onAdd(rows);</div><div class=\"line\">    &#125;</div><div class=\"line\">    self.refs.goodsname.value = \"\";</div><div class=\"line\">    self.refs.batch.value= \"\";</div><div class=\"line\">    self.refs.goodscolor.value=\"\";</div><div class=\"line\">    self.refs.prize.value=\"\";</div><div class=\"line\">    $(\".propBox\").hide();</div><div class=\"line\">  &#125;,</div></pre></td></tr></table></figure></p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">render :function()&#123;</div><div class=\"line\">  var self = this;</div><div class=\"line\">  return (</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">    &lt;button onClick=&#123;self.handleAdd&#125; className=\"addNew btn mt10 btn-primary\"&gt;新增&lt;/button&gt;</div><div class=\"line\">    &lt;div className=\"propBox hide\"&gt; &lt;div onClick=&#123;self.handleCan&#125; className=\"close\"&gt;×&lt;/div&gt;</div><div class=\"line\">    &lt;br/&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"goodsname\"&gt;物品：&lt;/label&gt;&lt;input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"batch\"&gt;批号：&lt;/label&gt;&lt;input ref=\"batch\" type=\"text\" id=\"batch\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"goodscolor\"&gt;颜色：&lt;/label&gt;&lt;input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"prize\"&gt;价格：&lt;/label&gt;&lt;input ref=\"prize\" type=\"text\" id=\"prize\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row tc\"&gt;</div><div class=\"line\">        &lt;button onClick=&#123;self.handleYes&#125; className=\"btn btn-sm btn-primary\"&gt;确定&lt;/button&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">);</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">//展示数据</div><div class=\"line\">var WarpRight = React.createClass(&#123;</div><div class=\"line\">handleDel : function(e)&#123;</div><div class=\"line\">  var delIndex = e.target.getAttribute('data-key');</div><div class=\"line\">  this.props.Itemdata.splice(delIndex, 1);</div><div class=\"line\">  this.props.onDel(this.props.Itemdata);</div><div class=\"line\">&#125;,</div><div class=\"line\">render :function()&#123;</div><div class=\"line\">  var self = this;</div><div class=\"line\">  return(</div><div class=\"line\">    &lt;div className=\"pull-right f6 he6 l\"&gt;</div><div class=\"line\">    &lt;table className=\"table mt10\"&gt;</div><div class=\"line\">      &lt;thead&gt;</div><div class=\"line\">        &lt;tr&gt;</div><div class=\"line\">          &lt;th&gt;物品&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;批号&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;颜色&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;价格&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;操作&lt;/th&gt;</div><div class=\"line\">        &lt;/tr&gt;</div><div class=\"line\">      &lt;/thead&gt;</div><div class=\"line\">      &lt;tbody&gt;</div><div class=\"line\">      &#123;</div><div class=\"line\">        this.props.Itemdata.map( function(item,i)&#123;</div><div class=\"line\">          return (</div><div class=\"line\">            &lt;tr key=&#123;i&#125;&gt;</div><div class=\"line\">              &lt;td key=&#123;i&#125;&gt;&#123;item.goodsname&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&#123;item.batch&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&#123;item.goodscolor&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&#123;item.price&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&lt;button onClick=&#123;self.handleDel&#125; className=\"destroy\"  data-key=&#123;i&#125; &gt;delete&lt;/button&gt;&lt;/td&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">          )</div><div class=\"line\">        &#125;)</div><div class=\"line\">      &#125;</div><div class=\"line\">      &lt;/tbody&gt;</div><div class=\"line\">    &lt;/table&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">  );</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">&lt;CartBox /&gt;,</div><div class=\"line\">document.getElementById(\"warp\")</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"<blockquote>\n<p><i class=\"icon-cloud\"></i>react table<br>注意：react的script标签必须type为”text/babel”！！！</p>\n<p>#主图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\" /></p>\n<p>#点击新增<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\" /></p>\n<p>#搜索<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\" /><br>部分代码如下：<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">var CartBox = React.createClass(&#123;</div><div class=\"line\">  //初始化数据，由state控制</div><div class=\"line\">  getInitialState:function()&#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      Itemd :</div><div class=\"line\">      [</div><div class=\"line\">        &#123;\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"&#125;</div><div class=\"line\">      ],</div><div class=\"line\">      selItem :[</div><div class=\"line\">        &#123;\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"&#125;,</div><div class=\"line\">        &#123;\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"&#125;</div><div class=\"line\">      ]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  handleChange: function (rows) &#123;</div><div class=\"line\">       this.setState(&#123;</div><div class=\"line\">           selItem : rows</div><div class=\"line\">       &#125;);</div><div class=\"line\">   &#125;,</div><div class=\"line\">  render : function()&#123;</div><div class=\"line\">    return(</div><div class=\"line\">      &lt;div&gt;</div><div class=\"line\">        &lt;WarpLeft onSear=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</div><div class=\"line\">        &lt;Prop onAdd=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</div><div class=\"line\">        &lt;WarpRight onDel=&#123;this.handleChange&#125; Itemdata=&#123;this.state.selItem&#125; /&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">//搜索</div><div class=\"line\">var WarpLeft = React.createClass(&#123;</div><div class=\"line\">  handleAdd :function(e)&#123;</div><div class=\"line\">    e.preventDefault();</div><div class=\"line\">    var self = this;</div><div class=\"line\">    var string = self.refs.findVal.value;</div><div class=\"line\">    var rows = self.props.Itemdata;</div><div class=\"line\">    var dataIn = \"\";</div><div class=\"line\">    var array =[];</div><div class=\"line\">    if(string.length &gt; 0)&#123;</div><div class=\"line\">      $.each(rows,function(i,item)&#123;</div><div class=\"line\">        dataIn = item.goodsname.indexOf(string);</div><div class=\"line\">        if( dataIn &gt; -1)&#123;</div><div class=\"line\">          array.push(item);</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">      array = self.props.Itemdata;</div><div class=\"line\">    &#125;</div><div class=\"line\">    this.props.onSear(array);</div><div class=\"line\">  &#125;,</div><div class=\"line\">  render :function()&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    return(</div><div class=\"line\">      &lt;div className=\"pull-left f2 he6 mt12\"&gt;</div><div class=\"line\">        &lt;form&gt;</div><div class=\"line\">          &lt;input id=\"search\" ref=\"findVal\" type=\"text\" autoComplete=\"off\" placeholder=\"请输入名称搜索\"/&gt;</div><div class=\"line\">          &lt;button className=\"btn-sm r btn\" onClick=&#123;self.handleAdd&#125;&gt;搜索&lt;/button&gt;</div><div class=\"line\">        &lt;/form&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">//新增弹出框</div><div class=\"line\">var Prop = React.createClass(&#123;</div><div class=\"line\">  handleAdd : function(e)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    $(\".propBox\").show();</div><div class=\"line\">  &#125;,</div><div class=\"line\">  handleCan : function(e)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    $(\".propBox\").hide();</div><div class=\"line\">  &#125;,</div><div class=\"line\">  handleYes : function(e)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    var goodsname = self.refs.goodsname.value.trim();</div><div class=\"line\">    var batch = self.refs.batch.value.trim();</div><div class=\"line\">    var goodscolor = self.refs.goodscolor.value.trim();</div><div class=\"line\">    var prize = self.refs.prize.value.trim();</div><div class=\"line\">    var rows = self.props.Itemdata;</div><div class=\"line\">    if (goodsname != '' &amp; batch != '' &amp; goodscolor != '' &amp; prize != '') &#123;</div><div class=\"line\">       rows.push(&#123;'goodsname':goodsname,'batch':batch,'goodscolor':goodscolor,'price':prize&#125;);</div><div class=\"line\">       this.props.onAdd(rows);</div><div class=\"line\">    &#125;</div><div class=\"line\">    self.refs.goodsname.value = \"\";</div><div class=\"line\">    self.refs.batch.value= \"\";</div><div class=\"line\">    self.refs.goodscolor.value=\"\";</div><div class=\"line\">    self.refs.prize.value=\"\";</div><div class=\"line\">    $(\".propBox\").hide();</div><div class=\"line\">  &#125;,</div></pre></td></tr></table></figure></p>\n</blockquote>","more":"<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">render :function()&#123;</div><div class=\"line\">  var self = this;</div><div class=\"line\">  return (</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">    &lt;button onClick=&#123;self.handleAdd&#125; className=\"addNew btn mt10 btn-primary\"&gt;新增&lt;/button&gt;</div><div class=\"line\">    &lt;div className=\"propBox hide\"&gt; &lt;div onClick=&#123;self.handleCan&#125; className=\"close\"&gt;×&lt;/div&gt;</div><div class=\"line\">    &lt;br/&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"goodsname\"&gt;物品：&lt;/label&gt;&lt;input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"batch\"&gt;批号：&lt;/label&gt;&lt;input ref=\"batch\" type=\"text\" id=\"batch\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"goodscolor\"&gt;颜色：&lt;/label&gt;&lt;input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row\"&gt;</div><div class=\"line\">        &lt;label htmlFor=\"prize\"&gt;价格：&lt;/label&gt;&lt;input ref=\"prize\" type=\"text\" id=\"prize\"/&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">      &lt;div className=\"row tc\"&gt;</div><div class=\"line\">        &lt;button onClick=&#123;self.handleYes&#125; className=\"btn btn-sm btn-primary\"&gt;确定&lt;/button&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">);</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">//展示数据</div><div class=\"line\">var WarpRight = React.createClass(&#123;</div><div class=\"line\">handleDel : function(e)&#123;</div><div class=\"line\">  var delIndex = e.target.getAttribute('data-key');</div><div class=\"line\">  this.props.Itemdata.splice(delIndex, 1);</div><div class=\"line\">  this.props.onDel(this.props.Itemdata);</div><div class=\"line\">&#125;,</div><div class=\"line\">render :function()&#123;</div><div class=\"line\">  var self = this;</div><div class=\"line\">  return(</div><div class=\"line\">    &lt;div className=\"pull-right f6 he6 l\"&gt;</div><div class=\"line\">    &lt;table className=\"table mt10\"&gt;</div><div class=\"line\">      &lt;thead&gt;</div><div class=\"line\">        &lt;tr&gt;</div><div class=\"line\">          &lt;th&gt;物品&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;批号&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;颜色&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;价格&lt;/th&gt;</div><div class=\"line\">          &lt;th&gt;操作&lt;/th&gt;</div><div class=\"line\">        &lt;/tr&gt;</div><div class=\"line\">      &lt;/thead&gt;</div><div class=\"line\">      &lt;tbody&gt;</div><div class=\"line\">      &#123;</div><div class=\"line\">        this.props.Itemdata.map( function(item,i)&#123;</div><div class=\"line\">          return (</div><div class=\"line\">            &lt;tr key=&#123;i&#125;&gt;</div><div class=\"line\">              &lt;td key=&#123;i&#125;&gt;&#123;item.goodsname&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&#123;item.batch&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&#123;item.goodscolor&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&#123;item.price&#125;&lt;/td&gt;</div><div class=\"line\">              &lt;td&gt;&lt;button onClick=&#123;self.handleDel&#125; className=\"destroy\"  data-key=&#123;i&#125; &gt;delete&lt;/button&gt;&lt;/td&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">          )</div><div class=\"line\">        &#125;)</div><div class=\"line\">      &#125;</div><div class=\"line\">      &lt;/tbody&gt;</div><div class=\"line\">    &lt;/table&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">  );</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">&lt;CartBox /&gt;,</div><div class=\"line\">document.getElementById(\"warp\")</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"jquery 简单插件教程（麦麦）","_content":"插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的alert\n ```python\n//弹出alert弹框\n$.fn.alert = function(options){\n  var dets = {\n    Event : \"click\",  //默认使用click事件\n    msg : \"hello world!\" //默认弹出内容为hello，world\n  }\n  var opts = $.extend(dets,options);\n  var $this = $(this);\n  $this.on( opts.Event ,function(e){\n    alert(opts.msg);\n  });\n}\n\n//调用alert插件\n$(\"div\").alert({\n  Event :　\"mouseover\",\n  msg : \"我改变了默认弹出内容\"\n});\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>输入自动完成插件\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.autocomplete = function(options){\n     var defaults ={\n       borderColor : \"#C7F4EE\"\n     };\n     var opts = $.extend(defaults,options);\n     var self = $(this);\n     flag = '0'; //没有下拉框\n     record =\"\";\n     // 发起ajax请求拿数据\n     $.ajax({\n       url : '/autocomplete/json.htm',\n       type : 'GET',\n       dataType : 'json',\n       success : function(data){\n         record = data; //取到json数据\n       }\n     });\n     function getFocus(){\n       var len = self.val().length;\n       var str = self.val().toLowerCase();\n       if(len > 0){ //输入框中有数据\n           if(flag == '0'){\n             $(\"<div class='down'></div>\").css({\n                 'width':self.outerWidth()-2,\n                 'border': '1px solid',\n                 'border-color':opts.borderColor,\n                 'border-top':'none',\n                 'overflow' : 'hidden'\n               }).insertAfter(self);\n               flag = '1'; //容器已显示\n               // 遍历 data 取数据放入容器\n               $.each( record ,function(i,v){\n                 $.each(v,function(j,k){\n                 var jsonText = k.text;\n                 var jsonConvert = k.convert;\n                 if( jsonText.indexOf(str) > '-1'){\n                   if(jsonConvert){\n                     $(\"<div class='single'>\"+jsonConvert+\"</div>\").appendTo($(\".down\"));\n                   }else{\n                     $(\"<div class='single'>\"+jsonText+\"</div>\").appendTo($(\".down\"));\n                   }\n                 }\n                 });\n               });\n\n           }\n       }else{ //输入框中无数据\n         $(\".down\").remove();\n         flag = '0';\n       }\n     }\n     self.on({\n       keyup :function(e){\n         $(\".down\").remove();\n         flag = '0';\n         getFocus();\n         function translate(){\n           var string =self.val().toLowerCase();\n           $.each( record ,function(i,v){\n             $.each(v,function(j,k){\n             var jsonText = k.text;\n             var jsonMean = k.mean;\n             if( jsonText.indexOf(string) > '-1'){\n               $(\"#show\").text(string+\" ------ \" + jsonMean);\n             }\n             });\n           });\n         }\n         $(\".down\").on('click',\".single\",function(){\n           self.val($(this).text());\n           translate();\n           $(\".down\").remove();\n           flag = '0';\n         });\n         self.siblings('button').on('click',function(){\n           translate();\n         });\n       },\n       blur : function(e){\n         setTimeout(function(){\n           $(\".down\").remove();\n           flag = '0';\n         },200);\n       }\n     });\n\n   };\n })(jQuery);\n//调用\n$(\"#myInput\").autocomplete();\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/插件.md","raw":"---\ntitle: jquery 简单插件教程（麦麦）\n---\n插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的alert\n ```python\n//弹出alert弹框\n$.fn.alert = function(options){\n  var dets = {\n    Event : \"click\",  //默认使用click事件\n    msg : \"hello world!\" //默认弹出内容为hello，world\n  }\n  var opts = $.extend(dets,options);\n  var $this = $(this);\n  $this.on( opts.Event ,function(e){\n    alert(opts.msg);\n  });\n}\n\n//调用alert插件\n$(\"div\").alert({\n  Event :　\"mouseover\",\n  msg : \"我改变了默认弹出内容\"\n});\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>输入自动完成插件\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.autocomplete = function(options){\n     var defaults ={\n       borderColor : \"#C7F4EE\"\n     };\n     var opts = $.extend(defaults,options);\n     var self = $(this);\n     flag = '0'; //没有下拉框\n     record =\"\";\n     // 发起ajax请求拿数据\n     $.ajax({\n       url : '/autocomplete/json.htm',\n       type : 'GET',\n       dataType : 'json',\n       success : function(data){\n         record = data; //取到json数据\n       }\n     });\n     function getFocus(){\n       var len = self.val().length;\n       var str = self.val().toLowerCase();\n       if(len > 0){ //输入框中有数据\n           if(flag == '0'){\n             $(\"<div class='down'></div>\").css({\n                 'width':self.outerWidth()-2,\n                 'border': '1px solid',\n                 'border-color':opts.borderColor,\n                 'border-top':'none',\n                 'overflow' : 'hidden'\n               }).insertAfter(self);\n               flag = '1'; //容器已显示\n               // 遍历 data 取数据放入容器\n               $.each( record ,function(i,v){\n                 $.each(v,function(j,k){\n                 var jsonText = k.text;\n                 var jsonConvert = k.convert;\n                 if( jsonText.indexOf(str) > '-1'){\n                   if(jsonConvert){\n                     $(\"<div class='single'>\"+jsonConvert+\"</div>\").appendTo($(\".down\"));\n                   }else{\n                     $(\"<div class='single'>\"+jsonText+\"</div>\").appendTo($(\".down\"));\n                   }\n                 }\n                 });\n               });\n\n           }\n       }else{ //输入框中无数据\n         $(\".down\").remove();\n         flag = '0';\n       }\n     }\n     self.on({\n       keyup :function(e){\n         $(\".down\").remove();\n         flag = '0';\n         getFocus();\n         function translate(){\n           var string =self.val().toLowerCase();\n           $.each( record ,function(i,v){\n             $.each(v,function(j,k){\n             var jsonText = k.text;\n             var jsonMean = k.mean;\n             if( jsonText.indexOf(string) > '-1'){\n               $(\"#show\").text(string+\" ------ \" + jsonMean);\n             }\n             });\n           });\n         }\n         $(\".down\").on('click',\".single\",function(){\n           self.val($(this).text());\n           translate();\n           $(\".down\").remove();\n           flag = '0';\n         });\n         self.siblings('button').on('click',function(){\n           translate();\n         });\n       },\n       blur : function(e){\n         setTimeout(function(){\n           $(\".down\").remove();\n           flag = '0';\n         },200);\n       }\n     });\n\n   };\n })(jQuery);\n//调用\n$(\"#myInput\").autocomplete();\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"插件","published":1,"date":"2017-03-24T09:58:17.304Z","updated":"2017-03-24T09:58:17.314Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gn0005mwigmd9nq37u","content":"<p>插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。</p>\n<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的alert<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">//弹出alert弹框</div><div class=\"line\">$.fn.alert = function(options)&#123;</div><div class=\"line\">  var dets = &#123;</div><div class=\"line\">    Event : <span class=\"string\">\"click\"</span>,  //默认使用click事件</div><div class=\"line\">    msg : <span class=\"string\">\"hello world!\"</span> //默认弹出内容为hello，world</div><div class=\"line\">  &#125;</div><div class=\"line\">  var opts = $.extend(dets,options);</div><div class=\"line\">  var $this = $(this);</div><div class=\"line\">  $this.on( opts.Event ,function(e)&#123;</div><div class=\"line\">    alert(opts.msg);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//调用alert插件</div><div class=\"line\">$(<span class=\"string\">\"div\"</span>).alert(&#123;</div><div class=\"line\">  Event :　<span class=\"string\">\"mouseover\"</span>,</div><div class=\"line\">  msg : <span class=\"string\">\"我改变了默认弹出内容\"</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>输入自动完成插件<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\"><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ;(function($)&#123;</div><div class=\"line\">   $.fn.autocomplete = function(options)&#123;</div><div class=\"line\">     var defaults =&#123;</div><div class=\"line\">       borderColor : <span class=\"string\">\"#C7F4EE\"</span></div><div class=\"line\">     &#125;;</div><div class=\"line\">     var opts = $.extend(defaults,options);</div><div class=\"line\">     var self = $(this);</div><div class=\"line\">     flag = <span class=\"string\">'0'</span>; //没有下拉框</div><div class=\"line\">     record =<span class=\"string\">\"\"</span>;</div><div class=\"line\">     // 发起ajax请求拿数据</div><div class=\"line\">     $.ajax(&#123;</div><div class=\"line\">       url : <span class=\"string\">'/autocomplete/json.htm'</span>,</div><div class=\"line\">       type : <span class=\"string\">'GET'</span>,</div><div class=\"line\">       dataType : <span class=\"string\">'json'</span>,</div><div class=\"line\">       success : function(data)&#123;</div><div class=\"line\">         record = data; //取到json数据</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;);</div><div class=\"line\">     function getFocus()&#123;</div><div class=\"line\">       var len = self.val().length;</div><div class=\"line\">       var str = self.val().toLowerCase();</div><div class=\"line\">       <span class=\"keyword\">if</span>(len &gt; <span class=\"number\">0</span>)&#123; //输入框中有数据</div><div class=\"line\">           <span class=\"keyword\">if</span>(flag == <span class=\"string\">'0'</span>)&#123;</div><div class=\"line\">             $(<span class=\"string\">\"&lt;div class='down'&gt;&lt;/div&gt;\"</span>).css(&#123;</div><div class=\"line\">                 <span class=\"string\">'width'</span>:self.outerWidth()<span class=\"number\">-2</span>,</div><div class=\"line\">                 <span class=\"string\">'border'</span>: <span class=\"string\">'1px solid'</span>,</div><div class=\"line\">                 <span class=\"string\">'border-color'</span>:opts.borderColor,</div><div class=\"line\">                 <span class=\"string\">'border-top'</span>:<span class=\"string\">'none'</span>,</div><div class=\"line\">                 <span class=\"string\">'overflow'</span> : <span class=\"string\">'hidden'</span></div><div class=\"line\">               &#125;).insertAfter(self);</div><div class=\"line\">               flag = <span class=\"string\">'1'</span>; //容器已显示</div><div class=\"line\">               // 遍历 data 取数据放入容器</div><div class=\"line\">               $.each( record ,function(i,v)&#123;</div><div class=\"line\">                 $.each(v,function(j,k)&#123;</div><div class=\"line\">                 var jsonText = k.text;</div><div class=\"line\">                 var jsonConvert = k.convert;</div><div class=\"line\">                 <span class=\"keyword\">if</span>( jsonText.indexOf(str) &gt; <span class=\"string\">'-1'</span>)&#123;</div><div class=\"line\">                   <span class=\"keyword\">if</span>(jsonConvert)&#123;</div><div class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonConvert+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</div><div class=\"line\">                   &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonText+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</div><div class=\"line\">                   &#125;</div><div class=\"line\">                 &#125;</div><div class=\"line\">                 &#125;);</div><div class=\"line\">               &#125;);</div><div class=\"line\"></div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;<span class=\"keyword\">else</span>&#123; //输入框中无数据</div><div class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">         flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;</div><div class=\"line\">     self.on(&#123;</div><div class=\"line\">       keyup :function(e)&#123;</div><div class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">         flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">         getFocus();</div><div class=\"line\">         function translate()&#123;</div><div class=\"line\">           var string =self.val().toLowerCase();</div><div class=\"line\">           $.each( record ,function(i,v)&#123;</div><div class=\"line\">             $.each(v,function(j,k)&#123;</div><div class=\"line\">             var jsonText = k.text;</div><div class=\"line\">             var jsonMean = k.mean;</div><div class=\"line\">             <span class=\"keyword\">if</span>( jsonText.indexOf(string) &gt; <span class=\"string\">'-1'</span>)&#123;</div><div class=\"line\">               $(<span class=\"string\">\"#show\"</span>).text(string+<span class=\"string\">\" ------ \"</span> + jsonMean);</div><div class=\"line\">             &#125;</div><div class=\"line\">             &#125;);</div><div class=\"line\">           &#125;);</div><div class=\"line\">         &#125;</div><div class=\"line\">         $(<span class=\"string\">\".down\"</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">\".single\"</span>,function()&#123;</div><div class=\"line\">           self.val($(this).text());</div><div class=\"line\">           translate();</div><div class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">           flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">         &#125;);</div><div class=\"line\">         self.siblings(<span class=\"string\">'button'</span>).on(<span class=\"string\">'click'</span>,function()&#123;</div><div class=\"line\">           translate();</div><div class=\"line\">         &#125;);</div><div class=\"line\">       &#125;,</div><div class=\"line\">       blur : function(e)&#123;</div><div class=\"line\">         setTimeout(function()&#123;</div><div class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">           flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">         &#125;,<span class=\"number\">200</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;);</div><div class=\"line\"></div><div class=\"line\">   &#125;;</div><div class=\"line\"> &#125;)(jQuery);</div><div class=\"line\">//调用</div><div class=\"line\">$(<span class=\"string\">\"#myInput\"</span>).autocomplete();</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"<p>插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的alert<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">//弹出alert弹框</div><div class=\"line\">$.fn.alert = function(options)&#123;</div><div class=\"line\">  var dets = &#123;</div><div class=\"line\">    Event : <span class=\"string\">\"click\"</span>,  //默认使用click事件</div><div class=\"line\">    msg : <span class=\"string\">\"hello world!\"</span> //默认弹出内容为hello，world</div><div class=\"line\">  &#125;</div><div class=\"line\">  var opts = $.extend(dets,options);</div><div class=\"line\">  var $this = $(this);</div><div class=\"line\">  $this.on( opts.Event ,function(e)&#123;</div><div class=\"line\">    alert(opts.msg);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//调用alert插件</div><div class=\"line\">$(<span class=\"string\">\"div\"</span>).alert(&#123;</div><div class=\"line\">  Event :　<span class=\"string\">\"mouseover\"</span>,</div><div class=\"line\">  msg : <span class=\"string\">\"我改变了默认弹出内容\"</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n</blockquote>","more":"<blockquote>\n<p><i class=\"icon-cloud\"></i>输入自动完成插件<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\" /><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ;(function($)&#123;</div><div class=\"line\">   $.fn.autocomplete = function(options)&#123;</div><div class=\"line\">     var defaults =&#123;</div><div class=\"line\">       borderColor : <span class=\"string\">\"#C7F4EE\"</span></div><div class=\"line\">     &#125;;</div><div class=\"line\">     var opts = $.extend(defaults,options);</div><div class=\"line\">     var self = $(this);</div><div class=\"line\">     flag = <span class=\"string\">'0'</span>; //没有下拉框</div><div class=\"line\">     record =<span class=\"string\">\"\"</span>;</div><div class=\"line\">     // 发起ajax请求拿数据</div><div class=\"line\">     $.ajax(&#123;</div><div class=\"line\">       url : <span class=\"string\">'/autocomplete/json.htm'</span>,</div><div class=\"line\">       type : <span class=\"string\">'GET'</span>,</div><div class=\"line\">       dataType : <span class=\"string\">'json'</span>,</div><div class=\"line\">       success : function(data)&#123;</div><div class=\"line\">         record = data; //取到json数据</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;);</div><div class=\"line\">     function getFocus()&#123;</div><div class=\"line\">       var len = self.val().length;</div><div class=\"line\">       var str = self.val().toLowerCase();</div><div class=\"line\">       <span class=\"keyword\">if</span>(len &gt; <span class=\"number\">0</span>)&#123; //输入框中有数据</div><div class=\"line\">           <span class=\"keyword\">if</span>(flag == <span class=\"string\">'0'</span>)&#123;</div><div class=\"line\">             $(<span class=\"string\">\"&lt;div class='down'&gt;&lt;/div&gt;\"</span>).css(&#123;</div><div class=\"line\">                 <span class=\"string\">'width'</span>:self.outerWidth()<span class=\"number\">-2</span>,</div><div class=\"line\">                 <span class=\"string\">'border'</span>: <span class=\"string\">'1px solid'</span>,</div><div class=\"line\">                 <span class=\"string\">'border-color'</span>:opts.borderColor,</div><div class=\"line\">                 <span class=\"string\">'border-top'</span>:<span class=\"string\">'none'</span>,</div><div class=\"line\">                 <span class=\"string\">'overflow'</span> : <span class=\"string\">'hidden'</span></div><div class=\"line\">               &#125;).insertAfter(self);</div><div class=\"line\">               flag = <span class=\"string\">'1'</span>; //容器已显示</div><div class=\"line\">               // 遍历 data 取数据放入容器</div><div class=\"line\">               $.each( record ,function(i,v)&#123;</div><div class=\"line\">                 $.each(v,function(j,k)&#123;</div><div class=\"line\">                 var jsonText = k.text;</div><div class=\"line\">                 var jsonConvert = k.convert;</div><div class=\"line\">                 <span class=\"keyword\">if</span>( jsonText.indexOf(str) &gt; <span class=\"string\">'-1'</span>)&#123;</div><div class=\"line\">                   <span class=\"keyword\">if</span>(jsonConvert)&#123;</div><div class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonConvert+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</div><div class=\"line\">                   &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonText+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</div><div class=\"line\">                   &#125;</div><div class=\"line\">                 &#125;</div><div class=\"line\">                 &#125;);</div><div class=\"line\">               &#125;);</div><div class=\"line\"></div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;<span class=\"keyword\">else</span>&#123; //输入框中无数据</div><div class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">         flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;</div><div class=\"line\">     self.on(&#123;</div><div class=\"line\">       keyup :function(e)&#123;</div><div class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">         flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">         getFocus();</div><div class=\"line\">         function translate()&#123;</div><div class=\"line\">           var string =self.val().toLowerCase();</div><div class=\"line\">           $.each( record ,function(i,v)&#123;</div><div class=\"line\">             $.each(v,function(j,k)&#123;</div><div class=\"line\">             var jsonText = k.text;</div><div class=\"line\">             var jsonMean = k.mean;</div><div class=\"line\">             <span class=\"keyword\">if</span>( jsonText.indexOf(string) &gt; <span class=\"string\">'-1'</span>)&#123;</div><div class=\"line\">               $(<span class=\"string\">\"#show\"</span>).text(string+<span class=\"string\">\" ------ \"</span> + jsonMean);</div><div class=\"line\">             &#125;</div><div class=\"line\">             &#125;);</div><div class=\"line\">           &#125;);</div><div class=\"line\">         &#125;</div><div class=\"line\">         $(<span class=\"string\">\".down\"</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">\".single\"</span>,function()&#123;</div><div class=\"line\">           self.val($(this).text());</div><div class=\"line\">           translate();</div><div class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">           flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">         &#125;);</div><div class=\"line\">         self.siblings(<span class=\"string\">'button'</span>).on(<span class=\"string\">'click'</span>,function()&#123;</div><div class=\"line\">           translate();</div><div class=\"line\">         &#125;);</div><div class=\"line\">       &#125;,</div><div class=\"line\">       blur : function(e)&#123;</div><div class=\"line\">         setTimeout(function()&#123;</div><div class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</div><div class=\"line\">           flag = <span class=\"string\">'0'</span>;</div><div class=\"line\">         &#125;,<span class=\"number\">200</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;);</div><div class=\"line\"></div><div class=\"line\">   &#125;;</div><div class=\"line\"> &#125;)(jQuery);</div><div class=\"line\">//调用</div><div class=\"line\">$(<span class=\"string\">\"#myInput\"</span>).autocomplete();</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"react日常小难题整理（麦麦）","_content":"初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## React\n## 1、style问题在react中\n> 大兄弟~ 你是否想在react中使用行内样式\n> 如： style=\"height:30px\"\n> 然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~\n> 看！写成这样就没错列~\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\" />\n\n## 2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\n> 在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏\n> 一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\" />\n> 后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)\n```javascript\nreturn files.map((file,index)=>{\n  return <a key={index} href=\"\"><Icon type=\"paper-clip\" /> {file} </a>\n})\n```\n\n<!--more-->\n## 3、value 和 defaultValue 表格中回显问题---组件使用的是[ant design](https://ant.design/)\n> 对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。\n> 如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。\n> 目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：\n>新建一个form的组件，如\n```javascript\n const FromModel =React.createClass({\n  render(){\n    var self = this;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return(\n      <Form horizontal>\n        <Row gutter={24}>\n          <Col sm={12}>\n            <FormItem\n              label=\"人才姓名\"\n              {...formItemLayout}\n            >\n              <Input size=\"default\" defaultValue={this.props.record.name} />\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n})\n引用model的情况如下，亲测没有任何问题：\n<Modal title=\"修改\" visible={this.state.visible}\n       onOk={this.handleOk} onCancel={this.handleCancel}\n >\n   {\n      self.state.visible ?  //判断visible为true还是false false的话设为null\n      <FromModel ref=\"modelform\" record={self.state.record}/>\n       :null\n    }\n</Modal>\n```\n\n## 4、url地址栏中一直有/#/xxx的问题\n> 这是一个你会获取到的默认 history ，如果你不指定某个 history 。\n> 它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。\n> browserHistory 是由 React Router 创建浏览器应用推荐的 history。\n> 它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。\n> 使用 **browserHistory** 代替 **hashHistory**就可以解决这个问题啦~\n\n## 5、es5和es6写法对比\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\" />\n\n## 6、jsx语法中不允许判断的问题\n> 在jsx语法内部是不允许if判断的，即如下代码是会报错的：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\" />\n> 对于判断条件简单的用三目运算符 如：\n```javascript\nReact.render(\n  return(\n      <div id={condition ? 'true的情况' : 'false的情况'}>\n          Hello World!\n      </div>\n    )\n, mountNode);\n```\n> 对于判断条件复杂的用变量 如：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\" />\n\n## 7、父组件与子组件之间的传值问题\n> 对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考[阮一峰---React 入门实例教程](http://www.ruanyifeng.com/blog/2015/03/react.html)\n\n## 8、关于在react中想要使用jquery操作dom的问题\n> 虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~\n> 直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=>self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D\n\n## 9、数组嵌套深层拷贝问题\n> 近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，\n> 第二次才显示完整，用到了concat()拷贝深度数组并不起效果，\n> 最后。。。终于给我找出来了 记录一下\n```javascript\n\nfunction clone(source)\n{\n  var result;\n  (source instanceof Array) ? (result = []) : (result = {});\n\n  for (var key in source) {\n  result[key] = (typeof source[key]==='object') ? clone(source[key]) : source[key];\n  }\n  return result;\n}\n\n```\n## 10、对于在react中字符拼接的问题\n> 不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的\n```javascript\n <a href=\"xxxxx.html?code=\"+usercode>我要传参数跳转的啦~</a>\n```\n> 我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出\n> 改为\n```javascript\n <a href={\"xxxxx.html?code=\"+usercode}>我要传参数跳转的啦~</a>\n```\n\n## 11、ant design中的图片轮播报错问题\n```javascript\nlet imgTpl = (IMAGE_DATA || []).map((item, index) => {\n   return (\n   <div key={index} >\n      <a href={item.bannerUrl == '' ? \"javascript:;\" : item.bannerUrl}><img src={item.url} alt={item.bannerName}/></a>\n   </div>\n   );\n});\nif (!IMAGE_DATA.length) imgTpl = <div></div>;\n```\n\n## 12、请耐心等待，麦麦会不定期更新哒~\n\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/react日常小难题.md","raw":"---\ntitle: react日常小难题整理（麦麦）\n---\n初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## React\n## 1、style问题在react中\n> 大兄弟~ 你是否想在react中使用行内样式\n> 如： style=\"height:30px\"\n> 然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~\n> 看！写成这样就没错列~\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\" />\n\n## 2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\n> 在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏\n> 一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\" />\n> 后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)\n```javascript\nreturn files.map((file,index)=>{\n  return <a key={index} href=\"\"><Icon type=\"paper-clip\" /> {file} </a>\n})\n```\n\n<!--more-->\n## 3、value 和 defaultValue 表格中回显问题---组件使用的是[ant design](https://ant.design/)\n> 对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。\n> 如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。\n> 目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：\n>新建一个form的组件，如\n```javascript\n const FromModel =React.createClass({\n  render(){\n    var self = this;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return(\n      <Form horizontal>\n        <Row gutter={24}>\n          <Col sm={12}>\n            <FormItem\n              label=\"人才姓名\"\n              {...formItemLayout}\n            >\n              <Input size=\"default\" defaultValue={this.props.record.name} />\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n})\n引用model的情况如下，亲测没有任何问题：\n<Modal title=\"修改\" visible={this.state.visible}\n       onOk={this.handleOk} onCancel={this.handleCancel}\n >\n   {\n      self.state.visible ?  //判断visible为true还是false false的话设为null\n      <FromModel ref=\"modelform\" record={self.state.record}/>\n       :null\n    }\n</Modal>\n```\n\n## 4、url地址栏中一直有/#/xxx的问题\n> 这是一个你会获取到的默认 history ，如果你不指定某个 history 。\n> 它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。\n> browserHistory 是由 React Router 创建浏览器应用推荐的 history。\n> 它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。\n> 使用 **browserHistory** 代替 **hashHistory**就可以解决这个问题啦~\n\n## 5、es5和es6写法对比\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\" />\n\n## 6、jsx语法中不允许判断的问题\n> 在jsx语法内部是不允许if判断的，即如下代码是会报错的：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\" />\n> 对于判断条件简单的用三目运算符 如：\n```javascript\nReact.render(\n  return(\n      <div id={condition ? 'true的情况' : 'false的情况'}>\n          Hello World!\n      </div>\n    )\n, mountNode);\n```\n> 对于判断条件复杂的用变量 如：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\" />\n\n## 7、父组件与子组件之间的传值问题\n> 对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考[阮一峰---React 入门实例教程](http://www.ruanyifeng.com/blog/2015/03/react.html)\n\n## 8、关于在react中想要使用jquery操作dom的问题\n> 虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~\n> 直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=>self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D\n\n## 9、数组嵌套深层拷贝问题\n> 近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，\n> 第二次才显示完整，用到了concat()拷贝深度数组并不起效果，\n> 最后。。。终于给我找出来了 记录一下\n```javascript\n\nfunction clone(source)\n{\n  var result;\n  (source instanceof Array) ? (result = []) : (result = {});\n\n  for (var key in source) {\n  result[key] = (typeof source[key]==='object') ? clone(source[key]) : source[key];\n  }\n  return result;\n}\n\n```\n## 10、对于在react中字符拼接的问题\n> 不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的\n```javascript\n <a href=\"xxxxx.html?code=\"+usercode>我要传参数跳转的啦~</a>\n```\n> 我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出\n> 改为\n```javascript\n <a href={\"xxxxx.html?code=\"+usercode}>我要传参数跳转的啦~</a>\n```\n\n## 11、ant design中的图片轮播报错问题\n```javascript\nlet imgTpl = (IMAGE_DATA || []).map((item, index) => {\n   return (\n   <div key={index} >\n      <a href={item.bannerUrl == '' ? \"javascript:;\" : item.bannerUrl}><img src={item.url} alt={item.bannerName}/></a>\n   </div>\n   );\n});\nif (!IMAGE_DATA.length) imgTpl = <div></div>;\n```\n\n## 12、请耐心等待，麦麦会不定期更新哒~\n\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"react日常小难题","published":1,"date":"2017-03-24T09:58:17.241Z","updated":"2017-03-24T09:58:17.251Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gp0006mwigzpeye8m0","content":"<p>初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~</p>\n<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><h2 id=\"1、style问题在react中\"><a href=\"#1、style问题在react中\" class=\"headerlink\" title=\"1、style问题在react中\"></a>1、style问题在react中</h2><blockquote>\n<p>大兄弟~ 你是否想在react中使用行内样式<br>如： style=”height:30px”<br>然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~<br>看！写成这样就没错列~<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\"></p>\n</blockquote>\n<h2 id=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"><a href=\"#2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\" class=\"headerlink\" title=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"></a>2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别</h2><blockquote>\n<p>在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏<br>一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\"><br>后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> files.map(<span class=\"function\">(<span class=\"params\">file,index</span>)=&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &lt;a key=&#123;index&#125; href=\"\"&gt;&lt;Icon type=\"paper-clip\" /&gt; &#123;file&#125; &lt;/a&gt;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\"><a href=\"#3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\" class=\"headerlink\" title=\"3、value 和 defaultValue 表格中回显问题—组件使用的是ant design\"></a>3、value 和 defaultValue 表格中回显问题—组件使用的是<a href=\"https://ant.design/\" target=\"_blank\" rel=\"external\">ant design</a></h2><blockquote>\n<p>对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。<br>如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。<br>目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：<br>新建一个form的组件，如<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">const</span> FromModel =React.createClass(&#123;</div><div class=\"line\">  render()&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\">    <span class=\"keyword\">const</span> formItemLayout = &#123;</div><div class=\"line\">      <span class=\"attr\">labelCol</span>: &#123; <span class=\"attr\">span</span>: <span class=\"number\">6</span> &#125;,</div><div class=\"line\">      <span class=\"attr\">wrapperCol</span>: &#123; <span class=\"attr\">span</span>: <span class=\"number\">14</span> &#125;,</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span>(</div><div class=\"line\">      &lt;Form horizontal&gt;</div><div class=\"line\">        &lt;Row gutter=&#123;24&#125;&gt;</div><div class=\"line\">          &lt;Col sm=&#123;12&#125;&gt;</div><div class=\"line\">            &lt;FormItem</div><div class=\"line\">              label=\"人才姓名\"</div><div class=\"line\">              &#123;...formItemLayout&#125;</div><div class=\"line\">            &gt;</div><div class=\"line\">              &lt;Input size=\"default\" defaultValue=&#123;this.props.record.name&#125; /&gt;</div><div class=\"line\">            &lt;/FormItem&gt;</div><div class=\"line\">          &lt;/Col&gt;</div><div class=\"line\">        &lt;/Row&gt;</div><div class=\"line\">      &lt;/Form&gt;</div><div class=\"line\">    )</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">引用model的情况如下，亲测没有任何问题：</div><div class=\"line\">&lt;Modal title=\"修改\" visible=&#123;this.state.visible&#125;</div><div class=\"line\">       onOk=&#123;this.handleOk&#125; onCancel=&#123;this.handleCancel&#125;</div><div class=\"line\"> &gt;</div><div class=\"line\">   &#123;</div><div class=\"line\">      self.state.visible ?  //判断visible为true还是false false的话设为null</div><div class=\"line\">      &lt;FromModel ref=\"modelform\" record=&#123;self.state.record&#125;/&gt;</div><div class=\"line\">       :null</div><div class=\"line\">    &#125;</div><div class=\"line\">&lt;/Modal&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"4、url地址栏中一直有-xxx的问题\"><a href=\"#4、url地址栏中一直有-xxx的问题\" class=\"headerlink\" title=\"4、url地址栏中一直有/#/xxx的问题\"></a>4、url地址栏中一直有/#/xxx的问题</h2><blockquote>\n<p>这是一个你会获取到的默认 history ，如果你不指定某个 history 。<br>它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。<br>browserHistory 是由 React Router 创建浏览器应用推荐的 history。<br>它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。<br>使用 <strong>browserHistory</strong> 代替 <strong>hashHistory</strong>就可以解决这个问题啦~</p>\n</blockquote>\n<h2 id=\"5、es5和es6写法对比\"><a href=\"#5、es5和es6写法对比\" class=\"headerlink\" title=\"5、es5和es6写法对比\"></a>5、es5和es6写法对比</h2><p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\"></p>\n<h2 id=\"6、jsx语法中不允许判断的问题\"><a href=\"#6、jsx语法中不允许判断的问题\" class=\"headerlink\" title=\"6、jsx语法中不允许判断的问题\"></a>6、jsx语法中不允许判断的问题</h2><blockquote>\n<p>在jsx语法内部是不允许if判断的，即如下代码是会报错的：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\"><br>对于判断条件简单的用三目运算符 如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">React.render(</div><div class=\"line\">  <span class=\"keyword\">return</span>(</div><div class=\"line\">      &lt;div id=&#123;condition ? 'true的情况' : 'false的情况'&#125;&gt;</div><div class=\"line\">          Hello World!</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    )</div><div class=\"line\">, mountNode);</div></pre></td></tr></table></figure></p>\n<p>对于判断条件复杂的用变量 如：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\"></p>\n</blockquote>\n<h2 id=\"7、父组件与子组件之间的传值问题\"><a href=\"#7、父组件与子组件之间的传值问题\" class=\"headerlink\" title=\"7、父组件与子组件之间的传值问题\"></a>7、父组件与子组件之间的传值问题</h2><blockquote>\n<p>对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考<a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\" target=\"_blank\" rel=\"external\">阮一峰—React 入门实例教程</a></p>\n</blockquote>\n<h2 id=\"8、关于在react中想要使用jquery操作dom的问题\"><a href=\"#8、关于在react中想要使用jquery操作dom的问题\" class=\"headerlink\" title=\"8、关于在react中想要使用jquery操作dom的问题\"></a>8、关于在react中想要使用jquery操作dom的问题</h2><blockquote>\n<p>虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~<br>直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=&gt;self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D</p>\n</blockquote>\n<h2 id=\"9、数组嵌套深层拷贝问题\"><a href=\"#9、数组嵌套深层拷贝问题\" class=\"headerlink\" title=\"9、数组嵌套深层拷贝问题\"></a>9、数组嵌套深层拷贝问题</h2><blockquote>\n<p>近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，<br>第二次才显示完整，用到了concat()拷贝深度数组并不起效果，<br>最后。。。终于给我找出来了 记录一下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clone</span>(<span class=\"params\">source</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> result;</div><div class=\"line\">  (source <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>) ? (result = []) : (result = &#123;&#125;);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</div><div class=\"line\">  result[key] = (<span class=\"keyword\">typeof</span> source[key]===<span class=\"string\">'object'</span>) ? clone(source[key]) : source[key];</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"10、对于在react中字符拼接的问题\"><a href=\"#10、对于在react中字符拼接的问题\" class=\"headerlink\" title=\"10、对于在react中字符拼接的问题\"></a>10、对于在react中字符拼接的问题</h2><blockquote>\n<p>不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&gt;我要传参数跳转的啦~&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出<br>改为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&#123;<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&#125;&gt;我要传参数跳转的啦~&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"11、ant-design中的图片轮播报错问题\"><a href=\"#11、ant-design中的图片轮播报错问题\" class=\"headerlink\" title=\"11、ant design中的图片轮播报错问题\"></a>11、ant design中的图片轮播报错问题</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> imgTpl = <span class=\"function\">(<span class=\"params\">IMAGE_DATA || []</span>).<span class=\"params\">map</span>(<span class=\"params\">(item, index</span>) =&gt;</span> &#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> (</div><div class=\"line\">   &lt;div key=&#123;index&#125; &gt;</div><div class=\"line\">      &lt;a href=&#123;item.bannerUrl == '' ? \"javascript:;\" : item.bannerUrl&#125;&gt;&lt;img src=&#123;item.url&#125; alt=&#123;item.bannerName&#125;/&gt;&lt;/a&gt;</div><div class=\"line\">   &lt;/div&gt;</div><div class=\"line\">   );</div><div class=\"line\">&#125;);</div><div class=\"line\">if (!IMAGE_DATA.length) imgTpl = &lt;div&gt;&lt;/div&gt;;</div></pre></td></tr></table></figure>\n<h2 id=\"12、请耐心等待，麦麦会不定期更新哒\"><a href=\"#12、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"12、请耐心等待，麦麦会不定期更新哒~\"></a>12、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"external\">麦麦</a></p>\n","excerpt":"<p>初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><h2 id=\"1、style问题在react中\"><a href=\"#1、style问题在react中\" class=\"headerlink\" title=\"1、style问题在react中\"></a>1、style问题在react中</h2><blockquote>\n<p>大兄弟~ 你是否想在react中使用行内样式<br>如： style=”height:30px”<br>然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~<br>看！写成这样就没错列~<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\" /></p>\n</blockquote>\n<h2 id=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"><a href=\"#2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\" class=\"headerlink\" title=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"></a>2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别</h2><blockquote>\n<p>在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏<br>一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\" /><br>后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> files.map(<span class=\"function\">(<span class=\"params\">file,index</span>)=&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &lt;a key=&#123;index&#125; href=\"\"&gt;&lt;Icon type=\"paper-clip\" /&gt; &#123;file&#125; &lt;/a&gt;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n</blockquote>","more":"<h2 id=\"3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\"><a href=\"#3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\" class=\"headerlink\" title=\"3、value 和 defaultValue 表格中回显问题—组件使用的是ant design\"></a>3、value 和 defaultValue 表格中回显问题—组件使用的是<a href=\"https://ant.design/\">ant design</a></h2><blockquote>\n<p>对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。<br>如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。<br>目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：<br>新建一个form的组件，如<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">const</span> FromModel =React.createClass(&#123;</div><div class=\"line\">  render()&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\">    <span class=\"keyword\">const</span> formItemLayout = &#123;</div><div class=\"line\">      <span class=\"attr\">labelCol</span>: &#123; <span class=\"attr\">span</span>: <span class=\"number\">6</span> &#125;,</div><div class=\"line\">      <span class=\"attr\">wrapperCol</span>: &#123; <span class=\"attr\">span</span>: <span class=\"number\">14</span> &#125;,</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span>(</div><div class=\"line\">      &lt;Form horizontal&gt;</div><div class=\"line\">        &lt;Row gutter=&#123;24&#125;&gt;</div><div class=\"line\">          &lt;Col sm=&#123;12&#125;&gt;</div><div class=\"line\">            &lt;FormItem</div><div class=\"line\">              label=\"人才姓名\"</div><div class=\"line\">              &#123;...formItemLayout&#125;</div><div class=\"line\">            &gt;</div><div class=\"line\">              &lt;Input size=\"default\" defaultValue=&#123;this.props.record.name&#125; /&gt;</div><div class=\"line\">            &lt;/FormItem&gt;</div><div class=\"line\">          &lt;/Col&gt;</div><div class=\"line\">        &lt;/Row&gt;</div><div class=\"line\">      &lt;/Form&gt;</div><div class=\"line\">    )</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">引用model的情况如下，亲测没有任何问题：</div><div class=\"line\">&lt;Modal title=\"修改\" visible=&#123;this.state.visible&#125;</div><div class=\"line\">       onOk=&#123;this.handleOk&#125; onCancel=&#123;this.handleCancel&#125;</div><div class=\"line\"> &gt;</div><div class=\"line\">   &#123;</div><div class=\"line\">      self.state.visible ?  //判断visible为true还是false false的话设为null</div><div class=\"line\">      &lt;FromModel ref=\"modelform\" record=&#123;self.state.record&#125;/&gt;</div><div class=\"line\">       :null</div><div class=\"line\">    &#125;</div><div class=\"line\">&lt;/Modal&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"4、url地址栏中一直有-xxx的问题\"><a href=\"#4、url地址栏中一直有-xxx的问题\" class=\"headerlink\" title=\"4、url地址栏中一直有/#/xxx的问题\"></a>4、url地址栏中一直有/#/xxx的问题</h2><blockquote>\n<p>这是一个你会获取到的默认 history ，如果你不指定某个 history 。<br>它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。<br>browserHistory 是由 React Router 创建浏览器应用推荐的 history。<br>它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。<br>使用 <strong>browserHistory</strong> 代替 <strong>hashHistory</strong>就可以解决这个问题啦~</p>\n</blockquote>\n<h2 id=\"5、es5和es6写法对比\"><a href=\"#5、es5和es6写法对比\" class=\"headerlink\" title=\"5、es5和es6写法对比\"></a>5、es5和es6写法对比</h2><p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\" /></p>\n<h2 id=\"6、jsx语法中不允许判断的问题\"><a href=\"#6、jsx语法中不允许判断的问题\" class=\"headerlink\" title=\"6、jsx语法中不允许判断的问题\"></a>6、jsx语法中不允许判断的问题</h2><blockquote>\n<p>在jsx语法内部是不允许if判断的，即如下代码是会报错的：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\" /><br>对于判断条件简单的用三目运算符 如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">React.render(</div><div class=\"line\">  <span class=\"keyword\">return</span>(</div><div class=\"line\">      &lt;div id=&#123;condition ? 'true的情况' : 'false的情况'&#125;&gt;</div><div class=\"line\">          Hello World!</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    )</div><div class=\"line\">, mountNode);</div></pre></td></tr></table></figure></p>\n<p>对于判断条件复杂的用变量 如：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\" /></p>\n</blockquote>\n<h2 id=\"7、父组件与子组件之间的传值问题\"><a href=\"#7、父组件与子组件之间的传值问题\" class=\"headerlink\" title=\"7、父组件与子组件之间的传值问题\"></a>7、父组件与子组件之间的传值问题</h2><blockquote>\n<p>对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考<a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\">阮一峰—React 入门实例教程</a></p>\n</blockquote>\n<h2 id=\"8、关于在react中想要使用jquery操作dom的问题\"><a href=\"#8、关于在react中想要使用jquery操作dom的问题\" class=\"headerlink\" title=\"8、关于在react中想要使用jquery操作dom的问题\"></a>8、关于在react中想要使用jquery操作dom的问题</h2><blockquote>\n<p>虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~<br>直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=&gt;self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D</p>\n</blockquote>\n<h2 id=\"9、数组嵌套深层拷贝问题\"><a href=\"#9、数组嵌套深层拷贝问题\" class=\"headerlink\" title=\"9、数组嵌套深层拷贝问题\"></a>9、数组嵌套深层拷贝问题</h2><blockquote>\n<p>近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，<br>第二次才显示完整，用到了concat()拷贝深度数组并不起效果，<br>最后。。。终于给我找出来了 记录一下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clone</span>(<span class=\"params\">source</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> result;</div><div class=\"line\">  (source <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>) ? (result = []) : (result = &#123;&#125;);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</div><div class=\"line\">  result[key] = (<span class=\"keyword\">typeof</span> source[key]===<span class=\"string\">'object'</span>) ? clone(source[key]) : source[key];</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"10、对于在react中字符拼接的问题\"><a href=\"#10、对于在react中字符拼接的问题\" class=\"headerlink\" title=\"10、对于在react中字符拼接的问题\"></a>10、对于在react中字符拼接的问题</h2><blockquote>\n<p>不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&gt;我要传参数跳转的啦~&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出<br>改为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&#123;<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&#125;&gt;我要传参数跳转的啦~&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"11、ant-design中的图片轮播报错问题\"><a href=\"#11、ant-design中的图片轮播报错问题\" class=\"headerlink\" title=\"11、ant design中的图片轮播报错问题\"></a>11、ant design中的图片轮播报错问题</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> imgTpl = <span class=\"function\">(<span class=\"params\">IMAGE_DATA || []</span>).<span class=\"params\">map</span>(<span class=\"params\">(item, index</span>) =&gt;</span> &#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> (</div><div class=\"line\">   &lt;div key=&#123;index&#125; &gt;</div><div class=\"line\">      &lt;a href=&#123;item.bannerUrl == '' ? \"javascript:;\" : item.bannerUrl&#125;&gt;&lt;img src=&#123;item.url&#125; alt=&#123;item.bannerName&#125;/&gt;&lt;/a&gt;</div><div class=\"line\">   &lt;/div&gt;</div><div class=\"line\">   );</div><div class=\"line\">&#125;);</div><div class=\"line\">if (!IMAGE_DATA.length) imgTpl = &lt;div&gt;&lt;/div&gt;;</div></pre></td></tr></table></figure>\n<h2 id=\"12、请耐心等待，麦麦会不定期更新哒\"><a href=\"#12、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"12、请耐心等待，麦麦会不定期更新哒~\"></a>12、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\">麦麦</a></p>"},{"title":"jquery 简单弹出框插件教程（麦麦）","_content":"简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>弹出框htm部分\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\" />\n ```python\n <!DOCTYPE html>\n <html lang=\"en\">\n <head>\n   <meta charset=\"UTF-8\">\n   <title>dialog弹出框</title>\n   <link rel=\"stylesheet\" href=\"../build/css/a.css\"/>\n   <script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"></script>\n   <script type=\"text/javascript\" src=\"../build/js/a.js\"></script>\n\n </head>\n <body>\n   <button id=\"btn\">弹出框</button><button id=\"btn1\">弹出框</button>\n   <form id=\"formAdd\" class=\"hide\">\n     <div class=\"form-group\">\n       <label for=\"exampleInputEmail1\">Email address</label>\n       <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputPassword1\">Password</label>\n       <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputFile\">File input</label>\n       <input type=\"file\" id=\"exampleInputFile\">\n       <p class=\"help-block\">Example block-level help text here.</p>\n     </div>\n     <div class=\"checkbox\">\n       <label>\n         <input type=\"checkbox\"> Check me out\n       </label>\n     </div>\n     <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n   </form>\n   <script type=\"text/javascript\">\n     $(document).ready(function(){\n       $(\"#btn\").dialog({\n         width :500,\n         // height:120,\n         title : \"提示信息\",\n         //content :\"我在测试哦\",\n         contentDom :\"#formAdd\"\n       });\n     });\n   </script>\n </body>\n </html>\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>弹出框插件\n> css部分\n.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:'微软雅黑'}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}\n> js部分\n ```python\n!function(t){t.fn.dialog=function(n){function i(){t(\".diaBox\").parent(\"div\").remove(),e=0}var e=0,d={title:\"标题\",content:\"\",contentDom:\"\",btns:[{elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function(){alert(\"确定\"),i()}},{elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function(){alert(\"取消\"),i()}}],width:500,height:\"auto\"},s=t.extend(d,n),o=this;o.on(\"click\",function(){if(\"0\"==e){var n=document.createElement(\"div\");t(n).css({width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"});var i=[];s.btns.length>0&&t.each(s.btns,function(t,n){i.push(\"<button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'>\"+s.btns[t].text+\"</button>\")}),i=i.join(\"\");var d=\"\";d=t(s.content.length>0?\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+s.content+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\":\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+t(s.contentDom).html()+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1}t(\".y_close\").on(\"click\",function(){t(n).remove(),e=0})}),s.btns.length>0&&t.each(s.btns,function(n,i){t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)})}}(jQuery);\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/弹出框.md","raw":"---\ntitle: jquery 简单弹出框插件教程（麦麦）\n---\n简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>弹出框htm部分\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\" />\n ```python\n <!DOCTYPE html>\n <html lang=\"en\">\n <head>\n   <meta charset=\"UTF-8\">\n   <title>dialog弹出框</title>\n   <link rel=\"stylesheet\" href=\"../build/css/a.css\"/>\n   <script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"></script>\n   <script type=\"text/javascript\" src=\"../build/js/a.js\"></script>\n\n </head>\n <body>\n   <button id=\"btn\">弹出框</button><button id=\"btn1\">弹出框</button>\n   <form id=\"formAdd\" class=\"hide\">\n     <div class=\"form-group\">\n       <label for=\"exampleInputEmail1\">Email address</label>\n       <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputPassword1\">Password</label>\n       <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputFile\">File input</label>\n       <input type=\"file\" id=\"exampleInputFile\">\n       <p class=\"help-block\">Example block-level help text here.</p>\n     </div>\n     <div class=\"checkbox\">\n       <label>\n         <input type=\"checkbox\"> Check me out\n       </label>\n     </div>\n     <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n   </form>\n   <script type=\"text/javascript\">\n     $(document).ready(function(){\n       $(\"#btn\").dialog({\n         width :500,\n         // height:120,\n         title : \"提示信息\",\n         //content :\"我在测试哦\",\n         contentDom :\"#formAdd\"\n       });\n     });\n   </script>\n </body>\n </html>\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>弹出框插件\n> css部分\n.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:'微软雅黑'}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}\n> js部分\n ```python\n!function(t){t.fn.dialog=function(n){function i(){t(\".diaBox\").parent(\"div\").remove(),e=0}var e=0,d={title:\"标题\",content:\"\",contentDom:\"\",btns:[{elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function(){alert(\"确定\"),i()}},{elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function(){alert(\"取消\"),i()}}],width:500,height:\"auto\"},s=t.extend(d,n),o=this;o.on(\"click\",function(){if(\"0\"==e){var n=document.createElement(\"div\");t(n).css({width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"});var i=[];s.btns.length>0&&t.each(s.btns,function(t,n){i.push(\"<button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'>\"+s.btns[t].text+\"</button>\")}),i=i.join(\"\");var d=\"\";d=t(s.content.length>0?\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+s.content+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\":\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+t(s.contentDom).html()+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1}t(\".y_close\").on(\"click\",function(){t(n).remove(),e=0})}),s.btns.length>0&&t.each(s.btns,function(n,i){t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)})}}(jQuery);\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"弹出框","published":1,"date":"2017-03-24T09:58:17.275Z","updated":"2017-03-24T09:58:17.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gq0007mwig79jo32t4","content":"<p>简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)</p>\n<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>弹出框htm部分<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\"><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\"><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\"><br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=\"en\"&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">  &lt;meta charset=\"UTF-8\"&gt;</div><div class=\"line\">  &lt;title&gt;dialog弹出框&lt;/title&gt;</div><div class=\"line\">  &lt;link rel=\"stylesheet\" href=\"../build/css/a.css\"/&gt;</div><div class=\"line\">  &lt;script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;script type=\"text/javascript\" src=\"../build/js/a.js\"&gt;&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">  &lt;button id=\"btn\"&gt;弹出框&lt;/button&gt;&lt;button id=\"btn1\"&gt;弹出框&lt;/button&gt;</div><div class=\"line\">  &lt;form id=\"formAdd\" class=\"hide\"&gt;</div><div class=\"line\">    &lt;div class=\"form-group\"&gt;</div><div class=\"line\">      &lt;label for=\"exampleInputEmail1\"&gt;Email address&lt;/label&gt;</div><div class=\"line\">      &lt;input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\"&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"form-group\"&gt;</div><div class=\"line\">      &lt;label for=\"exampleInputPassword1\"&gt;Password&lt;/label&gt;</div><div class=\"line\">      &lt;input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"form-group\"&gt;</div><div class=\"line\">      &lt;label for=\"exampleInputFile\"&gt;File input&lt;/label&gt;</div><div class=\"line\">      &lt;input type=\"file\" id=\"exampleInputFile\"&gt;</div><div class=\"line\">      &lt;p class=\"help-block\"&gt;Example block-level help text here.&lt;/p&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"checkbox\"&gt;</div><div class=\"line\">      &lt;label&gt;</div><div class=\"line\">        &lt;input type=\"checkbox\"&gt; Check me out</div><div class=\"line\">      &lt;/label&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;button type=\"submit\" class=\"btn btn-default\"&gt;Submit&lt;/button&gt;</div><div class=\"line\">  &lt;/form&gt;</div><div class=\"line\">  &lt;script type=\"text/javascript\"&gt;</div><div class=\"line\">    $(document).ready(function()&#123;</div><div class=\"line\">      $(\"#btn\").dialog(&#123;</div><div class=\"line\">        width :500,</div><div class=\"line\">        // height:120,</div><div class=\"line\">        title : \"提示信息\",</div><div class=\"line\">        //content :\"我在测试哦\",</div><div class=\"line\">        contentDom :\"#formAdd\"</div><div class=\"line\">      &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>弹出框插件<br>css部分<br>.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:’微软雅黑’}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}<br>js部分<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">!function(t)&#123;t.fn.dialog=function(n)&#123;function i()&#123;t(\".diaBox\").parent(\"div\").remove(),e=0&#125;var e=0,d=&#123;title:\"标题\",content:\"\",contentDom:\"\",btns:[&#123;elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function()&#123;alert(\"确定\"),i()&#125;&#125;,&#123;elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function()&#123;alert(\"取消\"),i()&#125;&#125;],width:500,height:\"auto\"&#125;,s=t.extend(d,n),o=this;o.on(\"click\",function()&#123;if(\"0\"==e)&#123;var n=document.createElement(\"div\");t(n).css(&#123;width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"&#125;);var i=[];s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(t,n)&#123;i.push(\"&lt;button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'&gt;\"+s.btns[t].text+\"&lt;/button&gt;\")&#125;),i=i.join(\"\");var d=\"\";d=t(s.content.length&gt;0?\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+s.content+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\":\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+t(s.contentDom).html()+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1&#125;t(\".y_close\").on(\"click\",function()&#123;t(n).remove(),e=0&#125;)&#125;),s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(n,i)&#123;t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)&#125;)&#125;&#125;(jQuery);</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"<p>简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>弹出框htm部分<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\" /><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\" /><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\" /><br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=\"en\"&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">  &lt;meta charset=\"UTF-8\"&gt;</div><div class=\"line\">  &lt;title&gt;dialog弹出框&lt;/title&gt;</div><div class=\"line\">  &lt;link rel=\"stylesheet\" href=\"../build/css/a.css\"/&gt;</div><div class=\"line\">  &lt;script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;script type=\"text/javascript\" src=\"../build/js/a.js\"&gt;&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">  &lt;button id=\"btn\"&gt;弹出框&lt;/button&gt;&lt;button id=\"btn1\"&gt;弹出框&lt;/button&gt;</div><div class=\"line\">  &lt;form id=\"formAdd\" class=\"hide\"&gt;</div><div class=\"line\">    &lt;div class=\"form-group\"&gt;</div><div class=\"line\">      &lt;label for=\"exampleInputEmail1\"&gt;Email address&lt;/label&gt;</div><div class=\"line\">      &lt;input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\"&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"form-group\"&gt;</div><div class=\"line\">      &lt;label for=\"exampleInputPassword1\"&gt;Password&lt;/label&gt;</div><div class=\"line\">      &lt;input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"form-group\"&gt;</div><div class=\"line\">      &lt;label for=\"exampleInputFile\"&gt;File input&lt;/label&gt;</div><div class=\"line\">      &lt;input type=\"file\" id=\"exampleInputFile\"&gt;</div><div class=\"line\">      &lt;p class=\"help-block\"&gt;Example block-level help text here.&lt;/p&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"checkbox\"&gt;</div><div class=\"line\">      &lt;label&gt;</div><div class=\"line\">        &lt;input type=\"checkbox\"&gt; Check me out</div><div class=\"line\">      &lt;/label&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;button type=\"submit\" class=\"btn btn-default\"&gt;Submit&lt;/button&gt;</div><div class=\"line\">  &lt;/form&gt;</div><div class=\"line\">  &lt;script type=\"text/javascript\"&gt;</div><div class=\"line\">    $(document).ready(function()&#123;</div><div class=\"line\">      $(\"#btn\").dialog(&#123;</div><div class=\"line\">        width :500,</div><div class=\"line\">        // height:120,</div><div class=\"line\">        title : \"提示信息\",</div><div class=\"line\">        //content :\"我在测试哦\",</div><div class=\"line\">        contentDom :\"#formAdd\"</div><div class=\"line\">      &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>","more":"<blockquote>\n<p><i class=\"icon-cloud\"></i>弹出框插件<br>css部分<br>.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:’微软雅黑’}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}<br>js部分<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">!function(t)&#123;t.fn.dialog=function(n)&#123;function i()&#123;t(\".diaBox\").parent(\"div\").remove(),e=0&#125;var e=0,d=&#123;title:\"标题\",content:\"\",contentDom:\"\",btns:[&#123;elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function()&#123;alert(\"确定\"),i()&#125;&#125;,&#123;elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function()&#123;alert(\"取消\"),i()&#125;&#125;],width:500,height:\"auto\"&#125;,s=t.extend(d,n),o=this;o.on(\"click\",function()&#123;if(\"0\"==e)&#123;var n=document.createElement(\"div\");t(n).css(&#123;width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"&#125;);var i=[];s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(t,n)&#123;i.push(\"&lt;button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'&gt;\"+s.btns[t].text+\"&lt;/button&gt;\")&#125;),i=i.join(\"\");var d=\"\";d=t(s.content.length&gt;0?\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+s.content+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\":\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+t(s.contentDom).html()+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1&#125;t(\".y_close\").on(\"click\",function()&#123;t(n).remove(),e=0&#125;)&#125;),s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(n,i)&#123;t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)&#125;)&#125;&#125;(jQuery);</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"用 cooking 搭建一个多页面易配置的 Vue 2 项目","_content":"学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-> 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自[知乎](https://zhuanlan.zhihu.com/p/22610408)\n\n## 搭建基础项目--<font size=1>直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font>\n**npm i cooking-cli -g**\nor 切换至淘宝镜像\n**npm i cooking-cli -g --registry=https://registry.npm.taobao.org**\n完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。\n**cooking create xxx vue**\n接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。\n> [?] Give your app a name: multiple-pages\n> [?] Give your app a description: A vue project.\n> [?] Private? Yes\n> [?] What Vue version do you what? Vue 2\n> [?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)\n> [?] What way use cooking do you want? Global cooking (webpack 2)\n> [?] Need dev server? Yes\n> [?] What CSS preprocessor do you want to use? Only CSS\n> [?] Setup unit tests with Karma + Mocha? No\n> [?] git repository:\n> [?] author:\n> [?] license: ISC\n> [?] Continue? Yes\n\n最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。\n\n## 多页面项目分析\n写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。\n<!--more-->\n```javascript\n{\n  \"pages\": [\n    {\n      \"entry\": \"home\",\n      \"title\": \"首页\",\n      \"cdn\": {}\n    },\n    {\n      \"entry\": \"admin\",\n      \"title\": \"后台\",\n      \"cdn\": {}\n    }\n  ],\n  \"basePath\": \"./src/pages/\",\n  \"cdn\": {\n    \"js\": [\n      \"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\",\n      \"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"\n    ],\n    \"css\": []\n  },\n  \"externals\": {\n    \"vue\": \"Vue\",\n    \"vuex\": \"Vuex\"\n  }\n}\n```\n同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。\n\n**index.js**\n```javascript\nimport Vue from 'vue'\nimport App from './app'\nnew Vue({ // eslint-disable-line\n  el: '#app',\n  render: h => h(App)\n})\n```\n**app.vue**\n```javascript\n<template>\n  <div>\n    <h1>首页</h1>\n    <p>A vue project.</p>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'app'\n  };\n</script>\n```\n## 配置 cooking --<font size=1>入口文件</font>\n接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。\n\n> **var App = require('./app.json')\n> var entries = function() {\n>   var result = {}\n>   App.pages.forEach(p => {\n>     result[p.entry] = path.resolve(App.basePath, p.entry)\n>   })\n>   return result\n> }\n> cooking.set({\n>   entry: entries()\n> })**\n\n## 模板文件\n所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。\n```javascript\nvar App = require('./app.json')\nvar path = require('path')\nvar merge = function(a, b) {\n  return {\n    css: (a.css || []).concat(b.css || []),\n    js: (a.js || []).concat(b.js || [])\n  }\n}\nvar templates = function() {\n  return App.pages.map(p => {\n    return {\n      title: p.title,\n      filename: p.entry + '.html',\n      template: path.resolve(__dirname, 'index.tpl'),\n      cdn: merge(App.cdn, p.cdn),\n      chunks: ['vendor', 'manifest', p.entry]\n    }\n  })\n}\ncooking.set({\n  template: templates()\n})\n模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title><%= htmlWebpackPlugin.options.title %></title>\n    <% for (var i in htmlWebpackPlugin.options.cdn.css) { %>\n    <link rel=\"stylesheet\" href=\"<%= htmlWebpackPlugin.options.cdn.css[i] %>\"><% } %>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <% for (var i in htmlWebpackPlugin.options.cdn.js) { %>\n    <script src=\"<%= htmlWebpackPlugin.options.cdn.js[i] %>\"></script><% } %>\n  </body>\n</html>\n```\n## 最终配置\n最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。\n```javascript\nvar path = require('path')\nvar cooking = require('cooking')\nvar build = require('./build')\ncooking.set({\n  entry: build.entries(),\n  dist: './dist',\n  template: build.templates(),\n  devServer: {\n    port: 8081,\n    publicPath: '/',\n  },\n  clean: true,\n  hash: true,\n  sourceMap: true,\n  chunk: true,\n  publicPath: '/dist/',\n  extractCSS: true,\n  alias: {\n    'src': path.join(__dirname, 'src')\n  },\n  extends: ['vue2', 'buble', 'lint', 'autoprefixer'],\n  externals: build.externals()\n})\nmodule.exports = cooking.resolve()\n```\n\n## 运行项目\n我们直接通过 cooking 命令行启动项目。\n**cooking watch -p**\n最后我们通过 build 构建项目，最终打包文件在 dist 目录里。\n**cooking build -p**\n\n## 开发目录说明\n\n** src --开发目录\n\n +components 自定义组件\n\n +pages 页面存放，文件夹名对应页面名字\n\n +assets 静态资源文件，如公用的样式和字体文件以及图片\n\n举个栗子：\n\npages\n  + index\n    index.js   //页面初始化\n    app.vue    //页面逻辑，包括tempalte,script,style**\n\n## 引入饿了么组件\n饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件\n\n安装饿了么组件 引入 Element\n**npm i element-ui -S**\n你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。\n> ¶ 完整引入\n在 main.js 中写入以下内容：\n```javascript\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nimport App from './App.vue'\nVue.use(ElementUI)\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n```\n> ¶ 按需引入\n借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。\n首先，安装 **babel-plugin-component：npm install babel-plugin-component -D**\n```javascript\nimport Vue from 'vue';\nimport App from './app';\nimport { Button, Select } from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nVue.use(Button)\nVue.use(Select)\n\nnew Vue({\n    el: \"#app\",\n    render:h => h(App)\n})\n```\n然后，将 .babelrc 修改为：\n```javascript\n{\n  \"presets\": [\"es2015\", \"stage-0\", \"stage-2\"],\n  \"comments\": false,\n  \"env\": {\n    \"production\": {\n      \"plugins\": [\n        [\"transform-runtime\", { \"polyfill\": false, \"regenerator\": false }],\n        [\"component\", [\n          {\n            \"libraryName\": \"element-ui\",\n            \"styleLibraryName\": \"theme-default\"\n          }\n        ]]\n      ]\n    }\n  }\n}\n```\n参考脚手架：[麦麦的github](https://github.com/maimai123/cookingVue2.git)\n","source":"_posts/用 cooking 搭建一个多页面易配置的 Vue 2 项目.md","raw":"---\ntitle: 用 cooking 搭建一个多页面易配置的 Vue 2 项目\n---\n学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-> 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自[知乎](https://zhuanlan.zhihu.com/p/22610408)\n\n## 搭建基础项目--<font size=1>直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font>\n**npm i cooking-cli -g**\nor 切换至淘宝镜像\n**npm i cooking-cli -g --registry=https://registry.npm.taobao.org**\n完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。\n**cooking create xxx vue**\n接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。\n> [?] Give your app a name: multiple-pages\n> [?] Give your app a description: A vue project.\n> [?] Private? Yes\n> [?] What Vue version do you what? Vue 2\n> [?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)\n> [?] What way use cooking do you want? Global cooking (webpack 2)\n> [?] Need dev server? Yes\n> [?] What CSS preprocessor do you want to use? Only CSS\n> [?] Setup unit tests with Karma + Mocha? No\n> [?] git repository:\n> [?] author:\n> [?] license: ISC\n> [?] Continue? Yes\n\n最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。\n\n## 多页面项目分析\n写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。\n<!--more-->\n```javascript\n{\n  \"pages\": [\n    {\n      \"entry\": \"home\",\n      \"title\": \"首页\",\n      \"cdn\": {}\n    },\n    {\n      \"entry\": \"admin\",\n      \"title\": \"后台\",\n      \"cdn\": {}\n    }\n  ],\n  \"basePath\": \"./src/pages/\",\n  \"cdn\": {\n    \"js\": [\n      \"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\",\n      \"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"\n    ],\n    \"css\": []\n  },\n  \"externals\": {\n    \"vue\": \"Vue\",\n    \"vuex\": \"Vuex\"\n  }\n}\n```\n同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。\n\n**index.js**\n```javascript\nimport Vue from 'vue'\nimport App from './app'\nnew Vue({ // eslint-disable-line\n  el: '#app',\n  render: h => h(App)\n})\n```\n**app.vue**\n```javascript\n<template>\n  <div>\n    <h1>首页</h1>\n    <p>A vue project.</p>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'app'\n  };\n</script>\n```\n## 配置 cooking --<font size=1>入口文件</font>\n接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。\n\n> **var App = require('./app.json')\n> var entries = function() {\n>   var result = {}\n>   App.pages.forEach(p => {\n>     result[p.entry] = path.resolve(App.basePath, p.entry)\n>   })\n>   return result\n> }\n> cooking.set({\n>   entry: entries()\n> })**\n\n## 模板文件\n所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。\n```javascript\nvar App = require('./app.json')\nvar path = require('path')\nvar merge = function(a, b) {\n  return {\n    css: (a.css || []).concat(b.css || []),\n    js: (a.js || []).concat(b.js || [])\n  }\n}\nvar templates = function() {\n  return App.pages.map(p => {\n    return {\n      title: p.title,\n      filename: p.entry + '.html',\n      template: path.resolve(__dirname, 'index.tpl'),\n      cdn: merge(App.cdn, p.cdn),\n      chunks: ['vendor', 'manifest', p.entry]\n    }\n  })\n}\ncooking.set({\n  template: templates()\n})\n模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title><%= htmlWebpackPlugin.options.title %></title>\n    <% for (var i in htmlWebpackPlugin.options.cdn.css) { %>\n    <link rel=\"stylesheet\" href=\"<%= htmlWebpackPlugin.options.cdn.css[i] %>\"><% } %>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <% for (var i in htmlWebpackPlugin.options.cdn.js) { %>\n    <script src=\"<%= htmlWebpackPlugin.options.cdn.js[i] %>\"></script><% } %>\n  </body>\n</html>\n```\n## 最终配置\n最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。\n```javascript\nvar path = require('path')\nvar cooking = require('cooking')\nvar build = require('./build')\ncooking.set({\n  entry: build.entries(),\n  dist: './dist',\n  template: build.templates(),\n  devServer: {\n    port: 8081,\n    publicPath: '/',\n  },\n  clean: true,\n  hash: true,\n  sourceMap: true,\n  chunk: true,\n  publicPath: '/dist/',\n  extractCSS: true,\n  alias: {\n    'src': path.join(__dirname, 'src')\n  },\n  extends: ['vue2', 'buble', 'lint', 'autoprefixer'],\n  externals: build.externals()\n})\nmodule.exports = cooking.resolve()\n```\n\n## 运行项目\n我们直接通过 cooking 命令行启动项目。\n**cooking watch -p**\n最后我们通过 build 构建项目，最终打包文件在 dist 目录里。\n**cooking build -p**\n\n## 开发目录说明\n\n** src --开发目录\n\n +components 自定义组件\n\n +pages 页面存放，文件夹名对应页面名字\n\n +assets 静态资源文件，如公用的样式和字体文件以及图片\n\n举个栗子：\n\npages\n  + index\n    index.js   //页面初始化\n    app.vue    //页面逻辑，包括tempalte,script,style**\n\n## 引入饿了么组件\n饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件\n\n安装饿了么组件 引入 Element\n**npm i element-ui -S**\n你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。\n> ¶ 完整引入\n在 main.js 中写入以下内容：\n```javascript\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nimport App from './App.vue'\nVue.use(ElementUI)\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n```\n> ¶ 按需引入\n借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。\n首先，安装 **babel-plugin-component：npm install babel-plugin-component -D**\n```javascript\nimport Vue from 'vue';\nimport App from './app';\nimport { Button, Select } from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nVue.use(Button)\nVue.use(Select)\n\nnew Vue({\n    el: \"#app\",\n    render:h => h(App)\n})\n```\n然后，将 .babelrc 修改为：\n```javascript\n{\n  \"presets\": [\"es2015\", \"stage-0\", \"stage-2\"],\n  \"comments\": false,\n  \"env\": {\n    \"production\": {\n      \"plugins\": [\n        [\"transform-runtime\", { \"polyfill\": false, \"regenerator\": false }],\n        [\"component\", [\n          {\n            \"libraryName\": \"element-ui\",\n            \"styleLibraryName\": \"theme-default\"\n          }\n        ]]\n      ]\n    }\n  }\n}\n```\n参考脚手架：[麦麦的github](https://github.com/maimai123/cookingVue2.git)\n","slug":"用 cooking 搭建一个多页面易配置的 Vue 2 项目","published":1,"date":"2017-03-24T09:58:17.330Z","updated":"2017-03-24T09:58:17.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1gu0008mwigylsqvg64","content":"<p>学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-&gt; 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自<a href=\"https://zhuanlan.zhihu.com/p/22610408\" target=\"_blank\" rel=\"external\">知乎</a></p>\n<h2 id=\"搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\"><a href=\"#搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\" class=\"headerlink\" title=\"搭建基础项目–直接通过 cooking 的命令行工具直接生成一个 Vue 项目\"></a>搭建基础项目–<font size=\"1\">直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font></h2><p><strong>npm i cooking-cli -g</strong><br>or 切换至淘宝镜像<br><strong>npm i cooking-cli -g –registry=<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a></strong><br>完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。<br><strong>cooking create xxx vue</strong><br>接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。</p>\n<blockquote>\n<p>[?] Give your app a name: multiple-pages<br>[?] Give your app a description: A vue project.<br>[?] Private? Yes<br>[?] What Vue version do you what? Vue 2<br>[?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)<br>[?] What way use cooking do you want? Global cooking (webpack 2)<br>[?] Need dev server? Yes<br>[?] What CSS preprocessor do you want to use? Only CSS<br>[?] Setup unit tests with Karma + Mocha? No<br>[?] git repository:<br>[?] author:<br>[?] license: ISC<br>[?] Continue? Yes</p>\n</blockquote>\n<p>最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。</p>\n<h2 id=\"多页面项目分析\"><a href=\"#多页面项目分析\" class=\"headerlink\" title=\"多页面项目分析\"></a>多页面项目分析</h2><p>写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"string\">\"pages\"</span>: [</div><div class=\"line\">    &#123;</div><div class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"home\"</span>,</div><div class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"首页\"</span>,</div><div class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    &#123;</div><div class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"admin\"</span>,</div><div class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"后台\"</span>,</div><div class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  ],</div><div class=\"line\">  <span class=\"string\">\"basePath\"</span>: <span class=\"string\">\"./src/pages/\"</span>,</div><div class=\"line\">  <span class=\"string\">\"cdn\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"js\"</span>: [</div><div class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\"</span>,</div><div class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"</span></div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"string\">\"css\"</span>: []</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"string\">\"externals\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"Vue\"</span>,</div><div class=\"line\">    <span class=\"string\">\"vuex\"</span>: <span class=\"string\">\"Vuex\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。</p>\n<p><strong>index.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123; <span class=\"comment\">// eslint-disable-line</span></div><div class=\"line\">  el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p><strong>app.vue</strong><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div&gt;</div><div class=\"line\">    &lt;h1&gt;首页&lt;/h1&gt;</div><div class=\"line\">    &lt;p&gt;A vue project.&lt;/p&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">  export default &#123;</div><div class=\"line\">    name: 'app'</div><div class=\"line\">  &#125;;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置-cooking-–入口文件\"><a href=\"#配置-cooking-–入口文件\" class=\"headerlink\" title=\"配置 cooking –入口文件\"></a>配置 cooking –<font size=\"1\">入口文件</font></h2><p>接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。</p>\n<blockquote>\n<p><strong>var App = require(‘./app.json’)<br>var entries = function() {<br>  var result = {}<br>  App.pages.forEach(p =&gt; {<br>    result[p.entry] = path.resolve(App.basePath, p.entry)<br>  })<br>  return result<br>}<br>cooking.set({<br>  entry: entries()<br>})</strong></p>\n</blockquote>\n<h2 id=\"模板文件\"><a href=\"#模板文件\" class=\"headerlink\" title=\"模板文件\"></a>模板文件</h2><p>所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"built_in\">require</span>(<span class=\"string\">'./app.json'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">css</span>: (a.css || []).concat(b.css || []),</div><div class=\"line\">    <span class=\"attr\">js</span>: (a.js || []).concat(b.js || [])</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> templates = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> App.pages.map(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">title</span>: p.title,</div><div class=\"line\">      <span class=\"attr\">filename</span>: p.entry + <span class=\"string\">'.html'</span>,</div><div class=\"line\">      <span class=\"attr\">template</span>: path.resolve(__dirname, <span class=\"string\">'index.tpl'</span>),</div><div class=\"line\">      <span class=\"attr\">cdn</span>: merge(App.cdn, p.cdn),</div><div class=\"line\">      <span class=\"attr\">chunks</span>: [<span class=\"string\">'vendor'</span>, <span class=\"string\">'manifest'</span>, p.entry]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\">cooking.set(&#123;</div><div class=\"line\">  <span class=\"attr\">template</span>: templates()</div><div class=\"line\">&#125;)</div><div class=\"line\">模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。</div><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\">    &lt;meta charset=\"utf-8\"&gt;</div><div class=\"line\">    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</div><div class=\"line\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.css) &#123; %&gt;</div><div class=\"line\">    &lt;link rel=\"stylesheet\" href=\"&lt;%= htmlWebpackPlugin.options.cdn.css[i] %&gt;\"&gt;&lt;% &#125; %&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">    &lt;div id=\"app\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.js) &#123; %&gt;</div><div class=\"line\">    &lt;script src=\"&lt;%= htmlWebpackPlugin.options.cdn.js[i] %&gt;\"&gt;&lt;/script&gt;&lt;% &#125; %&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"最终配置\"><a href=\"#最终配置\" class=\"headerlink\" title=\"最终配置\"></a>最终配置</h2><p>最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> cooking = <span class=\"built_in\">require</span>(<span class=\"string\">'cooking'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> build = <span class=\"built_in\">require</span>(<span class=\"string\">'./build'</span>)</div><div class=\"line\">cooking.set(&#123;</div><div class=\"line\">  <span class=\"attr\">entry</span>: build.entries(),</div><div class=\"line\">  <span class=\"attr\">dist</span>: <span class=\"string\">'./dist'</span>,</div><div class=\"line\">  <span class=\"attr\">template</span>: build.templates(),</div><div class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8081</span>,</div><div class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">'/'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">clean</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">hash</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">sourceMap</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">chunk</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">publicPath</span>: <span class=\"string\">'/dist/'</span>,</div><div class=\"line\">  <span class=\"attr\">extractCSS</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">alias</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'src'</span>: path.join(__dirname, <span class=\"string\">'src'</span>)</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">extends</span>: [<span class=\"string\">'vue2'</span>, <span class=\"string\">'buble'</span>, <span class=\"string\">'lint'</span>, <span class=\"string\">'autoprefixer'</span>],</div><div class=\"line\">  <span class=\"attr\">externals</span>: build.externals()</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">module</span>.exports = cooking.resolve()</div></pre></td></tr></table></figure></p>\n<h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>我们直接通过 cooking 命令行启动项目。<br><strong>cooking watch -p</strong><br>最后我们通过 build 构建项目，最终打包文件在 dist 目录里。<br><strong>cooking build -p</strong></p>\n<h2 id=\"开发目录说明\"><a href=\"#开发目录说明\" class=\"headerlink\" title=\"开发目录说明\"></a>开发目录说明</h2><p>** src –开发目录</p>\n<p> +components 自定义组件</p>\n<p> +pages 页面存放，文件夹名对应页面名字</p>\n<p> +assets 静态资源文件，如公用的样式和字体文件以及图片</p>\n<p>举个栗子：</p>\n<p>pages</p>\n<ul>\n<li>index<br>index.js   //页面初始化<br>app.vue    //页面逻辑，包括tempalte,script,style**</li>\n</ul>\n<h2 id=\"引入饿了么组件\"><a href=\"#引入饿了么组件\" class=\"headerlink\" title=\"引入饿了么组件\"></a>引入饿了么组件</h2><p>饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件</p>\n<p>安装饿了么组件 引入 Element<br><strong>npm i element-ui -S</strong><br>你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。</p>\n<blockquote>\n<p>¶ 完整引入<br>在 main.js 中写入以下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></div><div class=\"line\">Vue.use(ElementUI)</div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">'#app'</span>,</div><div class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>¶ 按需引入<br>借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。<br>首先，安装 <strong>babel-plugin-component：npm install babel-plugin-component -D</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></div><div class=\"line\">Vue.use(Button)</div><div class=\"line\">Vue.use(Select)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">\"#app\"</span>,</div><div class=\"line\">    <span class=\"attr\">render</span>:<span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>然后，将 .babelrc 修改为：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"es2015\"</span>, <span class=\"string\">\"stage-0\"</span>, <span class=\"string\">\"stage-2\"</span>],</div><div class=\"line\">  <span class=\"string\">\"comments\"</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"string\">\"env\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"production\"</span>: &#123;</div><div class=\"line\">      <span class=\"string\">\"plugins\"</span>: [</div><div class=\"line\">        [<span class=\"string\">\"transform-runtime\"</span>, &#123; <span class=\"string\">\"polyfill\"</span>: <span class=\"literal\">false</span>, <span class=\"string\">\"regenerator\"</span>: <span class=\"literal\">false</span> &#125;],</div><div class=\"line\">        [<span class=\"string\">\"component\"</span>, [</div><div class=\"line\">          &#123;</div><div class=\"line\">            <span class=\"string\">\"libraryName\"</span>: <span class=\"string\">\"element-ui\"</span>,</div><div class=\"line\">            <span class=\"string\">\"styleLibraryName\"</span>: <span class=\"string\">\"theme-default\"</span></div><div class=\"line\">          &#125;</div><div class=\"line\">        ]]</div><div class=\"line\">      ]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>参考脚手架：<a href=\"https://github.com/maimai123/cookingVue2.git\" target=\"_blank\" rel=\"external\">麦麦的github</a></p>\n","excerpt":"<p>学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-&gt; 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自<a href=\"https://zhuanlan.zhihu.com/p/22610408\">知乎</a></p>\n<h2 id=\"搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\"><a href=\"#搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\" class=\"headerlink\" title=\"搭建基础项目–直接通过 cooking 的命令行工具直接生成一个 Vue 项目\"></a>搭建基础项目–<font size=1>直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font></h2><p><strong>npm i cooking-cli -g</strong><br>or 切换至淘宝镜像<br><strong>npm i cooking-cli -g –registry=<a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a></strong><br>完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。<br><strong>cooking create xxx vue</strong><br>接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。</p>\n<blockquote>\n<p>[?] Give your app a name: multiple-pages<br>[?] Give your app a description: A vue project.<br>[?] Private? Yes<br>[?] What Vue version do you what? Vue 2<br>[?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)<br>[?] What way use cooking do you want? Global cooking (webpack 2)<br>[?] Need dev server? Yes<br>[?] What CSS preprocessor do you want to use? Only CSS<br>[?] Setup unit tests with Karma + Mocha? No<br>[?] git repository:<br>[?] author:<br>[?] license: ISC<br>[?] Continue? Yes</p>\n</blockquote>\n<p>最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。</p>\n<h2 id=\"多页面项目分析\"><a href=\"#多页面项目分析\" class=\"headerlink\" title=\"多页面项目分析\"></a>多页面项目分析</h2><p>写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"string\">\"pages\"</span>: [</div><div class=\"line\">    &#123;</div><div class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"home\"</span>,</div><div class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"首页\"</span>,</div><div class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    &#123;</div><div class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"admin\"</span>,</div><div class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"后台\"</span>,</div><div class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  ],</div><div class=\"line\">  <span class=\"string\">\"basePath\"</span>: <span class=\"string\">\"./src/pages/\"</span>,</div><div class=\"line\">  <span class=\"string\">\"cdn\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"js\"</span>: [</div><div class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\"</span>,</div><div class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"</span></div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"string\">\"css\"</span>: []</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"string\">\"externals\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"Vue\"</span>,</div><div class=\"line\">    <span class=\"string\">\"vuex\"</span>: <span class=\"string\">\"Vuex\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。</p>\n<p><strong>index.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123; <span class=\"comment\">// eslint-disable-line</span></div><div class=\"line\">  el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p><strong>app.vue</strong><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div&gt;</div><div class=\"line\">    &lt;h1&gt;首页&lt;/h1&gt;</div><div class=\"line\">    &lt;p&gt;A vue project.&lt;/p&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">  export default &#123;</div><div class=\"line\">    name: 'app'</div><div class=\"line\">  &#125;;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置-cooking-–入口文件\"><a href=\"#配置-cooking-–入口文件\" class=\"headerlink\" title=\"配置 cooking –入口文件\"></a>配置 cooking –<font size=1>入口文件</font></h2><p>接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。</p>\n<blockquote>\n<p><strong>var App = require(‘./app.json’)<br>var entries = function() {<br>  var result = {}<br>  App.pages.forEach(p =&gt; {<br>    result[p.entry] = path.resolve(App.basePath, p.entry)<br>  })<br>  return result<br>}<br>cooking.set({<br>  entry: entries()<br>})</strong></p>\n</blockquote>\n<h2 id=\"模板文件\"><a href=\"#模板文件\" class=\"headerlink\" title=\"模板文件\"></a>模板文件</h2><p>所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"built_in\">require</span>(<span class=\"string\">'./app.json'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">css</span>: (a.css || []).concat(b.css || []),</div><div class=\"line\">    <span class=\"attr\">js</span>: (a.js || []).concat(b.js || [])</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> templates = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> App.pages.map(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">title</span>: p.title,</div><div class=\"line\">      <span class=\"attr\">filename</span>: p.entry + <span class=\"string\">'.html'</span>,</div><div class=\"line\">      <span class=\"attr\">template</span>: path.resolve(__dirname, <span class=\"string\">'index.tpl'</span>),</div><div class=\"line\">      <span class=\"attr\">cdn</span>: merge(App.cdn, p.cdn),</div><div class=\"line\">      <span class=\"attr\">chunks</span>: [<span class=\"string\">'vendor'</span>, <span class=\"string\">'manifest'</span>, p.entry]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\">cooking.set(&#123;</div><div class=\"line\">  <span class=\"attr\">template</span>: templates()</div><div class=\"line\">&#125;)</div><div class=\"line\">模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。</div><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\">    &lt;meta charset=\"utf-8\"&gt;</div><div class=\"line\">    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</div><div class=\"line\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.css) &#123; %&gt;</div><div class=\"line\">    &lt;link rel=\"stylesheet\" href=\"&lt;%= htmlWebpackPlugin.options.cdn.css[i] %&gt;\"&gt;&lt;% &#125; %&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">    &lt;div id=\"app\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.js) &#123; %&gt;</div><div class=\"line\">    &lt;script src=\"&lt;%= htmlWebpackPlugin.options.cdn.js[i] %&gt;\"&gt;&lt;/script&gt;&lt;% &#125; %&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"最终配置\"><a href=\"#最终配置\" class=\"headerlink\" title=\"最终配置\"></a>最终配置</h2><p>最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> cooking = <span class=\"built_in\">require</span>(<span class=\"string\">'cooking'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> build = <span class=\"built_in\">require</span>(<span class=\"string\">'./build'</span>)</div><div class=\"line\">cooking.set(&#123;</div><div class=\"line\">  <span class=\"attr\">entry</span>: build.entries(),</div><div class=\"line\">  <span class=\"attr\">dist</span>: <span class=\"string\">'./dist'</span>,</div><div class=\"line\">  <span class=\"attr\">template</span>: build.templates(),</div><div class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8081</span>,</div><div class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">'/'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">clean</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">hash</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">sourceMap</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">chunk</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">publicPath</span>: <span class=\"string\">'/dist/'</span>,</div><div class=\"line\">  <span class=\"attr\">extractCSS</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">alias</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'src'</span>: path.join(__dirname, <span class=\"string\">'src'</span>)</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">extends</span>: [<span class=\"string\">'vue2'</span>, <span class=\"string\">'buble'</span>, <span class=\"string\">'lint'</span>, <span class=\"string\">'autoprefixer'</span>],</div><div class=\"line\">  <span class=\"attr\">externals</span>: build.externals()</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">module</span>.exports = cooking.resolve()</div></pre></td></tr></table></figure></p>\n<h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>我们直接通过 cooking 命令行启动项目。<br><strong>cooking watch -p</strong><br>最后我们通过 build 构建项目，最终打包文件在 dist 目录里。<br><strong>cooking build -p</strong></p>\n<h2 id=\"开发目录说明\"><a href=\"#开发目录说明\" class=\"headerlink\" title=\"开发目录说明\"></a>开发目录说明</h2><p>** src –开发目录</p>\n<p> +components 自定义组件</p>\n<p> +pages 页面存放，文件夹名对应页面名字</p>\n<p> +assets 静态资源文件，如公用的样式和字体文件以及图片</p>\n<p>举个栗子：</p>\n<p>pages</p>\n<ul>\n<li>index<br>index.js   //页面初始化<br>app.vue    //页面逻辑，包括tempalte,script,style**</li>\n</ul>\n<h2 id=\"引入饿了么组件\"><a href=\"#引入饿了么组件\" class=\"headerlink\" title=\"引入饿了么组件\"></a>引入饿了么组件</h2><p>饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件</p>\n<p>安装饿了么组件 引入 Element<br><strong>npm i element-ui -S</strong><br>你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。</p>\n<blockquote>\n<p>¶ 完整引入<br>在 main.js 中写入以下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></div><div class=\"line\">Vue.use(ElementUI)</div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">'#app'</span>,</div><div class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>¶ 按需引入<br>借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。<br>首先，安装 <strong>babel-plugin-component：npm install babel-plugin-component -D</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></div><div class=\"line\">Vue.use(Button)</div><div class=\"line\">Vue.use(Select)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">\"#app\"</span>,</div><div class=\"line\">    <span class=\"attr\">render</span>:<span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>然后，将 .babelrc 修改为：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"es2015\"</span>, <span class=\"string\">\"stage-0\"</span>, <span class=\"string\">\"stage-2\"</span>],</div><div class=\"line\">  <span class=\"string\">\"comments\"</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"string\">\"env\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"production\"</span>: &#123;</div><div class=\"line\">      <span class=\"string\">\"plugins\"</span>: [</div><div class=\"line\">        [<span class=\"string\">\"transform-runtime\"</span>, &#123; <span class=\"string\">\"polyfill\"</span>: <span class=\"literal\">false</span>, <span class=\"string\">\"regenerator\"</span>: <span class=\"literal\">false</span> &#125;],</div><div class=\"line\">        [<span class=\"string\">\"component\"</span>, [</div><div class=\"line\">          &#123;</div><div class=\"line\">            <span class=\"string\">\"libraryName\"</span>: <span class=\"string\">\"element-ui\"</span>,</div><div class=\"line\">            <span class=\"string\">\"styleLibraryName\"</span>: <span class=\"string\">\"theme-default\"</span></div><div class=\"line\">          &#125;</div><div class=\"line\">        ]]</div><div class=\"line\">      ]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>参考脚手架：<a href=\"https://github.com/maimai123/cookingVue2.git\">麦麦的github</a></p>"},{"title":"进入差评后的小笔记（麦麦）","_content":"啦啦啦啦啦啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## Intersting\n## 1、Vue.filter 过滤\n```javascript\nfilterShoppingList: function () {\n    var key = this.key;\n    var shoppingList = this.shoppingList;\n    return shoppingList.filter(function (item) {\n        return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n    });;\n}\n```\n\n## 2、数组对象去重（根据时间一样去重，把title合并）\n```javascript\nvar arr = [\n  {\n    time:'211521',\n    title:[\n      '111111111111111'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我有一只小毛驴',\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我重来也不骑'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '有一天我心血来潮'\n    ]\n  },\n  {\n    time:'23werwef3',\n    title:[\n      '111111111111111'\n    ]\n  }\n];\nvar result = [], hash = {};\nfor (var i = 0; i<arr.length; i++) { //去重\n  var elem = arr[i].time;\n  if (!hash[elem]) {\n      result.push(arr[i]);\n      hash[elem] = true;\n  }else{\n    for (var j = 0; j<result.length; j++) { //填数据\n      if(result[j].time == elem){\n        console.log(arr[i].title)\n        result[j].title.push(arr[i].title[0])\n      }\n    }\n  }\n}\nconsole.log(result)\n```\n<!--more-->\n## 3、页面判断是手机就打开手机网址\n```javascript\n  let ua = window.navigator.userAgent.toLocaleLowerCase()\n  let murl =\"//m.jd.com\",\n  let reg =/iphone|android|symbianos|windows\\sphone/g\n  if (reg .test(ua )) {\n      window.location.href = murl\n  }\n```\n\n## 4、 返回对象的函数能够用于链式操作\n```javascript\nfunction Person(name) {\n  this.name = name;\n  this.sayName = function() {\n    console.log(\"Hello my name is: \", this.name);\n    return this;\n  };\n  this.changeName = function(name) {\n    this.name = name;\n    return this;\n  };\n}\nvar person = new Person(\"John\");\nperson.sayName().changeName(\"Timmy\").sayName();\n//Hello my name is: John\n//Hello my name is: Timmy\n```\n\n## 5、有趣的css小动画\n![img](https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177)\n```javascript\n<div class=\"triangle2rect\">\n    <div class=\"a\"></div>\n    <div class=\"b\"></div>\n    <div class=\"c\"></div>\n    <div class=\"d\"></div>\n</div>\n.triangle2rect {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: aniContainer 2s infinite alternate;\n}\n.triangle2rect div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.a {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    animation: a 2s infinite alternate;\n}\n.b {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    animation: b 2s infinite alternate;\n}\n.c {\n    background: deeppink;\n    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    animation: c 2s infinite alternate;\n}\n.d {\n    background: deeppink;\n    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    animation: d 2s infinite alternate;\n}\n@keyframes a {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);\n    }\n}\n@keyframes b {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);\n    }\n}\n@keyframes c {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);\n    }\n}\n@keyframes d {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);\n    }\n}\n```\n\n## 6、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/差评小计.md","raw":"---\ntitle: 进入差评后的小笔记（麦麦）\n---\n啦啦啦啦啦啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## Intersting\n## 1、Vue.filter 过滤\n```javascript\nfilterShoppingList: function () {\n    var key = this.key;\n    var shoppingList = this.shoppingList;\n    return shoppingList.filter(function (item) {\n        return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n    });;\n}\n```\n\n## 2、数组对象去重（根据时间一样去重，把title合并）\n```javascript\nvar arr = [\n  {\n    time:'211521',\n    title:[\n      '111111111111111'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我有一只小毛驴',\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我重来也不骑'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '有一天我心血来潮'\n    ]\n  },\n  {\n    time:'23werwef3',\n    title:[\n      '111111111111111'\n    ]\n  }\n];\nvar result = [], hash = {};\nfor (var i = 0; i<arr.length; i++) { //去重\n  var elem = arr[i].time;\n  if (!hash[elem]) {\n      result.push(arr[i]);\n      hash[elem] = true;\n  }else{\n    for (var j = 0; j<result.length; j++) { //填数据\n      if(result[j].time == elem){\n        console.log(arr[i].title)\n        result[j].title.push(arr[i].title[0])\n      }\n    }\n  }\n}\nconsole.log(result)\n```\n<!--more-->\n## 3、页面判断是手机就打开手机网址\n```javascript\n  let ua = window.navigator.userAgent.toLocaleLowerCase()\n  let murl =\"//m.jd.com\",\n  let reg =/iphone|android|symbianos|windows\\sphone/g\n  if (reg .test(ua )) {\n      window.location.href = murl\n  }\n```\n\n## 4、 返回对象的函数能够用于链式操作\n```javascript\nfunction Person(name) {\n  this.name = name;\n  this.sayName = function() {\n    console.log(\"Hello my name is: \", this.name);\n    return this;\n  };\n  this.changeName = function(name) {\n    this.name = name;\n    return this;\n  };\n}\nvar person = new Person(\"John\");\nperson.sayName().changeName(\"Timmy\").sayName();\n//Hello my name is: John\n//Hello my name is: Timmy\n```\n\n## 5、有趣的css小动画\n![img](https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177)\n```javascript\n<div class=\"triangle2rect\">\n    <div class=\"a\"></div>\n    <div class=\"b\"></div>\n    <div class=\"c\"></div>\n    <div class=\"d\"></div>\n</div>\n.triangle2rect {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: aniContainer 2s infinite alternate;\n}\n.triangle2rect div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.a {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    animation: a 2s infinite alternate;\n}\n.b {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    animation: b 2s infinite alternate;\n}\n.c {\n    background: deeppink;\n    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    animation: c 2s infinite alternate;\n}\n.d {\n    background: deeppink;\n    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    animation: d 2s infinite alternate;\n}\n@keyframes a {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);\n    }\n}\n@keyframes b {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);\n    }\n}\n@keyframes c {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);\n    }\n}\n@keyframes d {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);\n    }\n}\n```\n\n## 6、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"差评小计","published":1,"date":"2017-04-19T07:30:46.657Z","updated":"2017-07-18T10:17:26.372Z","_id":"cj59di1gv0009mwigw0afxefh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>啦啦啦啦啦啦~</p>\n<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Intersting\"><a href=\"#Intersting\" class=\"headerlink\" title=\"Intersting\"></a>Intersting</h2><h2 id=\"1、Vue-filter-过滤\"><a href=\"#1、Vue-filter-过滤\" class=\"headerlink\" title=\"1、Vue.filter 过滤\"></a>1、Vue.filter 过滤</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">filterShoppingList: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> key = <span class=\"keyword\">this</span>.key;</div><div class=\"line\">    <span class=\"keyword\">var</span> shoppingList = <span class=\"keyword\">this</span>.shoppingList;</div><div class=\"line\">    <span class=\"keyword\">return</span> shoppingList.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> item.toLowerCase().indexOf(key.toLowerCase()) != <span class=\"number\">-1</span></div><div class=\"line\">    &#125;);;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2、数组对象去重（根据时间一样去重，把title合并）\"><a href=\"#2、数组对象去重（根据时间一样去重，把title合并）\" class=\"headerlink\" title=\"2、数组对象去重（根据时间一样去重，把title合并）\"></a>2、数组对象去重（根据时间一样去重，把title合并）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'211521'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'111111111111111'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23333333333'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'我有一只小毛驴'</span>,</div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23333333333'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'我重来也不骑'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23333333333'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'有一天我心血来潮'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23werwef3'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'111111111111111'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;</div><div class=\"line\">];</div><div class=\"line\"><span class=\"keyword\">var</span> result = [], hash = &#123;&#125;;</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;arr.length; i++) &#123; <span class=\"comment\">//去重</span></div><div class=\"line\">  <span class=\"keyword\">var</span> elem = arr[i].time;</div><div class=\"line\">  <span class=\"keyword\">if</span> (!hash[elem]) &#123;</div><div class=\"line\">      result.push(arr[i]);</div><div class=\"line\">      hash[elem] = <span class=\"literal\">true</span>;</div><div class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j&lt;result.length; j++) &#123; <span class=\"comment\">//填数据</span></div><div class=\"line\">      <span class=\"keyword\">if</span>(result[j].time == elem)&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(arr[i].title)</div><div class=\"line\">        result[j].title.push(arr[i].title[<span class=\"number\">0</span>])</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result)</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"3、页面判断是手机就打开手机网址\"><a href=\"#3、页面判断是手机就打开手机网址\" class=\"headerlink\" title=\"3、页面判断是手机就打开手机网址\"></a>3、页面判断是手机就打开手机网址</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ua = <span class=\"built_in\">window</span>.navigator.userAgent.toLocaleLowerCase()</div><div class=\"line\"><span class=\"keyword\">let</span> murl =<span class=\"string\">\"//m.jd.com\"</span>,</div><div class=\"line\"><span class=\"keyword\">let</span> reg =<span class=\"regexp\">/iphone|android|symbianos|windows\\sphone/g</span></div><div class=\"line\"><span class=\"keyword\">if</span> (reg .test(ua )) &#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.location.href = murl</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4、-返回对象的函数能够用于链式操作\"><a href=\"#4、-返回对象的函数能够用于链式操作\" class=\"headerlink\" title=\"4、 返回对象的函数能够用于链式操作\"></a>4、 返回对象的函数能够用于链式操作</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">  <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Hello my name is: \"</span>, <span class=\"keyword\">this</span>.name);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  <span class=\"keyword\">this</span>.changeName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"John\"</span>);</div><div class=\"line\">person.sayName().changeName(<span class=\"string\">\"Timmy\"</span>).sayName();</div><div class=\"line\"><span class=\"comment\">//Hello my name is: John</span></div><div class=\"line\"><span class=\"comment\">//Hello my name is: Timmy</span></div></pre></td></tr></table></figure>\n<h2 id=\"5、有趣的css小动画\"><a href=\"#5、有趣的css小动画\" class=\"headerlink\" title=\"5、有趣的css小动画\"></a>5、有趣的css小动画</h2><p><img src=\"https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177\" alt=\"img\"><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"triangle2rect\"&gt;</div><div class=\"line\">    &lt;div class=\"a\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"b\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"c\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"d\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">.triangle2rect &#123;</div><div class=\"line\">  position: absolute;</div><div class=\"line\">  width: 100px;</div><div class=\"line\">  height: 100px;</div><div class=\"line\">  top: 50%;</div><div class=\"line\">  left: 50%;</div><div class=\"line\">  transform: translate(-50%, -50%);</div><div class=\"line\">  animation: aniContainer 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.triangle2rect div &#123;</div><div class=\"line\">  position: absolute;</div><div class=\"line\">  top: 0;</div><div class=\"line\">  left: 0;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">  height: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\">.a &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</div><div class=\"line\">    animation: a 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.b &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</div><div class=\"line\">    animation: b 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.c &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</div><div class=\"line\">    animation: c 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.d &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</div><div class=\"line\">    animation: d 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes a &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes b &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes c &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes d &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"6、请耐心等待，麦麦会不定期更新哒\"><a href=\"#6、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"6、请耐心等待，麦麦会不定期更新哒~\"></a>6、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"external\">麦麦</a></p>\n","excerpt":"<p>啦啦啦啦啦啦~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Intersting\"><a href=\"#Intersting\" class=\"headerlink\" title=\"Intersting\"></a>Intersting</h2><h2 id=\"1、Vue-filter-过滤\"><a href=\"#1、Vue-filter-过滤\" class=\"headerlink\" title=\"1、Vue.filter 过滤\"></a>1、Vue.filter 过滤</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">filterShoppingList: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> key = <span class=\"keyword\">this</span>.key;</div><div class=\"line\">    <span class=\"keyword\">var</span> shoppingList = <span class=\"keyword\">this</span>.shoppingList;</div><div class=\"line\">    <span class=\"keyword\">return</span> shoppingList.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> item.toLowerCase().indexOf(key.toLowerCase()) != <span class=\"number\">-1</span></div><div class=\"line\">    &#125;);;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2、数组对象去重（根据时间一样去重，把title合并）\"><a href=\"#2、数组对象去重（根据时间一样去重，把title合并）\" class=\"headerlink\" title=\"2、数组对象去重（根据时间一样去重，把title合并）\"></a>2、数组对象去重（根据时间一样去重，把title合并）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'211521'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'111111111111111'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23333333333'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'我有一只小毛驴'</span>,</div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23333333333'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'我重来也不骑'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23333333333'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'有一天我心血来潮'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">time</span>:<span class=\"string\">'23werwef3'</span>,</div><div class=\"line\">    <span class=\"attr\">title</span>:[</div><div class=\"line\">      <span class=\"string\">'111111111111111'</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;</div><div class=\"line\">];</div><div class=\"line\"><span class=\"keyword\">var</span> result = [], hash = &#123;&#125;;</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;arr.length; i++) &#123; <span class=\"comment\">//去重</span></div><div class=\"line\">  <span class=\"keyword\">var</span> elem = arr[i].time;</div><div class=\"line\">  <span class=\"keyword\">if</span> (!hash[elem]) &#123;</div><div class=\"line\">      result.push(arr[i]);</div><div class=\"line\">      hash[elem] = <span class=\"literal\">true</span>;</div><div class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j&lt;result.length; j++) &#123; <span class=\"comment\">//填数据</span></div><div class=\"line\">      <span class=\"keyword\">if</span>(result[j].time == elem)&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(arr[i].title)</div><div class=\"line\">        result[j].title.push(arr[i].title[<span class=\"number\">0</span>])</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result)</div></pre></td></tr></table></figure>","more":"<h2 id=\"3、页面判断是手机就打开手机网址\"><a href=\"#3、页面判断是手机就打开手机网址\" class=\"headerlink\" title=\"3、页面判断是手机就打开手机网址\"></a>3、页面判断是手机就打开手机网址</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ua = <span class=\"built_in\">window</span>.navigator.userAgent.toLocaleLowerCase()</div><div class=\"line\"><span class=\"keyword\">let</span> murl =<span class=\"string\">\"//m.jd.com\"</span>,</div><div class=\"line\"><span class=\"keyword\">let</span> reg =<span class=\"regexp\">/iphone|android|symbianos|windows\\sphone/g</span></div><div class=\"line\"><span class=\"keyword\">if</span> (reg .test(ua )) &#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.location.href = murl</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4、-返回对象的函数能够用于链式操作\"><a href=\"#4、-返回对象的函数能够用于链式操作\" class=\"headerlink\" title=\"4、 返回对象的函数能够用于链式操作\"></a>4、 返回对象的函数能够用于链式操作</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">  <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Hello my name is: \"</span>, <span class=\"keyword\">this</span>.name);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  <span class=\"keyword\">this</span>.changeName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"John\"</span>);</div><div class=\"line\">person.sayName().changeName(<span class=\"string\">\"Timmy\"</span>).sayName();</div><div class=\"line\"><span class=\"comment\">//Hello my name is: John</span></div><div class=\"line\"><span class=\"comment\">//Hello my name is: Timmy</span></div></pre></td></tr></table></figure>\n<h2 id=\"5、有趣的css小动画\"><a href=\"#5、有趣的css小动画\" class=\"headerlink\" title=\"5、有趣的css小动画\"></a>5、有趣的css小动画</h2><p><img src=\"https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177\" alt=\"img\"><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"triangle2rect\"&gt;</div><div class=\"line\">    &lt;div class=\"a\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"b\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"c\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"d\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">.triangle2rect &#123;</div><div class=\"line\">  position: absolute;</div><div class=\"line\">  width: 100px;</div><div class=\"line\">  height: 100px;</div><div class=\"line\">  top: 50%;</div><div class=\"line\">  left: 50%;</div><div class=\"line\">  transform: translate(-50%, -50%);</div><div class=\"line\">  animation: aniContainer 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.triangle2rect div &#123;</div><div class=\"line\">  position: absolute;</div><div class=\"line\">  top: 0;</div><div class=\"line\">  left: 0;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">  height: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\">.a &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</div><div class=\"line\">    animation: a 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.b &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</div><div class=\"line\">    animation: b 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.c &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</div><div class=\"line\">    animation: c 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">.d &#123;</div><div class=\"line\">    background: deeppink;</div><div class=\"line\">    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</div><div class=\"line\">    animation: d 2s infinite alternate;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes a &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes b &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes c &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@keyframes d &#123;</div><div class=\"line\">    0%, 10% &#123;</div><div class=\"line\">        background: white;</div><div class=\"line\">        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</div><div class=\"line\">    &#125;</div><div class=\"line\">    90%, 100% &#123;</div><div class=\"line\">        background: #000;</div><div class=\"line\">        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"6、请耐心等待，麦麦会不定期更新哒\"><a href=\"#6、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"6、请耐心等待，麦麦会不定期更新哒~\"></a>6、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\">麦麦</a></p>"},{"title":"jquery 轮播图插件教程（麦麦）","_content":"简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的图片轮播\n效果图：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.Carousel = function(options){\n     var obj = $(this);\n     var defaults = {\n       'width' : \"100%\",\n       'height' : \"480\",\n       'speed' : \"1000\",\n       'effect' : \"fade\",\n       'delay' : \"200\",\n       \"doc\" : true ,\n       \"arrow\" : true\n     };\n     var opts = $.extend(defaults,options);\n     // 设置容器的宽高\n     obj.css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     // 设置图片的宽高和容器一致\n     obj.find(\"img\").css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     //轮播图片个数 4\n     var length = obj.find('li').length;\n     var str = \"\";\n     obj.find(\".wrapUl\").css({\"height\":opts.height});\n     obj.find(\".warp\").css({'width':opts.width * length});\n     for(var i = 0;i<length;i++){\n       str += \"<li></li>\";\n     }\n     // 如果显示小圆点\n     if( opts.doc ){\n       $(\"<ul class='docBox'>\"+str+\"</ul>\").insertAfter(obj.find(\"div\"));\n       $(\".docBox li:first\").addClass(\"active\");\n     }\n     // 小圆点情况下，如果效果为淡入淡出\n     if( opts.effect == 'fade' ){\n       obj.find('.warp li').css({\n         \"position\":'absolute',\n         \"display\":'none'\n       }).first().show();\n       var ii = 0;\n       var setTime = setInterval(function(){\n         obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);\n         $(\".docBox li\").eq(ii).addClass(\"active\").siblings().removeClass(\"active\");\n         ii++;\n         if( ii == length ){\n           ii = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setTime);\n         var index = $(this).index();\n         setTimeout(function(){\n           obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n     // 小圆点情况下，如果效果为平移\n     if( opts.effect == 'move' ){\n       var mm = 0;\n       var setMove = setInterval(function(){\n         obj.children('.warp').animate({\"left\":-(mm * opts.width)+\"px\"},opts.speed);\n         $(\".docBox li\").eq(mm).addClass(\"active\").siblings().removeClass(\"active\");\n         mm = mm+1;\n         if( mm == length ){\n           mm = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setMove);\n         var index = $(this).index();\n         var left = index * opts.width;\n         setTimeout(function(){\n           obj.children('.warp').animate({\"left\":-left+\"px\"},opts.speed);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n   };\n\n })(jQuery);\n\n//调用\n$(\".banner\").Carousel({\n  'width' : \"1200\",  //设置容器宽度(暂不支持自适应)\n  'height' : \"700\", //设置容器高度\n  'effect' : \"move\",  //值为fade为淡入淡出效果 move则为左右移动\n  'speed' : \"1000\",  //设置左右移动速度\n  'delay' : \"200\"    //设置淡入淡出速度\n});\n  ```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/轮播图.md","raw":"---\ntitle: jquery 轮播图插件教程（麦麦）\n---\n简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的图片轮播\n效果图：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.Carousel = function(options){\n     var obj = $(this);\n     var defaults = {\n       'width' : \"100%\",\n       'height' : \"480\",\n       'speed' : \"1000\",\n       'effect' : \"fade\",\n       'delay' : \"200\",\n       \"doc\" : true ,\n       \"arrow\" : true\n     };\n     var opts = $.extend(defaults,options);\n     // 设置容器的宽高\n     obj.css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     // 设置图片的宽高和容器一致\n     obj.find(\"img\").css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     //轮播图片个数 4\n     var length = obj.find('li').length;\n     var str = \"\";\n     obj.find(\".wrapUl\").css({\"height\":opts.height});\n     obj.find(\".warp\").css({'width':opts.width * length});\n     for(var i = 0;i<length;i++){\n       str += \"<li></li>\";\n     }\n     // 如果显示小圆点\n     if( opts.doc ){\n       $(\"<ul class='docBox'>\"+str+\"</ul>\").insertAfter(obj.find(\"div\"));\n       $(\".docBox li:first\").addClass(\"active\");\n     }\n     // 小圆点情况下，如果效果为淡入淡出\n     if( opts.effect == 'fade' ){\n       obj.find('.warp li').css({\n         \"position\":'absolute',\n         \"display\":'none'\n       }).first().show();\n       var ii = 0;\n       var setTime = setInterval(function(){\n         obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);\n         $(\".docBox li\").eq(ii).addClass(\"active\").siblings().removeClass(\"active\");\n         ii++;\n         if( ii == length ){\n           ii = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setTime);\n         var index = $(this).index();\n         setTimeout(function(){\n           obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n     // 小圆点情况下，如果效果为平移\n     if( opts.effect == 'move' ){\n       var mm = 0;\n       var setMove = setInterval(function(){\n         obj.children('.warp').animate({\"left\":-(mm * opts.width)+\"px\"},opts.speed);\n         $(\".docBox li\").eq(mm).addClass(\"active\").siblings().removeClass(\"active\");\n         mm = mm+1;\n         if( mm == length ){\n           mm = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setMove);\n         var index = $(this).index();\n         var left = index * opts.width;\n         setTimeout(function(){\n           obj.children('.warp').animate({\"left\":-left+\"px\"},opts.speed);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n   };\n\n })(jQuery);\n\n//调用\n$(\".banner\").Carousel({\n  'width' : \"1200\",  //设置容器宽度(暂不支持自适应)\n  'height' : \"700\", //设置容器高度\n  'effect' : \"move\",  //值为fade为淡入淡出效果 move则为左右移动\n  'speed' : \"1000\",  //设置左右移动速度\n  'delay' : \"200\"    //设置淡入淡出速度\n});\n  ```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"轮播图","published":1,"date":"2017-03-24T09:58:17.338Z","updated":"2017-03-24T09:58:17.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1h2000amwigfptyh3fa","content":"<p>简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！</p>\n<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的图片轮播<br>效果图：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\"><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ;(function($)&#123;</div><div class=\"line\">   $.fn.Carousel = function(options)&#123;</div><div class=\"line\">     var obj = $(this);</div><div class=\"line\">     var defaults = &#123;</div><div class=\"line\">       <span class=\"string\">'width'</span> : <span class=\"string\">\"100%\"</span>,</div><div class=\"line\">       <span class=\"string\">'height'</span> : <span class=\"string\">\"480\"</span>,</div><div class=\"line\">       <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,</div><div class=\"line\">       <span class=\"string\">'effect'</span> : <span class=\"string\">\"fade\"</span>,</div><div class=\"line\">       <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>,</div><div class=\"line\">       <span class=\"string\">\"doc\"</span> : true ,</div><div class=\"line\">       <span class=\"string\">\"arrow\"</span> : true</div><div class=\"line\">     &#125;;</div><div class=\"line\">     var opts = $.extend(defaults,options);</div><div class=\"line\">     // 设置容器的宽高</div><div class=\"line\">     obj.css(&#123;</div><div class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</div><div class=\"line\">       <span class=\"string\">'height'</span>:opts.height</div><div class=\"line\">     &#125;);</div><div class=\"line\">     // 设置图片的宽高和容器一致</div><div class=\"line\">     obj.find(<span class=\"string\">\"img\"</span>).css(&#123;</div><div class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</div><div class=\"line\">       <span class=\"string\">'height'</span>:opts.height</div><div class=\"line\">     &#125;);</div><div class=\"line\">     //轮播图片个数 <span class=\"number\">4</span></div><div class=\"line\">     var length = obj.find(<span class=\"string\">'li'</span>).length;</div><div class=\"line\">     var str = <span class=\"string\">\"\"</span>;</div><div class=\"line\">     obj.find(<span class=\"string\">\".wrapUl\"</span>).css(&#123;<span class=\"string\">\"height\"</span>:opts.height&#125;);</div><div class=\"line\">     obj.find(<span class=\"string\">\".warp\"</span>).css(&#123;<span class=\"string\">'width'</span>:opts.width * length&#125;);</div><div class=\"line\">     <span class=\"keyword\">for</span>(var i = <span class=\"number\">0</span>;i&lt;length;i++)&#123;</div><div class=\"line\">       str += <span class=\"string\">\"&lt;li&gt;&lt;/li&gt;\"</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 如果显示小圆点</div><div class=\"line\">     <span class=\"keyword\">if</span>( opts.doc )&#123;</div><div class=\"line\">       $(<span class=\"string\">\"&lt;ul class='docBox'&gt;\"</span>+str+<span class=\"string\">\"&lt;/ul&gt;\"</span>).insertAfter(obj.find(<span class=\"string\">\"div\"</span>));</div><div class=\"line\">       $(<span class=\"string\">\".docBox li:first\"</span>).addClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 小圆点情况下，如果效果为淡入淡出</div><div class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'fade'</span> )&#123;</div><div class=\"line\">       obj.find(<span class=\"string\">'.warp li'</span>).css(&#123;</div><div class=\"line\">         <span class=\"string\">\"position\"</span>:<span class=\"string\">'absolute'</span>,</div><div class=\"line\">         <span class=\"string\">\"display\"</span>:<span class=\"string\">'none'</span></div><div class=\"line\">       &#125;).first().show();</div><div class=\"line\">       var ii = <span class=\"number\">0</span>;</div><div class=\"line\">       var setTime = setInterval(function()&#123;</div><div class=\"line\">         obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);</div><div class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(ii).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">         ii++;</div><div class=\"line\">         <span class=\"keyword\">if</span>( ii == length )&#123;</div><div class=\"line\">           ii = <span class=\"number\">0</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">       &#125;,opts.speed);</div><div class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</div><div class=\"line\">         clearInterval(setTime);</div><div class=\"line\">         var index = $(this).index();</div><div class=\"line\">         setTimeout(function()&#123;</div><div class=\"line\">           obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);</div><div class=\"line\">         &#125;,opts.delay);</div><div class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">       &#125;);</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 小圆点情况下，如果效果为平移</div><div class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'move'</span> )&#123;</div><div class=\"line\">       var mm = <span class=\"number\">0</span>;</div><div class=\"line\">       var setMove = setInterval(function()&#123;</div><div class=\"line\">         obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-(mm * opts.width)+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</div><div class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(mm).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">         mm = mm+<span class=\"number\">1</span>;</div><div class=\"line\">         <span class=\"keyword\">if</span>( mm == length )&#123;</div><div class=\"line\">           mm = <span class=\"number\">0</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">       &#125;,opts.speed);</div><div class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</div><div class=\"line\">         clearInterval(setMove);</div><div class=\"line\">         var index = $(this).index();</div><div class=\"line\">         var left = index * opts.width;</div><div class=\"line\">         setTimeout(function()&#123;</div><div class=\"line\">           obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-left+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</div><div class=\"line\">         &#125;,opts.delay);</div><div class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">       &#125;);</div><div class=\"line\">     &#125;</div><div class=\"line\">   &#125;;</div><div class=\"line\"></div><div class=\"line\"> &#125;)(jQuery);</div><div class=\"line\"></div><div class=\"line\">//调用</div><div class=\"line\">$(<span class=\"string\">\".banner\"</span>).Carousel(&#123;</div><div class=\"line\">  <span class=\"string\">'width'</span> : <span class=\"string\">\"1200\"</span>,  //设置容器宽度(暂不支持自适应)</div><div class=\"line\">  <span class=\"string\">'height'</span> : <span class=\"string\">\"700\"</span>, //设置容器高度</div><div class=\"line\">  <span class=\"string\">'effect'</span> : <span class=\"string\">\"move\"</span>,  //值为fade为淡入淡出效果 move则为左右移动</div><div class=\"line\">  <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,  //设置左右移动速度</div><div class=\"line\">  <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>    //设置淡入淡出速度</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"","more":"<p>简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的图片轮播<br>效果图：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\" /><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ;(function($)&#123;</div><div class=\"line\">   $.fn.Carousel = function(options)&#123;</div><div class=\"line\">     var obj = $(this);</div><div class=\"line\">     var defaults = &#123;</div><div class=\"line\">       <span class=\"string\">'width'</span> : <span class=\"string\">\"100%\"</span>,</div><div class=\"line\">       <span class=\"string\">'height'</span> : <span class=\"string\">\"480\"</span>,</div><div class=\"line\">       <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,</div><div class=\"line\">       <span class=\"string\">'effect'</span> : <span class=\"string\">\"fade\"</span>,</div><div class=\"line\">       <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>,</div><div class=\"line\">       <span class=\"string\">\"doc\"</span> : true ,</div><div class=\"line\">       <span class=\"string\">\"arrow\"</span> : true</div><div class=\"line\">     &#125;;</div><div class=\"line\">     var opts = $.extend(defaults,options);</div><div class=\"line\">     // 设置容器的宽高</div><div class=\"line\">     obj.css(&#123;</div><div class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</div><div class=\"line\">       <span class=\"string\">'height'</span>:opts.height</div><div class=\"line\">     &#125;);</div><div class=\"line\">     // 设置图片的宽高和容器一致</div><div class=\"line\">     obj.find(<span class=\"string\">\"img\"</span>).css(&#123;</div><div class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</div><div class=\"line\">       <span class=\"string\">'height'</span>:opts.height</div><div class=\"line\">     &#125;);</div><div class=\"line\">     //轮播图片个数 <span class=\"number\">4</span></div><div class=\"line\">     var length = obj.find(<span class=\"string\">'li'</span>).length;</div><div class=\"line\">     var str = <span class=\"string\">\"\"</span>;</div><div class=\"line\">     obj.find(<span class=\"string\">\".wrapUl\"</span>).css(&#123;<span class=\"string\">\"height\"</span>:opts.height&#125;);</div><div class=\"line\">     obj.find(<span class=\"string\">\".warp\"</span>).css(&#123;<span class=\"string\">'width'</span>:opts.width * length&#125;);</div><div class=\"line\">     <span class=\"keyword\">for</span>(var i = <span class=\"number\">0</span>;i&lt;length;i++)&#123;</div><div class=\"line\">       str += <span class=\"string\">\"&lt;li&gt;&lt;/li&gt;\"</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 如果显示小圆点</div><div class=\"line\">     <span class=\"keyword\">if</span>( opts.doc )&#123;</div><div class=\"line\">       $(<span class=\"string\">\"&lt;ul class='docBox'&gt;\"</span>+str+<span class=\"string\">\"&lt;/ul&gt;\"</span>).insertAfter(obj.find(<span class=\"string\">\"div\"</span>));</div><div class=\"line\">       $(<span class=\"string\">\".docBox li:first\"</span>).addClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 小圆点情况下，如果效果为淡入淡出</div><div class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'fade'</span> )&#123;</div><div class=\"line\">       obj.find(<span class=\"string\">'.warp li'</span>).css(&#123;</div><div class=\"line\">         <span class=\"string\">\"position\"</span>:<span class=\"string\">'absolute'</span>,</div><div class=\"line\">         <span class=\"string\">\"display\"</span>:<span class=\"string\">'none'</span></div><div class=\"line\">       &#125;).first().show();</div><div class=\"line\">       var ii = <span class=\"number\">0</span>;</div><div class=\"line\">       var setTime = setInterval(function()&#123;</div><div class=\"line\">         obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);</div><div class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(ii).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">         ii++;</div><div class=\"line\">         <span class=\"keyword\">if</span>( ii == length )&#123;</div><div class=\"line\">           ii = <span class=\"number\">0</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">       &#125;,opts.speed);</div><div class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</div><div class=\"line\">         clearInterval(setTime);</div><div class=\"line\">         var index = $(this).index();</div><div class=\"line\">         setTimeout(function()&#123;</div><div class=\"line\">           obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);</div><div class=\"line\">         &#125;,opts.delay);</div><div class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">       &#125;);</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 小圆点情况下，如果效果为平移</div><div class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'move'</span> )&#123;</div><div class=\"line\">       var mm = <span class=\"number\">0</span>;</div><div class=\"line\">       var setMove = setInterval(function()&#123;</div><div class=\"line\">         obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-(mm * opts.width)+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</div><div class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(mm).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">         mm = mm+<span class=\"number\">1</span>;</div><div class=\"line\">         <span class=\"keyword\">if</span>( mm == length )&#123;</div><div class=\"line\">           mm = <span class=\"number\">0</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">       &#125;,opts.speed);</div><div class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</div><div class=\"line\">         clearInterval(setMove);</div><div class=\"line\">         var index = $(this).index();</div><div class=\"line\">         var left = index * opts.width;</div><div class=\"line\">         setTimeout(function()&#123;</div><div class=\"line\">           obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-left+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</div><div class=\"line\">         &#125;,opts.delay);</div><div class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">       &#125;);</div><div class=\"line\">     &#125;</div><div class=\"line\">   &#125;;</div><div class=\"line\"></div><div class=\"line\"> &#125;)(jQuery);</div><div class=\"line\"></div><div class=\"line\">//调用</div><div class=\"line\">$(<span class=\"string\">\".banner\"</span>).Carousel(&#123;</div><div class=\"line\">  <span class=\"string\">'width'</span> : <span class=\"string\">\"1200\"</span>,  //设置容器宽度(暂不支持自适应)</div><div class=\"line\">  <span class=\"string\">'height'</span> : <span class=\"string\">\"700\"</span>, //设置容器高度</div><div class=\"line\">  <span class=\"string\">'effect'</span> : <span class=\"string\">\"move\"</span>,  //值为fade为淡入淡出效果 move则为左右移动</div><div class=\"line\">  <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,  //设置左右移动速度</div><div class=\"line\">  <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>    //设置淡入淡出速度</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"日常小计（麦麦）","_content":"<h1>无图片时显示默认图片</h1>\n<font size=1>**如有转载，请注明出处。**</font>\n##第一种\n>$(\"img“).on('error',function(){\n    this.src = '/assets/img/student/null-pic.jpg';  //默认图片\n});\n\n##第二种\n>imgShow:function(){\n    var t_img; // 定时器\n    var isLoad = true; // 控制变量\n    // imgBlock();\n    imgReplace();\n    function imgReplace(){\n        jquery(\"img\").each(function(){\n            jquery(this).on('error',function(){\n                jquery(this).attr('src','/assets/img/student/null-pic.jpg')\n            })\n        })\n    }\n    function imgBlock(callback){\n        $('img').each(function() {\n            if (!this.complete || typeof this.naturalWidth == \"undefined\" || this.naturalWidth == 0)  {\n                this.src = '/assets/img/student/null-pic.jpg';\n                isLoad = false;\n                return false;\n            }\n        });\n        if(isLoad){\n            clearTimeout(t_img); // 清除定时器\n            // 回调函数\n            callback;\n            // 为false，因为找到了没有加载完成的图，将调用定时器递归\n        }else{\n            isLoad = true;\n            t_img = setTimeout(function(){\n                imgBlock(callback); // 递归扫描\n            },100); // 我这里设置的是500毫秒就扫描一次，可以自己调整\n        }\n    }\n}\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/日常小计.md","raw":"---\ntitle: 日常小计（麦麦）\n---\n<h1>无图片时显示默认图片</h1>\n<font size=1>**如有转载，请注明出处。**</font>\n##第一种\n>$(\"img“).on('error',function(){\n    this.src = '/assets/img/student/null-pic.jpg';  //默认图片\n});\n\n##第二种\n>imgShow:function(){\n    var t_img; // 定时器\n    var isLoad = true; // 控制变量\n    // imgBlock();\n    imgReplace();\n    function imgReplace(){\n        jquery(\"img\").each(function(){\n            jquery(this).on('error',function(){\n                jquery(this).attr('src','/assets/img/student/null-pic.jpg')\n            })\n        })\n    }\n    function imgBlock(callback){\n        $('img').each(function() {\n            if (!this.complete || typeof this.naturalWidth == \"undefined\" || this.naturalWidth == 0)  {\n                this.src = '/assets/img/student/null-pic.jpg';\n                isLoad = false;\n                return false;\n            }\n        });\n        if(isLoad){\n            clearTimeout(t_img); // 清除定时器\n            // 回调函数\n            callback;\n            // 为false，因为找到了没有加载完成的图，将调用定时器递归\n        }else{\n            isLoad = true;\n            t_img = setTimeout(function(){\n                imgBlock(callback); // 递归扫描\n            },100); // 我这里设置的是500毫秒就扫描一次，可以自己调整\n        }\n    }\n}\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"日常小计","published":1,"date":"2017-03-24T09:58:17.323Z","updated":"2017-03-24T09:58:17.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1h2000bmwigudb384pf","content":"<p></p><h1>无图片时显示默认图片</h1><p></p>\n<p><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></p>\n<p>##第一种</p>\n<blockquote>\n<p>$(“img“).on(‘error’,function(){<br>    this.src = ‘/assets/img/student/null-pic.jpg’;  //默认图片<br>});</p>\n</blockquote>\n<p>##第二种</p>\n<blockquote>\n<p>imgShow:function(){<br>    var t_img; // 定时器<br>    var isLoad = true; // 控制变量<br>    // imgBlock();<br>    imgReplace();<br>    function imgReplace(){<br>        jquery(“img”).each(function(){<br>            jquery(this).on(‘error’,function(){<br>                jquery(this).attr(‘src’,’/assets/img/student/null-pic.jpg’)<br>            })<br>        })<br>    }<br>    function imgBlock(callback){<br>        $(‘img’).each(function() {<br>            if (!this.complete || typeof this.naturalWidth == “undefined” || this.naturalWidth == 0)  {<br>                this.src = ‘/assets/img/student/null-pic.jpg’;<br>                isLoad = false;<br>                return false;<br>            }<br>        });<br>        if(isLoad){<br>            clearTimeout(t_img); // 清除定时器<br>            // 回调函数<br>            callback;<br>            // 为false，因为找到了没有加载完成的图，将调用定时器递归<br>        }else{<br>            isLoad = true;<br>            t_img = setTimeout(function(){<br>                imgBlock(callback); // 递归扫描<br>            },100); // 我这里设置的是500毫秒就扫描一次，可以自己调整<br>        }<br>    }<br>}</p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"","more":"<p><h1>无图片时显示默认图片</h1></p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<p>##第一种</p>\n<blockquote>\n<p>$(“img“).on(‘error’,function(){<br>    this.src = ‘/assets/img/student/null-pic.jpg’;  //默认图片<br>});</p>\n</blockquote>\n<p>##第二种</p>\n<blockquote>\n<p>imgShow:function(){<br>    var t_img; // 定时器<br>    var isLoad = true; // 控制变量<br>    // imgBlock();<br>    imgReplace();<br>    function imgReplace(){<br>        jquery(“img”).each(function(){<br>            jquery(this).on(‘error’,function(){<br>                jquery(this).attr(‘src’,’/assets/img/student/null-pic.jpg’)<br>            })<br>        })<br>    }<br>    function imgBlock(callback){<br>        $(‘img’).each(function() {<br>            if (!this.complete || typeof this.naturalWidth == “undefined” || this.naturalWidth == 0)  {<br>                this.src = ‘/assets/img/student/null-pic.jpg’;<br>                isLoad = false;<br>                return false;<br>            }<br>        });<br>        if(isLoad){<br>            clearTimeout(t_img); // 清除定时器<br>            // 回调函数<br>            callback;<br>            // 为false，因为找到了没有加载完成的图，将调用定时器递归<br>        }else{<br>            isLoad = true;<br>            t_img = setTimeout(function(){<br>                imgBlock(callback); // 递归扫描<br>            },100); // 我这里设置的是500毫秒就扫描一次，可以自己调整<br>        }<br>    }<br>}</p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"整理各对象常用属性与方法（麦麦）","_content":"<font size=1>**如有转载，请注明出处。**</font>\n------\n\n**String对象的各种属性与方法**\n\n属性：\n\n>  i、length 字符串长度\n   \"aaa\".length -> 3\n>  ii、prototype允许您向对象添加属性和方法\n ```python\n   例：\n      String.prototype.spacify=function(str){\n        return(str.split(\"\").join(\" \"))\n      }\n      \"asasda\".spacify(\"asss\") -> \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格\n\n```\n方法：\n\n> 1、split 讲字符分割成数组显示\n      \"a,s,d\".split(\",\") -> [\"a\",\"s\",\"d\"]\n> 2、concat 合并字符串火数组\n     \"1\".concat(\"sdf\",\"555\")-> \"1sdf555\"\n      [\"1\"].concat(\"sdf\",\"555\") ->[\"1\", \"sdf\", \"555\"]\n> 3、toLocaleUpperCase同toUpperCase 小写转换成大写\n     \"asaddas\".toLocaleUpperCase()==\"asaddas\".toUpperCase() \"ASADDAS\"\n> 4、toLocaleLowerCase同toLowerCase 大写转换成小写\n     \"ASADDAS\".toLocaleLowerCase()==\"asaddas\".toLowerCase() \"asaddas\"\n> 5、charAt 从字符串中取出单个字符\n     \"asde\".charAt(2)-> d\n> 6、indexOf(\"xx\",[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".indexOf(\"yuyafei\") ->5\n> 7、lastIndexOf(\"xx\",[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".lastIndexOf(\"yu\",11) ->5\n> 8、match(\"xxx\",'regexp') 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,\n     \"hello world\".match(\"hello\") -> [\"hello\"]\n     \"he2llo1wo3rld\".match(/\\d+/g) -> [\"2\", \"1\", \"3\"]\n> 9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串\n     \"hello aaaa\".slice(1,6) -> \"ello \"\n    \"hello aaaa\".slice(-8,-2) -> \"hello aaaa\".slice(2,8) -> \"llo aa\"\n> 10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串\n     \"hello world\".substr(1,4) -> \"ello\"\n     \"hello world\".substr(-8,4)-> \"hello world\".substr(3,4)  -> \"lo w\"\n> 11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)\n     \"hello\".substring(1,3) -> \"el\"\n\n<!--more-->\n##Number对象的各种属性与方法\n\n方法：\n\n> 1、toString([几进制显示数字]) 把数字转换成字符串\n      123.toString() -> 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；\n    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；\n    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；\n       var num = 111; num.toString();  -> \"111\" 或 (123).toString()\n       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 \"[object Object]\"\n> 2、toFixed() 把数字四舍五入为指定小数位数的数字\n      var num = 1223; num.toFixed(2); -> \"1223.00\"\n> 3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法\n      var num =10000; num.toPrecision(4) -> \"1.000e+4\"\n\n\n##Boolean对象的各种属性与方法\n\n方法：\n\n> 1、toSource() 返回表示对象源代码的字符串\n     function employee(name,job,born)\n     {\n       this.name=name;\n       this.job=job;\n       this.born=born;\n    }\n     var bill=new employee(\"Bill Gates\",\"Engineer\",1985);\n     bill.toSource();  ->({name:\"Bill Gates\", job:\"Engineer\", born:1985})\n> 2、toString() 同number与String\n> 3、valueOf() 返回 Boolean 对象的原始值\n      var boo = new Boolean(false)\n      document.write(boo.valueOf())  ->false\n\n##Array对象的各种属性与方法\n属性：\n> 1、length 返回数组的长度\n      [\"1\",\"2\"].length  -> 2\n方法：\n> 1、concat() 合并数组\n     [\"1\",\"2\"].concat(\"123\",[2]) -> [\"1\", \"2\", \"123\", 2]\n> 2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。\n     [\"1\",\"2\"].join(\"|\")  -> \"1|2\"\n> 3、pop() 删除数组最后一个元素并返回杯删除的元素\n     [\"s\",\"e\"].pop()  -> \"e\"\n> 4、push() 往数组中添加一个或更多元素，并返回新的长度。\n     [\"s\",\"e\"].push(\"32\",\"45\") -> 4\n> 5、reverse() 颠倒顺序\n     [2,5,3,4,1].reverse()  -> [1, 4, 3, 5, 2]\n> 6、sort() 排序（但对数字排序不准确）\n     [2,5,3,4,21].sort() -> [2, 21, 3, 4, 5]\n> 7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。\n     [2,5,3,4,21].shift()  -> 2\n> 8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组\n    [2,5,3,4,21].slice(1,4) -> [5, 3, 4]\n> 9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。\n     [2,5,3,4,21].splice(1,3,8888) -> [5, 3, 4]\n> 10、toString() 把数组转换成字符串\n     [2,5,3,4,21].toString() -> \"2,5,3,4,21\"\n> 11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度\n     [2,5,3,4,21].unshift(1) -> 6\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/整理各对象常用方法和属性.md","raw":"---\ntitle: 整理各对象常用属性与方法（麦麦）\n---\n<font size=1>**如有转载，请注明出处。**</font>\n------\n\n**String对象的各种属性与方法**\n\n属性：\n\n>  i、length 字符串长度\n   \"aaa\".length -> 3\n>  ii、prototype允许您向对象添加属性和方法\n ```python\n   例：\n      String.prototype.spacify=function(str){\n        return(str.split(\"\").join(\" \"))\n      }\n      \"asasda\".spacify(\"asss\") -> \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格\n\n```\n方法：\n\n> 1、split 讲字符分割成数组显示\n      \"a,s,d\".split(\",\") -> [\"a\",\"s\",\"d\"]\n> 2、concat 合并字符串火数组\n     \"1\".concat(\"sdf\",\"555\")-> \"1sdf555\"\n      [\"1\"].concat(\"sdf\",\"555\") ->[\"1\", \"sdf\", \"555\"]\n> 3、toLocaleUpperCase同toUpperCase 小写转换成大写\n     \"asaddas\".toLocaleUpperCase()==\"asaddas\".toUpperCase() \"ASADDAS\"\n> 4、toLocaleLowerCase同toLowerCase 大写转换成小写\n     \"ASADDAS\".toLocaleLowerCase()==\"asaddas\".toLowerCase() \"asaddas\"\n> 5、charAt 从字符串中取出单个字符\n     \"asde\".charAt(2)-> d\n> 6、indexOf(\"xx\",[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".indexOf(\"yuyafei\") ->5\n> 7、lastIndexOf(\"xx\",[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".lastIndexOf(\"yu\",11) ->5\n> 8、match(\"xxx\",'regexp') 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,\n     \"hello world\".match(\"hello\") -> [\"hello\"]\n     \"he2llo1wo3rld\".match(/\\d+/g) -> [\"2\", \"1\", \"3\"]\n> 9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串\n     \"hello aaaa\".slice(1,6) -> \"ello \"\n    \"hello aaaa\".slice(-8,-2) -> \"hello aaaa\".slice(2,8) -> \"llo aa\"\n> 10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串\n     \"hello world\".substr(1,4) -> \"ello\"\n     \"hello world\".substr(-8,4)-> \"hello world\".substr(3,4)  -> \"lo w\"\n> 11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)\n     \"hello\".substring(1,3) -> \"el\"\n\n<!--more-->\n##Number对象的各种属性与方法\n\n方法：\n\n> 1、toString([几进制显示数字]) 把数字转换成字符串\n      123.toString() -> 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；\n    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；\n    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；\n       var num = 111; num.toString();  -> \"111\" 或 (123).toString()\n       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 \"[object Object]\"\n> 2、toFixed() 把数字四舍五入为指定小数位数的数字\n      var num = 1223; num.toFixed(2); -> \"1223.00\"\n> 3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法\n      var num =10000; num.toPrecision(4) -> \"1.000e+4\"\n\n\n##Boolean对象的各种属性与方法\n\n方法：\n\n> 1、toSource() 返回表示对象源代码的字符串\n     function employee(name,job,born)\n     {\n       this.name=name;\n       this.job=job;\n       this.born=born;\n    }\n     var bill=new employee(\"Bill Gates\",\"Engineer\",1985);\n     bill.toSource();  ->({name:\"Bill Gates\", job:\"Engineer\", born:1985})\n> 2、toString() 同number与String\n> 3、valueOf() 返回 Boolean 对象的原始值\n      var boo = new Boolean(false)\n      document.write(boo.valueOf())  ->false\n\n##Array对象的各种属性与方法\n属性：\n> 1、length 返回数组的长度\n      [\"1\",\"2\"].length  -> 2\n方法：\n> 1、concat() 合并数组\n     [\"1\",\"2\"].concat(\"123\",[2]) -> [\"1\", \"2\", \"123\", 2]\n> 2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。\n     [\"1\",\"2\"].join(\"|\")  -> \"1|2\"\n> 3、pop() 删除数组最后一个元素并返回杯删除的元素\n     [\"s\",\"e\"].pop()  -> \"e\"\n> 4、push() 往数组中添加一个或更多元素，并返回新的长度。\n     [\"s\",\"e\"].push(\"32\",\"45\") -> 4\n> 5、reverse() 颠倒顺序\n     [2,5,3,4,1].reverse()  -> [1, 4, 3, 5, 2]\n> 6、sort() 排序（但对数字排序不准确）\n     [2,5,3,4,21].sort() -> [2, 21, 3, 4, 5]\n> 7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。\n     [2,5,3,4,21].shift()  -> 2\n> 8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组\n    [2,5,3,4,21].slice(1,4) -> [5, 3, 4]\n> 9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。\n     [2,5,3,4,21].splice(1,3,8888) -> [5, 3, 4]\n> 10、toString() 把数组转换成字符串\n     [2,5,3,4,21].toString() -> \"2,5,3,4,21\"\n> 11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度\n     [2,5,3,4,21].unshift(1) -> 6\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"整理各对象常用方法和属性","published":1,"date":"2017-03-24T09:58:17.314Z","updated":"2017-03-24T09:58:17.323Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj59di1h3000cmwigfqk58go7","content":"<h2 id=\"如有转载，请注明出处。\"><a href=\"#如有转载，请注明出处。\" class=\"headerlink\" title=\"如有转载，请注明出处。\"></a><font size=\"1\"><strong>如有转载，请注明出处。</strong></font></h2><p><strong>String对象的各种属性与方法</strong></p>\n<p>属性：</p>\n<blockquote>\n<p> i、length 字符串长度<br>   “aaa”.length -&gt; 3<br> ii、prototype允许您向对象添加属性和方法<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">例：</div><div class=\"line\">   String.prototype.spacify=function(str)&#123;</div><div class=\"line\">     return(str.split(\"\").join(\" \"))</div><div class=\"line\">   &#125;</div><div class=\"line\">   \"asasda\".spacify(\"asss\") -&gt; \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>方法：</p>\n<blockquote>\n<p>1、split 讲字符分割成数组显示<br>      “a,s,d”.split(“,”) -&gt; [“a”,”s”,”d”]<br>2、concat 合并字符串火数组<br>     “1”.concat(“sdf”,”555”)-&gt; “1sdf555”<br>      [“1”].concat(“sdf”,”555”) -&gt;[“1”, “sdf”, “555”]<br>3、toLocaleUpperCase同toUpperCase 小写转换成大写<br>     “asaddas”.toLocaleUpperCase()==”asaddas”.toUpperCase() “ASADDAS”<br>4、toLocaleLowerCase同toLowerCase 大写转换成小写<br>     “ASADDAS”.toLocaleLowerCase()==”asaddas”.toLowerCase() “asaddas”<br>5、charAt 从字符串中取出单个字符<br>     “asde”.charAt(2)-&gt; d<br>6、indexOf(“xx”,[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.indexOf(“yuyafei”) -&gt;5<br>7、lastIndexOf(“xx”,[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.lastIndexOf(“yu”,11) -&gt;5<br>8、match(“xxx”,’regexp’) 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,<br>     “hello world”.match(“hello”) -&gt; [“hello”]<br>     “he2llo1wo3rld”.match(/\\d+/g) -&gt; [“2”, “1”, “3”]<br>9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串<br>     “hello aaaa”.slice(1,6) -&gt; “ello “<br>    “hello aaaa”.slice(-8,-2) -&gt; “hello aaaa”.slice(2,8) -&gt; “llo aa”<br>10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串<br>     “hello world”.substr(1,4) -&gt; “ello”<br>     “hello world”.substr(-8,4)-&gt; “hello world”.substr(3,4)  -&gt; “lo w”<br>11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)<br>     “hello”.substring(1,3) -&gt; “el”</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>##Number对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toString([几进制显示数字]) 把数字转换成字符串<br>      123.toString() -&gt; 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；<br>    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；<br>    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；<br>       var num = 111; num.toString();  -&gt; “111” 或 (123).toString()<br>       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 “[object Object]”<br>2、toFixed() 把数字四舍五入为指定小数位数的数字<br>      var num = 1223; num.toFixed(2); -&gt; “1223.00”<br>3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法<br>      var num =10000; num.toPrecision(4) -&gt; “1.000e+4”</p>\n</blockquote>\n<p>##Boolean对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toSource() 返回表示对象源代码的字符串<br>     function employee(name,job,born)<br>     {<br>       this.name=name;<br>       this.job=job;<br>       this.born=born;<br>    }<br>     var bill=new employee(“Bill Gates”,”Engineer”,1985);<br>     bill.toSource();  -&gt;({name:”Bill Gates”, job:”Engineer”, born:1985})<br>2、toString() 同number与String<br>3、valueOf() 返回 Boolean 对象的原始值<br>      var boo = new Boolean(false)<br>      document.write(boo.valueOf())  -&gt;false</p>\n</blockquote>\n<p>##Array对象的各种属性与方法<br>属性：</p>\n<blockquote>\n<p>1、length 返回数组的长度<br>      [“1”,”2”].length  -&gt; 2<br>方法：<br>1、concat() 合并数组<br>     [“1”,”2”].concat(“123”,[2]) -&gt; [“1”, “2”, “123”, 2]<br>2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。<br>     [“1”,”2”].join(“|”)  -&gt; “1|2”<br>3、pop() 删除数组最后一个元素并返回杯删除的元素<br>     [“s”,”e”].pop()  -&gt; “e”<br>4、push() 往数组中添加一个或更多元素，并返回新的长度。<br>     [“s”,”e”].push(“32”,”45”) -&gt; 4<br>5、reverse() 颠倒顺序<br>     [2,5,3,4,1].reverse()  -&gt; [1, 4, 3, 5, 2]<br>6、sort() 排序（但对数字排序不准确）<br>     [2,5,3,4,21].sort() -&gt; [2, 21, 3, 4, 5]<br>7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。<br>     [2,5,3,4,21].shift()  -&gt; 2<br>8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组<br>    [2,5,3,4,21].slice(1,4) -&gt; [5, 3, 4]<br>9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。<br>     [2,5,3,4,21].splice(1,3,8888) -&gt; [5, 3, 4]<br>10、toString() 把数组转换成字符串<br>     [2,5,3,4,21].toString() -&gt; “2,5,3,4,21”<br>11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度<br>     [2,5,3,4,21].unshift(1) -&gt; 6</p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","excerpt":"<h2 id=\"如有转载，请注明出处。\"><a href=\"#如有转载，请注明出处。\" class=\"headerlink\" title=\"如有转载，请注明出处。\"></a><font size=1><strong>如有转载，请注明出处。</strong></font></h2><p><strong>String对象的各种属性与方法</strong></p>\n<p>属性：</p>\n<blockquote>\n<p> i、length 字符串长度<br>   “aaa”.length -&gt; 3<br> ii、prototype允许您向对象添加属性和方法<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">例：</div><div class=\"line\">   String.prototype.spacify=function(str)&#123;</div><div class=\"line\">     return(str.split(\"\").join(\" \"))</div><div class=\"line\">   &#125;</div><div class=\"line\">   \"asasda\".spacify(\"asss\") -&gt; \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>方法：</p>\n<blockquote>\n<p>1、split 讲字符分割成数组显示<br>      “a,s,d”.split(“,”) -&gt; [“a”,”s”,”d”]<br>2、concat 合并字符串火数组<br>     “1”.concat(“sdf”,”555”)-&gt; “1sdf555”<br>      [“1”].concat(“sdf”,”555”) -&gt;[“1”, “sdf”, “555”]<br>3、toLocaleUpperCase同toUpperCase 小写转换成大写<br>     “asaddas”.toLocaleUpperCase()==”asaddas”.toUpperCase() “ASADDAS”<br>4、toLocaleLowerCase同toLowerCase 大写转换成小写<br>     “ASADDAS”.toLocaleLowerCase()==”asaddas”.toLowerCase() “asaddas”<br>5、charAt 从字符串中取出单个字符<br>     “asde”.charAt(2)-&gt; d<br>6、indexOf(“xx”,[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.indexOf(“yuyafei”) -&gt;5<br>7、lastIndexOf(“xx”,[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.lastIndexOf(“yu”,11) -&gt;5<br>8、match(“xxx”,’regexp’) 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,<br>     “hello world”.match(“hello”) -&gt; [“hello”]<br>     “he2llo1wo3rld”.match(/\\d+/g) -&gt; [“2”, “1”, “3”]<br>9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串<br>     “hello aaaa”.slice(1,6) -&gt; “ello “<br>    “hello aaaa”.slice(-8,-2) -&gt; “hello aaaa”.slice(2,8) -&gt; “llo aa”<br>10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串<br>     “hello world”.substr(1,4) -&gt; “ello”<br>     “hello world”.substr(-8,4)-&gt; “hello world”.substr(3,4)  -&gt; “lo w”<br>11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)<br>     “hello”.substring(1,3) -&gt; “el”</p>\n</blockquote>","more":"<p>##Number对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toString([几进制显示数字]) 把数字转换成字符串<br>      123.toString() -&gt; 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；<br>    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；<br>    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；<br>       var num = 111; num.toString();  -&gt; “111” 或 (123).toString()<br>       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 “[object Object]”<br>2、toFixed() 把数字四舍五入为指定小数位数的数字<br>      var num = 1223; num.toFixed(2); -&gt; “1223.00”<br>3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法<br>      var num =10000; num.toPrecision(4) -&gt; “1.000e+4”</p>\n</blockquote>\n<p>##Boolean对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toSource() 返回表示对象源代码的字符串<br>     function employee(name,job,born)<br>     {<br>       this.name=name;<br>       this.job=job;<br>       this.born=born;<br>    }<br>     var bill=new employee(“Bill Gates”,”Engineer”,1985);<br>     bill.toSource();  -&gt;({name:”Bill Gates”, job:”Engineer”, born:1985})<br>2、toString() 同number与String<br>3、valueOf() 返回 Boolean 对象的原始值<br>      var boo = new Boolean(false)<br>      document.write(boo.valueOf())  -&gt;false</p>\n</blockquote>\n<p>##Array对象的各种属性与方法<br>属性：</p>\n<blockquote>\n<p>1、length 返回数组的长度<br>      [“1”,”2”].length  -&gt; 2<br>方法：<br>1、concat() 合并数组<br>     [“1”,”2”].concat(“123”,[2]) -&gt; [“1”, “2”, “123”, 2]<br>2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。<br>     [“1”,”2”].join(“|”)  -&gt; “1|2”<br>3、pop() 删除数组最后一个元素并返回杯删除的元素<br>     [“s”,”e”].pop()  -&gt; “e”<br>4、push() 往数组中添加一个或更多元素，并返回新的长度。<br>     [“s”,”e”].push(“32”,”45”) -&gt; 4<br>5、reverse() 颠倒顺序<br>     [2,5,3,4,1].reverse()  -&gt; [1, 4, 3, 5, 2]<br>6、sort() 排序（但对数字排序不准确）<br>     [2,5,3,4,21].sort() -&gt; [2, 21, 3, 4, 5]<br>7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。<br>     [2,5,3,4,21].shift()  -&gt; 2<br>8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组<br>    [2,5,3,4,21].slice(1,4) -&gt; [5, 3, 4]<br>9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。<br>     [2,5,3,4,21].splice(1,3,8888) -&gt; [5, 3, 4]<br>10、toString() 把数组转换成字符串<br>     [2,5,3,4,21].toString() -&gt; “2,5,3,4,21”<br>11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度<br>     [2,5,3,4,21].unshift(1) -&gt; 6</p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}