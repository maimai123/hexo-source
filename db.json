{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/img/5.png","path":"img/5.png","modified":0,"renderable":0},{"_id":"source/img/36.png","path":"img/36.png","modified":0,"renderable":0},{"_id":"source/img/65.png","path":"img/65.png","modified":0,"renderable":0},{"_id":"source/img/es6.png","path":"img/es6.png","modified":0,"renderable":0},{"_id":"source/img/img - 副本.jpg","path":"img/img - 副本.jpg","modified":0,"renderable":0},{"_id":"source/img/logos.jpg","path":"img/logos.jpg","modified":0,"renderable":0},{"_id":"source/img/new.png","path":"img/new.png","modified":0,"renderable":0},{"_id":"source/img/router.png","path":"img/router.png","modified":0,"renderable":0},{"_id":"source/img/return.png","path":"img/return.png","modified":0,"renderable":0},{"_id":"source/img/react.png","path":"img/react.png","modified":0,"renderable":0},{"_id":"source/img/search.png","path":"img/search.png","modified":0,"renderable":0},{"_id":"source/img/style.png","path":"img/style.png","modified":0,"renderable":0},{"_id":"source/img/zhifu.jpg","path":"img/zhifu.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"source/img/image.png","path":"img/image.png","modified":0,"renderable":0},{"_id":"source/img/jsx.png","path":"img/jsx.png","modified":0,"renderable":0},{"_id":"source/img/jsx2.png","path":"img/jsx2.png","modified":0,"renderable":0},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"source/img/IMG_2372.jpg","path":"img/IMG_2372.jpg","modified":0,"renderable":0},{"_id":"source/img/jgg.gif","path":"img/jgg.gif","modified":0,"renderable":0},{"_id":"source/img/lbt.png","path":"img/lbt.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"91e14b6436108686c00f97ca0178306c67fc3a55","modified":1582626599981},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1510675760000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1510675760000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1510675760000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1510675760000},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1510675760000},{"_id":"themes/yilia/_config.yml","hash":"bfcf714779fcd889676f3dbf5ef912b4fe1193cf","modified":1642308276638},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1510675760000},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1510675760000},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1510675760000},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1510675760000},{"_id":"source/_posts/.DS_Store","hash":"70a2bf86c5fe5f2e74cccae15c3aeb54ec2957c4","modified":1582626599981},{"_id":"source/_posts/banner.md","hash":"5419070c2cc73bdf9cb98b13cb7006bf7fc670b4","modified":1582712828916},{"_id":"source/_posts/2019.md","hash":"ad028476f4d56eb67cdc00572c4323d06248bd1f","modified":1582712874079},{"_id":"source/_posts/collection.md","hash":"41911aed11cb69f2ab2e2663d9c03cdc16ab5a28","modified":1582712882913},{"_id":"source/_posts/chaping.md","hash":"05e12f4dbda9412caf0c9203b883fe259d99cceb","modified":1582712879330},{"_id":"source/_posts/animate.md","hash":"3536b09a0b736750c337324b89e0ef399c783043","modified":1585711067311},{"_id":"source/_posts/cooking.md","hash":"c08a5493a14118f03c59959621251bb9be6bc14d","modified":1582713123412},{"_id":"source/_posts/css.md","hash":"49f9dd99abeb59ed5fcfe04edbb25905826354bd","modified":1582712890072},{"_id":"source/_posts/chrome.md","hash":"d3c86ff4467149bbd661b9e5dccd7131d8fed2e1","modified":1585710945650},{"_id":"source/_posts/error.md","hash":"ba20f991dcca84dfa85e21d531d06ce560b3dc5e","modified":1620982394764},{"_id":"source/_posts/daily.md","hash":"def3cce2105e3b6b37fd9777fb8661de15b38cf9","modified":1582712997640},{"_id":"source/_posts/daily2020.md","hash":"fcd65ed6a56ade8f8303ea2edba19255eaf41f57","modified":1582712599154},{"_id":"source/_posts/excel.md","hash":"9affba53ed1b16a9a6764cbc72ee0f7fcbf7536a","modified":1582713036987},{"_id":"source/_posts/daily2020_1.md","hash":"559c317c24463731519d9e77638cf5c5d957095a","modified":1582712571749},{"_id":"source/_posts/learning-vuex.md","hash":"27a25985812ad360785375c7c61c8e3845146c28","modified":1582712768531},{"_id":"source/_posts/mac.md","hash":"9f8b30780821d12628d2c3859ac575d93921356c","modified":1582712792552},{"_id":"source/_posts/popup.md","hash":"7cd250aaea79cb60da6a32ca06d1352afafc2b3c","modified":1582712788139},{"_id":"source/_posts/quill.md","hash":"eef6aa86943bf87e692828fc56394c0c678faa08","modified":1620893267776},{"_id":"source/_posts/react-daily.md","hash":"a6eb782935e3db52d8a8b019a758ab5fdbe1ac20","modified":1582712665045},{"_id":"source/_posts/react-ts.md","hash":"ebc7bc73fae77d78c357d4d3391f839f5c00d280","modified":1584517739038},{"_id":"source/_posts/plugin.md","hash":"dd70a59ea6ebf917f518073710d1a5a7fdbd7eb5","modified":1582712796744},{"_id":"source/_posts/skill.md","hash":"0af8c2634af4c7c141430efd426444a7ec40204f","modified":1582712646469},{"_id":"source/_posts/react-table.md","hash":"1e36bd1bba0a0dff94211a21536ce6446726013a","modified":1582712661368},{"_id":"source/_posts/wangEditor.md","hash":"1cac66a0829cf033066b3d3de2322db735eecc13","modified":1620976149812},{"_id":"source/_posts/small.md","hash":"13a85c2fb642e85e6949acf13ef98e0219bb2d76","modified":1582712913197},{"_id":"source/_posts/wechat.md","hash":"981c62cabaa33c35b2e6b6964abf9d69090be04b","modified":1620976196524},{"_id":"source/_posts/yyf.md","hash":"f18bb02f8284f494c5b0ba07ddbfb9293c734bf0","modified":1642308277729},{"_id":"source/img/5.png","hash":"29eb0a7e990d69fbe6ed03064b3430cbaedb7bf8","modified":1582626599988},{"_id":"source/img/36.png","hash":"844151e0b62455e9111c721c0a4c23a05193ec5a","modified":1582626599987},{"_id":"source/img/65.png","hash":"02f538e7301216edada6125248df6c036b1f76a8","modified":1582626599988},{"_id":"source/img/es6.png","hash":"62e7cda0e979fbb6fb4d20929153a1ff5dc18f1a","modified":1582626599999},{"_id":"source/img/img - 副本.jpg","hash":"b152317668128d21382a2126af70cb25b73057e2","modified":1582626600002},{"_id":"source/img/logos.jpg","hash":"b152317668128d21382a2126af70cb25b73057e2","modified":1582626600025},{"_id":"source/img/new.png","hash":"d903d2c7b59b79ae79b105d8572e32c4da7445e5","modified":1582626600025},{"_id":"source/img/router.png","hash":"fcfe73d5143a46c5cd09840b6fede58ef5435ffb","modified":1582626600025},{"_id":"source/img/return.png","hash":"45dba82cc6c4c638e5670b0144a74f1f83cb53b2","modified":1582626600025},{"_id":"source/img/react.png","hash":"0e28b92c702e96afd6396d76b6f62d9b677f1c94","modified":1582626600025},{"_id":"source/img/search.png","hash":"93ab53bfa14f77efc0f66b808eb1c2dffd3b1de3","modified":1582626600025},{"_id":"source/img/style.png","hash":"8a7b617714b71092c122b4145fe93c178134f135","modified":1582626600025},{"_id":"source/img/zhifu.jpg","hash":"aea25c260aaec4462889811fbab3ec39912026bf","modified":1582626600026},{"_id":"source/tags/index.md","hash":"d63b4955da51860dfae0ec7c2c6d7e4919d38ff6","modified":1582707485258},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1510675760000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1510675760000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1510675760000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1510675760000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1510675760000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1510675760000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1510675760000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1510675760000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1510675760000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1510675760000},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1510675760000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510675760000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510675760000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1510675760000},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1510675760000},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1510675760000},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1510675760000},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1510675760000},{"_id":"source/img/image.png","hash":"b83303aa63318d77e8d4b3c849847a0fbded8191","modified":1582626600001},{"_id":"source/img/jsx.png","hash":"07c1b62303d0823228b54be60a1002a727ba7b3f","modified":1582626600014},{"_id":"source/img/jsx2.png","hash":"ea72fd0fa8d2ac546282975f28808203fb82a7e9","modified":1582626600017},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510675760000},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1510675760000},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1510675760000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1510675760000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1510675760000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1510675760000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1510675760000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1510675760000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1510675760000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1510675760000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1510675760000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1510675760000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1510675760000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1510675760000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1510675760000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1510675760000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1510675760000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1510675760000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1510675760000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1510675760000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1510675760000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1510675760000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1510675760000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1510675760000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1510675760000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1510675760000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1510675760000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1510675760000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1510675760000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1510675760000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1510675760000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1510675760000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1510675760000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1510675760000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1510675760000},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1510675760000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1510675760000},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1510675760000},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1510675760000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1510675760000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1510675760000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1510675760000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1510675760000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1510675760000},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1510675760000},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1510675760000},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1510675760000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1510675760000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1510675760000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1510675760000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1510675760000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1510675760000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1510675760000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1510675760000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1510675760000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1510675760000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1510675760000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1510675760000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1510675760000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1510675760000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1510675760000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1510675760000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1510675760000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1510675760000},{"_id":"source/img/IMG_2372.jpg","hash":"016748eea930343459b29a7873b80ea0ec1db043","modified":1582626599997},{"_id":"source/img/jgg.gif","hash":"8bf993cd07b23138635a0ac6a5d826bbca301b2d","modified":1582626600011},{"_id":"source/img/lbt.png","hash":"4f57899e5ce8ee5990ad1ec32d974076d9c9b4b6","modified":1582626600024},{"_id":"public/content.json","hash":"2c6dd19fc77325be67e410ff1fad24b344db0acf","modified":1642347646313},{"_id":"public/tags/index.html","hash":"ed20b67d314d6bf77662238d6c30f40c1bf09785","modified":1642347646313},{"_id":"public/2021/05/14/error/index.html","hash":"3d46f86ca504d7d94543f4fec42d6ee6e5ddb966","modified":1642347646313},{"_id":"public/2021/05/13/quill/index.html","hash":"59a1617a65b92419d1a18cfd121f413872770d53","modified":1642347646313},{"_id":"public/2020/05/09/wechat/index.html","hash":"9d47625a67f82b0035a3853d7a43866f1b897dab","modified":1642347646313},{"_id":"public/2020/04/01/animate/index.html","hash":"05e0b5ec77bc96153eca3a001a7cca0c9c992952","modified":1642347646313},{"_id":"public/2020/03/26/wangEditor/index.html","hash":"6cedaa3a4aadb838b77ae44cd50b25f3984e0759","modified":1642347646313},{"_id":"public/2020/03/18/chrome/index.html","hash":"e14396e8025fcc2277b78fc2e5b4432ef081504c","modified":1642347646313},{"_id":"public/2020/03/18/react-ts/index.html","hash":"ab6dd3ff11c5317b48c9e32a1309528b00bbc0f2","modified":1642347646313},{"_id":"public/2020/02/27/daily2020_1/index.html","hash":"20b3e3186a6c0e8913d5ddb1c86ce6ad39ecd3f8","modified":1642347646313},{"_id":"public/2020/02/26/daily2020/index.html","hash":"0c9c550d9dab52715793b7018cece68b23aac310","modified":1642347646313},{"_id":"public/2019/09/26/2019/index.html","hash":"533a555bdae1ed88e15d0582e4168c6f6bece49d","modified":1642347646313},{"_id":"public/2019/02/03/excel/index.html","hash":"74891e919f9a3d0309994c81ef5ee541108e3c19","modified":1642347646313},{"_id":"public/2018/12/25/learning-vuex/index.html","hash":"b164b2353354145c38d4bddc7d157839bb8b4660","modified":1642347646313},{"_id":"public/2018/09/09/mac/index.html","hash":"60c438f0370a954e4ce3b78abde8627a5b1fa759","modified":1642347646313},{"_id":"public/2018/07/12/small/index.html","hash":"f651c5cfad290ff15afe30da57301f5ecf50d869","modified":1642347646313},{"_id":"public/2018/08/09/cooking/index.html","hash":"707a795829cd0476841fa30aa2891409af767ac0","modified":1642347646313},{"_id":"public/2018/05/07/yyf/index.html","hash":"5e6aeddc3a97b33ffb99db3df7baae6fb1b268d4","modified":1642347646313},{"_id":"public/2018/04/28/skill/index.html","hash":"7e9d8c8a975ebd34c0d734a55711d54a22e96959","modified":1642347646313},{"_id":"public/2018/02/05/chaping/index.html","hash":"74515d227e58edaa8f20627932fc06e1dab120ee","modified":1642347646313},{"_id":"public/2017/12/30/react-daily/index.html","hash":"d38fa200991138fd27dfaad59a16b1f147acc466","modified":1642347646313},{"_id":"public/2017/12/28/react-table/index.html","hash":"7108ff5ec0384b327af0ae55d4758053904dfe91","modified":1642347646313},{"_id":"public/2017/12/16/daily/index.html","hash":"f39e47dcf5f6c8a52b6f2be44a83c6ed7ee0dde9","modified":1642347646313},{"_id":"public/2017/08/14/css/index.html","hash":"b676e138c6698c2757de43c3cd9d7ed1662b2949","modified":1642347646313},{"_id":"public/2017/06/25/popup/index.html","hash":"17927f6a50a38bd9bcdf37ee5b8590349e3aee27","modified":1642347646313},{"_id":"public/2017/06/09/banner/index.html","hash":"de6d4592137f55a05b7ec9d5333636c088c412c1","modified":1642347646313},{"_id":"public/2017/06/24/plugin/index.html","hash":"418349981b68bf21906b01d5b3f162ea1041fc90","modified":1642347646313},{"_id":"public/2017/04/05/collection/index.html","hash":"f438c31fc2c7d7fe2a9d6852210a9d1111f14a10","modified":1642347646313},{"_id":"public/archives/index.html","hash":"6add2570a4b291122aa1098210dd2b696923d10b","modified":1642347646313},{"_id":"public/archives/page/2/index.html","hash":"cefcb512c248f25af34177c885b5cc7615d7d7d7","modified":1642347646313},{"_id":"public/archives/page/3/index.html","hash":"7f7e914c5aa9dfa83215f5c18edc0c45c192878e","modified":1642347646313},{"_id":"public/archives/2017/index.html","hash":"8019ba5358118f6cde6d2797fd2e7aa82b954cba","modified":1642347646313},{"_id":"public/archives/2017/06/index.html","hash":"e17da178f40bdb33933b32e557d8b4b8a14db7a7","modified":1642347646313},{"_id":"public/archives/2017/08/index.html","hash":"5baf1f45ea1abdd03b74eb29ce78e525c7c7b327","modified":1642347646313},{"_id":"public/archives/2017/12/index.html","hash":"661cab24df62c0f9eb0140cf825c5ad751d74594","modified":1642347646313},{"_id":"public/archives/2017/04/index.html","hash":"d42b2040100abfd3e363f762528a467314756f7b","modified":1642347646313},{"_id":"public/archives/2018/index.html","hash":"13a4bfa8c83dba3948f6b8125c2c8ee0320c9d31","modified":1642347646313},{"_id":"public/archives/2018/04/index.html","hash":"68c52ebc66bcaa2d23e19a79f83dc88cc06202a8","modified":1642347646313},{"_id":"public/archives/2018/02/index.html","hash":"cb0906632425bb2aa25915773ae1f5c65ce35ada","modified":1642347646313},{"_id":"public/archives/2018/05/index.html","hash":"5600ee35f6b27474d25eedf34367250f86ff9fab","modified":1642347646313},{"_id":"public/archives/2018/07/index.html","hash":"5c643143ffc5a9bb50ac48ffe8c1a3b9ec8daa57","modified":1642347646313},{"_id":"public/archives/2018/08/index.html","hash":"3afd7625922e012059ab08899e9f2f2ae5cd63e7","modified":1642347646313},{"_id":"public/archives/2018/09/index.html","hash":"1f992ebe1280b45e4cc587b8b9adc34f7cc6ef5d","modified":1642347646313},{"_id":"public/archives/2018/12/index.html","hash":"ea9d3aa781419a6055c52dbb84b5198520d21ea6","modified":1642347646313},{"_id":"public/archives/2019/index.html","hash":"b9e6fa3b050b43f190e824c905970275bb604cf3","modified":1642347646313},{"_id":"public/archives/2019/02/index.html","hash":"140c831be043a71114b1d5e55f66a1c95a0f58dc","modified":1642347646313},{"_id":"public/archives/2019/09/index.html","hash":"7afc70b11475e79729c60b579491c3b918533a9b","modified":1642347646313},{"_id":"public/archives/2020/index.html","hash":"ff6239a095e7aa7e8ec2cb8e2f3a52bb95cbe4f2","modified":1642347646313},{"_id":"public/archives/2020/02/index.html","hash":"00b8c5c92e98cad334c189fb11e08e547b571aa3","modified":1642347646313},{"_id":"public/archives/2020/03/index.html","hash":"b7c8086fda49ad106014f8bc28be51ea77dc2106","modified":1642347646313},{"_id":"public/archives/2020/04/index.html","hash":"e33df94bcd84992e34ff948cfde5a7202476e147","modified":1642347646313},{"_id":"public/archives/2020/05/index.html","hash":"f12c848b610e67348b24e3ca55818cb7c4e600e1","modified":1642347646313},{"_id":"public/archives/2021/index.html","hash":"e99a9617575498fc2647c7477348377a7724b4c2","modified":1642347646313},{"_id":"public/archives/2021/05/index.html","hash":"5a1d7c5c8d57b589c803483f94716b55cc8bcdb0","modified":1642347646313},{"_id":"public/index.html","hash":"0feca1ef2ef9211cfb45d2b2cccb7f62ae17ea60","modified":1642347646313},{"_id":"public/page/2/index.html","hash":"17e4af86f599f051ab68e6ce7d812d0c18517bb8","modified":1642347646313},{"_id":"public/page/3/index.html","hash":"f01433eb982ebfb8ac3c0817190a1fe80ea71179","modified":1642347646313},{"_id":"public/tags/jq/index.html","hash":"96fff3020cbe7b01c414863f4cdd0690c1f2b3d2","modified":1642347646313},{"_id":"public/tags/vue/index.html","hash":"f2bb222136c24f450016962d6b3dec5fc57e0125","modified":1642347646313},{"_id":"public/tags/js/index.html","hash":"aceb5b8ae10f21cafd22f453532403761fef6c30","modified":1642347646313},{"_id":"public/tags/react/index.html","hash":"f2cdad337a425c198b46f98adb1d864fda810339","modified":1642347646313},{"_id":"public/tags/css/index.html","hash":"a2546a9aeeb65b0b54347034c30f8692b9799e14","modified":1642347646313},{"_id":"public/tags/extensions/index.html","hash":"cfa4fdd0631775e02b46f67b24fd6de3c998d485","modified":1642347646313},{"_id":"public/tags/React/index.html","hash":"d87a18f4c0236f3bf013836ed952b1619e79da71","modified":1642347646313},{"_id":"public/tags/vuex/index.html","hash":"28facf06c3e722c06cc9c879375bf30b5b29244e","modified":1642347646313},{"_id":"public/tags/mac/index.html","hash":"30d8e2c3b2642baa19a9cee0be3c2824ff3528dd","modified":1642347646313},{"_id":"public/tags/日常/index.html","hash":"22bcbdd3e2e2cc94f77cefbe9089570df9e9b6fa","modified":1642347646313},{"_id":"public/tags/wechat/index.html","hash":"2fc49e59e5556c073bd46699f49753fbb107e9ce","modified":1642347646313},{"_id":"public/tags/hexo/index.html","hash":"5eb68c4348de7726fef9d5abb7dda0489fe80106","modified":1642347646313},{"_id":"public/img/5.png","hash":"29eb0a7e990d69fbe6ed03064b3430cbaedb7bf8","modified":1620982005923},{"_id":"public/img/65.png","hash":"02f538e7301216edada6125248df6c036b1f76a8","modified":1620982005923},{"_id":"public/img/36.png","hash":"844151e0b62455e9111c721c0a4c23a05193ec5a","modified":1620982005923},{"_id":"public/img/img - 副本.jpg","hash":"b152317668128d21382a2126af70cb25b73057e2","modified":1642308304348},{"_id":"public/img/new.png","hash":"d903d2c7b59b79ae79b105d8572e32c4da7445e5","modified":1620982005923},{"_id":"public/img/router.png","hash":"fcfe73d5143a46c5cd09840b6fede58ef5435ffb","modified":1620982005923},{"_id":"public/img/logos.jpg","hash":"b152317668128d21382a2126af70cb25b73057e2","modified":1620982005923},{"_id":"public/img/return.png","hash":"45dba82cc6c4c638e5670b0144a74f1f83cb53b2","modified":1620982005923},{"_id":"public/img/react.png","hash":"0e28b92c702e96afd6396d76b6f62d9b677f1c94","modified":1620982005923},{"_id":"public/img/style.png","hash":"8a7b617714b71092c122b4145fe93c178134f135","modified":1620982005923},{"_id":"public/img/search.png","hash":"93ab53bfa14f77efc0f66b808eb1c2dffd3b1de3","modified":1620982005923},{"_id":"public/img/zhifu.jpg","hash":"aea25c260aaec4462889811fbab3ec39912026bf","modified":1620982005923},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1620982005923},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1620982005923},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1620982005923},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1620982005923},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1620982005923},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1620982005923},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1620982005923},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1620982005923},{"_id":"public/img/es6.png","hash":"62e7cda0e979fbb6fb4d20929153a1ff5dc18f1a","modified":1620982005923},{"_id":"public/img/jsx.png","hash":"07c1b62303d0823228b54be60a1002a727ba7b3f","modified":1620982005923},{"_id":"public/img/jsx2.png","hash":"ea72fd0fa8d2ac546282975f28808203fb82a7e9","modified":1620982005923},{"_id":"public/img/image.png","hash":"b83303aa63318d77e8d4b3c849847a0fbded8191","modified":1620982005923},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1620982005923},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1620982005923},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1620982005923},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1620982005923},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1620982005923},{"_id":"public/img/IMG_2372.jpg","hash":"016748eea930343459b29a7873b80ea0ec1db043","modified":1620982005923},{"_id":"public/img/jgg.gif","hash":"8bf993cd07b23138635a0ac6a5d826bbca301b2d","modified":1620982005923},{"_id":"public/img/lbt.png","hash":"4f57899e5ce8ee5990ad1ec32d974076d9c9b4b6","modified":1620982005923},{"_id":"source/_posts/dragon.md","hash":"ddd02d3dc79c4ef0dd1f46e1fb2da2504c23e3a4","modified":1621393303500},{"_id":"public/2021/05/19/dragon/index.html","hash":"d3b62e0e23151dd3acd9ca621981c54d04007e9e","modified":1642347646313},{"_id":"source/_posts/doc.md","hash":"114de0754e9f94af1c81bc4f645621e0ea6c5af4","modified":1629428504994},{"_id":"public/2021/08/20/doc/index.html","hash":"45da0aa722aa2149615ca6e4cb393f4c986ca719","modified":1642347646313},{"_id":"public/archives/2021/08/index.html","hash":"7ccdd5d4428994511a3ef35dc5f68c3947310e71","modified":1642347646313},{"_id":"source/_posts/ssr.md","hash":"db0e0cdd6982b00e82eccb10784fe8db45157228","modified":1642346295562},{"_id":"public/2022/01/15/ssr/index.html","hash":"1f106ec83e928907a2cd59692d05438bfae29fad","modified":1642347646313},{"_id":"public/archives/2022/index.html","hash":"d7328d556320a1b5400375f8f98fed2685f311c0","modified":1642347646313},{"_id":"public/archives/2022/01/index.html","hash":"3d14c7e79ca954e2b657b64280daa8aeb5a3e821","modified":1642347646313},{"_id":"public/tags/ssr/index.html","hash":"02be43de1841c7d133b218dcce214f4541b9baf7","modified":1642347646313}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2020-02-26T08:57:47.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-02-26 16:57:47\ntype: tags\n---\n","updated":"2020-02-26T08:58:05.258Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckoo2u0zx001w000mb9577b8f","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"jquery 轮播图插件教程","date":"2017-06-08T16:00:00.000Z","_content":"简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的图片轮播\n效果图：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.Carousel = function(options){\n     var obj = $(this);\n     var defaults = {\n       'width' : \"100%\",\n       'height' : \"480\",\n       'speed' : \"1000\",\n       'effect' : \"fade\",\n       'delay' : \"200\",\n       \"doc\" : true ,\n       \"arrow\" : true\n     };\n     var opts = $.extend(defaults,options);\n     // 设置容器的宽高\n     obj.css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     // 设置图片的宽高和容器一致\n     obj.find(\"img\").css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     //轮播图片个数 4\n     var length = obj.find('li').length;\n     var str = \"\";\n     obj.find(\".wrapUl\").css({\"height\":opts.height});\n     obj.find(\".warp\").css({'width':opts.width * length});\n     for(var i = 0;i<length;i++){\n       str += \"<li></li>\";\n     }\n     // 如果显示小圆点\n     if( opts.doc ){\n       $(\"<ul class='docBox'>\"+str+\"</ul>\").insertAfter(obj.find(\"div\"));\n       $(\".docBox li:first\").addClass(\"active\");\n     }\n     // 小圆点情况下，如果效果为淡入淡出\n     if( opts.effect == 'fade' ){\n       obj.find('.warp li').css({\n         \"position\":'absolute',\n         \"display\":'none'\n       }).first().show();\n       var ii = 0;\n       var setTime = setInterval(function(){\n         obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);\n         $(\".docBox li\").eq(ii).addClass(\"active\").siblings().removeClass(\"active\");\n         ii++;\n         if( ii == length ){\n           ii = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setTime);\n         var index = $(this).index();\n         setTimeout(function(){\n           obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n     // 小圆点情况下，如果效果为平移\n     if( opts.effect == 'move' ){\n       var mm = 0;\n       var setMove = setInterval(function(){\n         obj.children('.warp').animate({\"left\":-(mm * opts.width)+\"px\"},opts.speed);\n         $(\".docBox li\").eq(mm).addClass(\"active\").siblings().removeClass(\"active\");\n         mm = mm+1;\n         if( mm == length ){\n           mm = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setMove);\n         var index = $(this).index();\n         var left = index * opts.width;\n         setTimeout(function(){\n           obj.children('.warp').animate({\"left\":-left+\"px\"},opts.speed);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n   };\n\n })(jQuery);\n\n//调用\n$(\".banner\").Carousel({\n  'width' : \"1200\",  //设置容器宽度(暂不支持自适应)\n  'height' : \"700\", //设置容器高度\n  'effect' : \"move\",  //值为fade为淡入淡出效果 move则为左右移动\n  'speed' : \"1000\",  //设置左右移动速度\n  'delay' : \"200\"    //设置淡入淡出速度\n});\n  ```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/banner.md","raw":"---\ntitle: jquery 轮播图插件教程\ndate: 2017-06-09\ntags: jq\n---\n简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的图片轮播\n效果图：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.Carousel = function(options){\n     var obj = $(this);\n     var defaults = {\n       'width' : \"100%\",\n       'height' : \"480\",\n       'speed' : \"1000\",\n       'effect' : \"fade\",\n       'delay' : \"200\",\n       \"doc\" : true ,\n       \"arrow\" : true\n     };\n     var opts = $.extend(defaults,options);\n     // 设置容器的宽高\n     obj.css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     // 设置图片的宽高和容器一致\n     obj.find(\"img\").css({\n       'width':opts.width,\n       'height':opts.height\n     });\n     //轮播图片个数 4\n     var length = obj.find('li').length;\n     var str = \"\";\n     obj.find(\".wrapUl\").css({\"height\":opts.height});\n     obj.find(\".warp\").css({'width':opts.width * length});\n     for(var i = 0;i<length;i++){\n       str += \"<li></li>\";\n     }\n     // 如果显示小圆点\n     if( opts.doc ){\n       $(\"<ul class='docBox'>\"+str+\"</ul>\").insertAfter(obj.find(\"div\"));\n       $(\".docBox li:first\").addClass(\"active\");\n     }\n     // 小圆点情况下，如果效果为淡入淡出\n     if( opts.effect == 'fade' ){\n       obj.find('.warp li').css({\n         \"position\":'absolute',\n         \"display\":'none'\n       }).first().show();\n       var ii = 0;\n       var setTime = setInterval(function(){\n         obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);\n         $(\".docBox li\").eq(ii).addClass(\"active\").siblings().removeClass(\"active\");\n         ii++;\n         if( ii == length ){\n           ii = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setTime);\n         var index = $(this).index();\n         setTimeout(function(){\n           obj.find('.warp li').stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n     // 小圆点情况下，如果效果为平移\n     if( opts.effect == 'move' ){\n       var mm = 0;\n       var setMove = setInterval(function(){\n         obj.children('.warp').animate({\"left\":-(mm * opts.width)+\"px\"},opts.speed);\n         $(\".docBox li\").eq(mm).addClass(\"active\").siblings().removeClass(\"active\");\n         mm = mm+1;\n         if( mm == length ){\n           mm = 0;\n         }\n       },opts.speed);\n       $(\".docBox li\").on(\"click\",function(){\n         clearInterval(setMove);\n         var index = $(this).index();\n         var left = index * opts.width;\n         setTimeout(function(){\n           obj.children('.warp').animate({\"left\":-left+\"px\"},opts.speed);\n         },opts.delay);\n         $(this).addClass(\"active\").siblings().removeClass(\"active\");\n       });\n     }\n   };\n\n })(jQuery);\n\n//调用\n$(\".banner\").Carousel({\n  'width' : \"1200\",  //设置容器宽度(暂不支持自适应)\n  'height' : \"700\", //设置容器高度\n  'effect' : \"move\",  //值为fade为淡入淡出效果 move则为左右移动\n  'speed' : \"1000\",  //设置左右移动速度\n  'delay' : \"200\"    //设置淡入淡出速度\n});\n  ```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"banner","published":1,"updated":"2020-02-26T10:27:08.916Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0yo0000000m4r0x3haw","content":"<p>简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的图片轮播<br>效果图：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\" /><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ;(function($)&#123;</span><br><span class=\"line\">   $.fn.Carousel = function(options)&#123;</span><br><span class=\"line\">     var obj = $(this);</span><br><span class=\"line\">     var defaults = &#123;</span><br><span class=\"line\">       <span class=\"string\">'width'</span> : <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'height'</span> : <span class=\"string\">\"480\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'effect'</span> : <span class=\"string\">\"fade\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>,</span><br><span class=\"line\">       <span class=\"string\">\"doc\"</span> : true ,</span><br><span class=\"line\">       <span class=\"string\">\"arrow\"</span> : true</span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\">     var opts = $.extend(defaults,options);</span><br><span class=\"line\">     // 设置容器的宽高</span><br><span class=\"line\">     obj.css(&#123;</span><br><span class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</span><br><span class=\"line\">       <span class=\"string\">'height'</span>:opts.height</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     // 设置图片的宽高和容器一致</span><br><span class=\"line\">     obj.find(<span class=\"string\">\"img\"</span>).css(&#123;</span><br><span class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</span><br><span class=\"line\">       <span class=\"string\">'height'</span>:opts.height</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     //轮播图片个数 <span class=\"number\">4</span></span><br><span class=\"line\">     var length = obj.find(<span class=\"string\">'li'</span>).length;</span><br><span class=\"line\">     var str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     obj.find(<span class=\"string\">\".wrapUl\"</span>).css(&#123;<span class=\"string\">\"height\"</span>:opts.height&#125;);</span><br><span class=\"line\">     obj.find(<span class=\"string\">\".warp\"</span>).css(&#123;<span class=\"string\">'width'</span>:opts.width * length&#125;);</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(var i = <span class=\"number\">0</span>;i&lt;length;i++)&#123;</span><br><span class=\"line\">       str += <span class=\"string\">\"&lt;li&gt;&lt;/li&gt;\"</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     // 如果显示小圆点</span><br><span class=\"line\">     <span class=\"keyword\">if</span>( opts.doc )&#123;</span><br><span class=\"line\">       $(<span class=\"string\">\"&lt;ul class='docBox'&gt;\"</span>+str+<span class=\"string\">\"&lt;/ul&gt;\"</span>).insertAfter(obj.find(<span class=\"string\">\"div\"</span>));</span><br><span class=\"line\">       $(<span class=\"string\">\".docBox li:first\"</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     // 小圆点情况下，如果效果为淡入淡出</span><br><span class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'fade'</span> )&#123;</span><br><span class=\"line\">       obj.find(<span class=\"string\">'.warp li'</span>).css(&#123;</span><br><span class=\"line\">         <span class=\"string\">\"position\"</span>:<span class=\"string\">'absolute'</span>,</span><br><span class=\"line\">         <span class=\"string\">\"display\"</span>:<span class=\"string\">'none'</span></span><br><span class=\"line\">       &#125;).first().show();</span><br><span class=\"line\">       var ii = <span class=\"number\">0</span>;</span><br><span class=\"line\">       var setTime = setInterval(function()&#123;</span><br><span class=\"line\">         obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);</span><br><span class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(ii).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">         ii++;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>( ii == length )&#123;</span><br><span class=\"line\">           ii = <span class=\"number\">0</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;,opts.speed);</span><br><span class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</span><br><span class=\"line\">         clearInterval(setTime);</span><br><span class=\"line\">         var index = $(this).index();</span><br><span class=\"line\">         setTimeout(function()&#123;</span><br><span class=\"line\">           obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);</span><br><span class=\"line\">         &#125;,opts.delay);</span><br><span class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     // 小圆点情况下，如果效果为平移</span><br><span class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'move'</span> )&#123;</span><br><span class=\"line\">       var mm = <span class=\"number\">0</span>;</span><br><span class=\"line\">       var setMove = setInterval(function()&#123;</span><br><span class=\"line\">         obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-(mm * opts.width)+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</span><br><span class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(mm).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">         mm = mm+<span class=\"number\">1</span>;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>( mm == length )&#123;</span><br><span class=\"line\">           mm = <span class=\"number\">0</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;,opts.speed);</span><br><span class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</span><br><span class=\"line\">         clearInterval(setMove);</span><br><span class=\"line\">         var index = $(this).index();</span><br><span class=\"line\">         var left = index * opts.width;</span><br><span class=\"line\">         setTimeout(function()&#123;</span><br><span class=\"line\">           obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-left+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</span><br><span class=\"line\">         &#125;,opts.delay);</span><br><span class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;)(jQuery);</span><br><span class=\"line\"></span><br><span class=\"line\">//调用</span><br><span class=\"line\">$(<span class=\"string\">\".banner\"</span>).Carousel(&#123;</span><br><span class=\"line\">  <span class=\"string\">'width'</span> : <span class=\"string\">\"1200\"</span>,  //设置容器宽度(暂不支持自适应)</span><br><span class=\"line\">  <span class=\"string\">'height'</span> : <span class=\"string\">\"700\"</span>, //设置容器高度</span><br><span class=\"line\">  <span class=\"string\">'effect'</span> : <span class=\"string\">\"move\"</span>,  //值为fade为淡入淡出效果 move则为左右移动</span><br><span class=\"line\">  <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,  //设置左右移动速度</span><br><span class=\"line\">  <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>    //设置淡入淡出速度</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>简单的轮播插件，和一些大牛写的轮播是不能比的，一般简单的应用可以实现。支持淡入淡出和左右移动两种方式，支持自动轮播！</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的图片轮播<br>效果图：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/lbt.png?raw=true\" /><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ;(function($)&#123;</span><br><span class=\"line\">   $.fn.Carousel = function(options)&#123;</span><br><span class=\"line\">     var obj = $(this);</span><br><span class=\"line\">     var defaults = &#123;</span><br><span class=\"line\">       <span class=\"string\">'width'</span> : <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'height'</span> : <span class=\"string\">\"480\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'effect'</span> : <span class=\"string\">\"fade\"</span>,</span><br><span class=\"line\">       <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>,</span><br><span class=\"line\">       <span class=\"string\">\"doc\"</span> : true ,</span><br><span class=\"line\">       <span class=\"string\">\"arrow\"</span> : true</span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\">     var opts = $.extend(defaults,options);</span><br><span class=\"line\">     // 设置容器的宽高</span><br><span class=\"line\">     obj.css(&#123;</span><br><span class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</span><br><span class=\"line\">       <span class=\"string\">'height'</span>:opts.height</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     // 设置图片的宽高和容器一致</span><br><span class=\"line\">     obj.find(<span class=\"string\">\"img\"</span>).css(&#123;</span><br><span class=\"line\">       <span class=\"string\">'width'</span>:opts.width,</span><br><span class=\"line\">       <span class=\"string\">'height'</span>:opts.height</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     //轮播图片个数 <span class=\"number\">4</span></span><br><span class=\"line\">     var length = obj.find(<span class=\"string\">'li'</span>).length;</span><br><span class=\"line\">     var str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     obj.find(<span class=\"string\">\".wrapUl\"</span>).css(&#123;<span class=\"string\">\"height\"</span>:opts.height&#125;);</span><br><span class=\"line\">     obj.find(<span class=\"string\">\".warp\"</span>).css(&#123;<span class=\"string\">'width'</span>:opts.width * length&#125;);</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(var i = <span class=\"number\">0</span>;i&lt;length;i++)&#123;</span><br><span class=\"line\">       str += <span class=\"string\">\"&lt;li&gt;&lt;/li&gt;\"</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     // 如果显示小圆点</span><br><span class=\"line\">     <span class=\"keyword\">if</span>( opts.doc )&#123;</span><br><span class=\"line\">       $(<span class=\"string\">\"&lt;ul class='docBox'&gt;\"</span>+str+<span class=\"string\">\"&lt;/ul&gt;\"</span>).insertAfter(obj.find(<span class=\"string\">\"div\"</span>));</span><br><span class=\"line\">       $(<span class=\"string\">\".docBox li:first\"</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     // 小圆点情况下，如果效果为淡入淡出</span><br><span class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'fade'</span> )&#123;</span><br><span class=\"line\">       obj.find(<span class=\"string\">'.warp li'</span>).css(&#123;</span><br><span class=\"line\">         <span class=\"string\">\"position\"</span>:<span class=\"string\">'absolute'</span>,</span><br><span class=\"line\">         <span class=\"string\">\"display\"</span>:<span class=\"string\">'none'</span></span><br><span class=\"line\">       &#125;).first().show();</span><br><span class=\"line\">       var ii = <span class=\"number\">0</span>;</span><br><span class=\"line\">       var setTime = setInterval(function()&#123;</span><br><span class=\"line\">         obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(ii).fadeIn(opts.delay);</span><br><span class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(ii).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">         ii++;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>( ii == length )&#123;</span><br><span class=\"line\">           ii = <span class=\"number\">0</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;,opts.speed);</span><br><span class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</span><br><span class=\"line\">         clearInterval(setTime);</span><br><span class=\"line\">         var index = $(this).index();</span><br><span class=\"line\">         setTimeout(function()&#123;</span><br><span class=\"line\">           obj.find(<span class=\"string\">'.warp li'</span>).stop(false,true).fadeOut(opts.delay).eq(index).fadeIn(opts.delay);</span><br><span class=\"line\">         &#125;,opts.delay);</span><br><span class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     // 小圆点情况下，如果效果为平移</span><br><span class=\"line\">     <span class=\"keyword\">if</span>( opts.effect == <span class=\"string\">'move'</span> )&#123;</span><br><span class=\"line\">       var mm = <span class=\"number\">0</span>;</span><br><span class=\"line\">       var setMove = setInterval(function()&#123;</span><br><span class=\"line\">         obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-(mm * opts.width)+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</span><br><span class=\"line\">         $(<span class=\"string\">\".docBox li\"</span>).eq(mm).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">         mm = mm+<span class=\"number\">1</span>;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>( mm == length )&#123;</span><br><span class=\"line\">           mm = <span class=\"number\">0</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;,opts.speed);</span><br><span class=\"line\">       $(<span class=\"string\">\".docBox li\"</span>).on(<span class=\"string\">\"click\"</span>,function()&#123;</span><br><span class=\"line\">         clearInterval(setMove);</span><br><span class=\"line\">         var index = $(this).index();</span><br><span class=\"line\">         var left = index * opts.width;</span><br><span class=\"line\">         setTimeout(function()&#123;</span><br><span class=\"line\">           obj.children(<span class=\"string\">'.warp'</span>).animate(&#123;<span class=\"string\">\"left\"</span>:-left+<span class=\"string\">\"px\"</span>&#125;,opts.speed);</span><br><span class=\"line\">         &#125;,opts.delay);</span><br><span class=\"line\">         $(this).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;)(jQuery);</span><br><span class=\"line\"></span><br><span class=\"line\">//调用</span><br><span class=\"line\">$(<span class=\"string\">\".banner\"</span>).Carousel(&#123;</span><br><span class=\"line\">  <span class=\"string\">'width'</span> : <span class=\"string\">\"1200\"</span>,  //设置容器宽度(暂不支持自适应)</span><br><span class=\"line\">  <span class=\"string\">'height'</span> : <span class=\"string\">\"700\"</span>, //设置容器高度</span><br><span class=\"line\">  <span class=\"string\">'effect'</span> : <span class=\"string\">\"move\"</span>,  //值为fade为淡入淡出效果 move则为左右移动</span><br><span class=\"line\">  <span class=\"string\">'speed'</span> : <span class=\"string\">\"1000\"</span>,  //设置左右移动速度</span><br><span class=\"line\">  <span class=\"string\">'delay'</span> : <span class=\"string\">\"200\"</span>    //设置淡入淡出速度</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"又一日常整理","date":"2019-09-25T16:00:00.000Z","_content":"絮絮叨叨的我又来了~~~ 这两年懒了都没有写博客了，真是对不起还在看我博客的你们，日常也还是会有积累一些想分享的东西，但是就是没有把他记录下来，现在也只能靠自己的脑子再摸索摸索...\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n生成一个sku商品信息录用生成生产组合列表，因为那时候是做一个电商平台嘛！就是要上产品啊，根据你上的商品规格生成规格表。示例图如下：\n\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/spec.png?raw=true\" />\n\n```javascript\n  // 原数据\n  const arr = [\n    { name: '颜色', spec_values: [{ value: '白' }, { value: '黑' }] },\n    { name: '尺寸', spec_values: [{ value: 'S' }, { value: 'M' }] },\n  ];\n\n  // 方法\n  const infolist = [];\n  arr.forEach(({ name, spec_values }) => {\n  if (infolist.length === 0) {\n    spec_values.forEach((item) => {\n      const arr = [];\n      item.key = name;\n      arr.push(item);\n      infolist.push(arr);\n      return true;\n    });\n  } else {\n    infolist.forEach((item) => {\n      spec_values.forEach((el) => {\n        const arr = [...item];\n        el.key = name;\n        arr.push(el);\n        infolist.push(arr);\n        return true;\n      });\n      return true;\n    });\n  }\n  return true;\n});\n\nconst spec_info = infolist.filter((item) => {\n  return item.length === arr.length;\n});\n\n\n// 排列后数据\n[\n  [{ value: '白', key: '颜色' },{ value: 'S', key: '尺寸' }],\n  [{ value: '白', key: '颜色' },{ value: 'M', key: '尺寸' }],\n  [{ value: '黑', key: '颜色' },{ value: 'S', key: '尺寸' }],\n  [{ value: '黑', key: '颜色' },{ value: 'M', key: '尺寸' }],\n]\n```\n\n> 如果你需要让一个工具函数在每个组件可用，可以把方法挂载到 Vue.prototype上。\n\n```javascript\nimport Multimedia from '@/components/common/multimedia'; // 全局引入这个组件\n\nMultimedia.store = store;\nconst multimedia = new Vue(Multimedia).$mount();\ndocument.body.appendChild(multimedia.$el);\nVue.prototype.$multimedia = multimedia.open;\n\n用this.$multimedia()调用方法。\n\n```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/2019.md","raw":"---\ntitle: 又一日常整理\ndate: 2019-09-26\ntags: vue\n---\n絮絮叨叨的我又来了~~~ 这两年懒了都没有写博客了，真是对不起还在看我博客的你们，日常也还是会有积累一些想分享的东西，但是就是没有把他记录下来，现在也只能靠自己的脑子再摸索摸索...\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n生成一个sku商品信息录用生成生产组合列表，因为那时候是做一个电商平台嘛！就是要上产品啊，根据你上的商品规格生成规格表。示例图如下：\n\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/spec.png?raw=true\" />\n\n```javascript\n  // 原数据\n  const arr = [\n    { name: '颜色', spec_values: [{ value: '白' }, { value: '黑' }] },\n    { name: '尺寸', spec_values: [{ value: 'S' }, { value: 'M' }] },\n  ];\n\n  // 方法\n  const infolist = [];\n  arr.forEach(({ name, spec_values }) => {\n  if (infolist.length === 0) {\n    spec_values.forEach((item) => {\n      const arr = [];\n      item.key = name;\n      arr.push(item);\n      infolist.push(arr);\n      return true;\n    });\n  } else {\n    infolist.forEach((item) => {\n      spec_values.forEach((el) => {\n        const arr = [...item];\n        el.key = name;\n        arr.push(el);\n        infolist.push(arr);\n        return true;\n      });\n      return true;\n    });\n  }\n  return true;\n});\n\nconst spec_info = infolist.filter((item) => {\n  return item.length === arr.length;\n});\n\n\n// 排列后数据\n[\n  [{ value: '白', key: '颜色' },{ value: 'S', key: '尺寸' }],\n  [{ value: '白', key: '颜色' },{ value: 'M', key: '尺寸' }],\n  [{ value: '黑', key: '颜色' },{ value: 'S', key: '尺寸' }],\n  [{ value: '黑', key: '颜色' },{ value: 'M', key: '尺寸' }],\n]\n```\n\n> 如果你需要让一个工具函数在每个组件可用，可以把方法挂载到 Vue.prototype上。\n\n```javascript\nimport Multimedia from '@/components/common/multimedia'; // 全局引入这个组件\n\nMultimedia.store = store;\nconst multimedia = new Vue(Multimedia).$mount();\ndocument.body.appendChild(multimedia.$el);\nVue.prototype.$multimedia = multimedia.open;\n\n用this.$multimedia()调用方法。\n\n```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"2019","published":1,"updated":"2020-02-26T10:27:54.079Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0ys0001000mhgir3g79","content":"<p>絮絮叨叨的我又来了~~~ 这两年懒了都没有写博客了，真是对不起还在看我博客的你们，日常也还是会有积累一些想分享的东西，但是就是没有把他记录下来，现在也只能靠自己的脑子再摸索摸索…</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong>如有转载，请注明出处。</strong></font><br>生成一个sku商品信息录用生成生产组合列表，因为那时候是做一个电商平台嘛！就是要上产品啊，根据你上的商品规格生成规格表。示例图如下：</p>\n<p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/spec.png?raw=true\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">// 原数据</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">'颜色'</span>, <span class=\"attr\">spec_values</span>: [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'白'</span> &#125;, &#123; <span class=\"attr\">value</span>: <span class=\"string\">'黑'</span> &#125;] &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">'尺寸'</span>, <span class=\"attr\">spec_values</span>: [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'S'</span> &#125;, &#123; <span class=\"attr\">value</span>: <span class=\"string\">'M'</span> &#125;] &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 方法</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> infolist = [];</span><br><span class=\"line\">  arr.forEach(<span class=\"function\">(<span class=\"params\">&#123; name, spec_values &#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (infolist.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    spec_values.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">      item.key = name;</span><br><span class=\"line\">      arr.push(item);</span><br><span class=\"line\">      infolist.push(arr);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    infolist.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      spec_values.forEach(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> arr = [...item];</span><br><span class=\"line\">        el.key = name;</span><br><span class=\"line\">        arr.push(el);</span><br><span class=\"line\">        infolist.push(arr);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> spec_info = infolist.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> item.length === arr.length;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 排列后数据</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'白'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'S'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'白'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'M'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'黑'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'S'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'黑'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'M'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果你需要让一个工具函数在每个组件可用，可以把方法挂载到 Vue.prototype上。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Multimedia <span class=\"keyword\">from</span> <span class=\"string\">'@/components/common/multimedia'</span>; <span class=\"comment\">// 全局引入这个组件</span></span><br><span class=\"line\"></span><br><span class=\"line\">Multimedia.store = store;</span><br><span class=\"line\"><span class=\"keyword\">const</span> multimedia = <span class=\"keyword\">new</span> Vue(Multimedia).$mount();</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(multimedia.$el);</span><br><span class=\"line\">Vue.prototype.$multimedia = multimedia.open;</span><br><span class=\"line\"></span><br><span class=\"line\">用<span class=\"keyword\">this</span>.$multimedia()调用方法。</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>絮絮叨叨的我又来了~~~ 这两年懒了都没有写博客了，真是对不起还在看我博客的你们，日常也还是会有积累一些想分享的东西，但是就是没有把他记录下来，现在也只能靠自己的脑子再摸索摸索…</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong>如有转载，请注明出处。</strong></font><br>生成一个sku商品信息录用生成生产组合列表，因为那时候是做一个电商平台嘛！就是要上产品啊，根据你上的商品规格生成规格表。示例图如下：</p>\n<p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/spec.png?raw=true\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">// 原数据</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">'颜色'</span>, <span class=\"attr\">spec_values</span>: [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'白'</span> &#125;, &#123; <span class=\"attr\">value</span>: <span class=\"string\">'黑'</span> &#125;] &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">'尺寸'</span>, <span class=\"attr\">spec_values</span>: [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'S'</span> &#125;, &#123; <span class=\"attr\">value</span>: <span class=\"string\">'M'</span> &#125;] &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 方法</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> infolist = [];</span><br><span class=\"line\">  arr.forEach(<span class=\"function\">(<span class=\"params\">&#123; name, spec_values &#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (infolist.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    spec_values.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">      item.key = name;</span><br><span class=\"line\">      arr.push(item);</span><br><span class=\"line\">      infolist.push(arr);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    infolist.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      spec_values.forEach(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> arr = [...item];</span><br><span class=\"line\">        el.key = name;</span><br><span class=\"line\">        arr.push(el);</span><br><span class=\"line\">        infolist.push(arr);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> spec_info = infolist.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> item.length === arr.length;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 排列后数据</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'白'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'S'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'白'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'M'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'黑'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'S'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'黑'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'颜色'</span> &#125;,&#123; <span class=\"attr\">value</span>: <span class=\"string\">'M'</span>, <span class=\"attr\">key</span>: <span class=\"string\">'尺寸'</span> &#125;],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果你需要让一个工具函数在每个组件可用，可以把方法挂载到 Vue.prototype上。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Multimedia <span class=\"keyword\">from</span> <span class=\"string\">'@/components/common/multimedia'</span>; <span class=\"comment\">// 全局引入这个组件</span></span><br><span class=\"line\"></span><br><span class=\"line\">Multimedia.store = store;</span><br><span class=\"line\"><span class=\"keyword\">const</span> multimedia = <span class=\"keyword\">new</span> Vue(Multimedia).$mount();</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(multimedia.$el);</span><br><span class=\"line\">Vue.prototype.$multimedia = multimedia.open;</span><br><span class=\"line\"></span><br><span class=\"line\">用<span class=\"keyword\">this</span>.$multimedia()调用方法。</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"整理各对象常用属性与方法","date":"2017-04-04T16:00:00.000Z","_content":"<font size=1>**如有转载，请注明出处。**</font>\n------\n\n**String对象的各种属性与方法**\n\n属性：\n\n>  i、length 字符串长度\n   \"aaa\".length -> 3\n>  ii、prototype允许您向对象添加属性和方法\n ```python\n   例：\n      String.prototype.spacify=function(str){\n        return(str.split(\"\").join(\" \"))\n      }\n      \"asasda\".spacify(\"asss\") -> \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格\n\n```\n方法：\n\n> 1、split 讲字符分割成数组显示\n      \"a,s,d\".split(\",\") -> [\"a\",\"s\",\"d\"]\n> 2、concat 合并字符串火数组\n     \"1\".concat(\"sdf\",\"555\")-> \"1sdf555\"\n      [\"1\"].concat(\"sdf\",\"555\") ->[\"1\", \"sdf\", \"555\"]\n> 3、toLocaleUpperCase同toUpperCase 小写转换成大写\n     \"asaddas\".toLocaleUpperCase()==\"asaddas\".toUpperCase() \"ASADDAS\"\n> 4、toLocaleLowerCase同toLowerCase 大写转换成小写\n     \"ASADDAS\".toLocaleLowerCase()==\"asaddas\".toLowerCase() \"asaddas\"\n> 5、charAt 从字符串中取出单个字符\n     \"asde\".charAt(2)-> d\n> 6、indexOf(\"xx\",[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".indexOf(\"yuyafei\") ->5\n> 7、lastIndexOf(\"xx\",[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".lastIndexOf(\"yu\",11) ->5\n> 8、match(\"xxx\",'regexp') 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,\n     \"hello world\".match(\"hello\") -> [\"hello\"]\n     \"he2llo1wo3rld\".match(/\\d+/g) -> [\"2\", \"1\", \"3\"]\n> 9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串\n     \"hello aaaa\".slice(1,6) -> \"ello \"\n    \"hello aaaa\".slice(-8,-2) -> \"hello aaaa\".slice(2,8) -> \"llo aa\"\n> 10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串\n     \"hello world\".substr(1,4) -> \"ello\"\n     \"hello world\".substr(-8,4)-> \"hello world\".substr(3,4)  -> \"lo w\"\n> 11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)\n     \"hello\".substring(1,3) -> \"el\"\n\n<!--more-->\n##Number对象的各种属性与方法\n\n方法：\n\n> 1、toString([几进制显示数字]) 把数字转换成字符串\n      123.toString() -> 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；\n    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；\n    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；\n       var num = 111; num.toString();  -> \"111\" 或 (123).toString()\n       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 \"[object Object]\"\n> 2、toFixed() 把数字四舍五入为指定小数位数的数字\n      var num = 1223; num.toFixed(2); -> \"1223.00\"\n> 3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法\n      var num =10000; num.toPrecision(4) -> \"1.000e+4\"\n\n\n##Boolean对象的各种属性与方法\n\n方法：\n\n> 1、toSource() 返回表示对象源代码的字符串\n     function employee(name,job,born)\n     {\n       this.name=name;\n       this.job=job;\n       this.born=born;\n    }\n     var bill=new employee(\"Bill Gates\",\"Engineer\",1985);\n     bill.toSource();  ->({name:\"Bill Gates\", job:\"Engineer\", born:1985})\n> 2、toString() 同number与String\n> 3、valueOf() 返回 Boolean 对象的原始值\n      var boo = new Boolean(false)\n      document.write(boo.valueOf())  ->false\n\n##Array对象的各种属性与方法\n属性：\n> 1、length 返回数组的长度\n      [\"1\",\"2\"].length  -> 2\n方法：\n> 1、concat() 合并数组\n     [\"1\",\"2\"].concat(\"123\",[2]) -> [\"1\", \"2\", \"123\", 2]\n> 2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。\n     [\"1\",\"2\"].join(\"|\")  -> \"1|2\"\n> 3、pop() 删除数组最后一个元素并返回杯删除的元素\n     [\"s\",\"e\"].pop()  -> \"e\"\n> 4、push() 往数组中添加一个或更多元素，并返回新的长度。\n     [\"s\",\"e\"].push(\"32\",\"45\") -> 4\n> 5、reverse() 颠倒顺序\n     [2,5,3,4,1].reverse()  -> [1, 4, 3, 5, 2]\n> 6、sort() 排序（但对数字排序不准确）\n     [2,5,3,4,21].sort() -> [2, 21, 3, 4, 5]\n> 7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。\n     [2,5,3,4,21].shift()  -> 2\n> 8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组\n    [2,5,3,4,21].slice(1,4) -> [5, 3, 4]\n> 9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。\n     [2,5,3,4,21].splice(1,3,8888) -> [5, 3, 4]\n> 10、toString() 把数组转换成字符串\n     [2,5,3,4,21].toString() -> \"2,5,3,4,21\"\n> 11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度\n     [2,5,3,4,21].unshift(1) -> 6\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/collection.md","raw":"---\ntitle: 整理各对象常用属性与方法\ndate: 2017-04-05\ntags: js\n---\n<font size=1>**如有转载，请注明出处。**</font>\n------\n\n**String对象的各种属性与方法**\n\n属性：\n\n>  i、length 字符串长度\n   \"aaa\".length -> 3\n>  ii、prototype允许您向对象添加属性和方法\n ```python\n   例：\n      String.prototype.spacify=function(str){\n        return(str.split(\"\").join(\" \"))\n      }\n      \"asasda\".spacify(\"asss\") -> \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格\n\n```\n方法：\n\n> 1、split 讲字符分割成数组显示\n      \"a,s,d\".split(\",\") -> [\"a\",\"s\",\"d\"]\n> 2、concat 合并字符串火数组\n     \"1\".concat(\"sdf\",\"555\")-> \"1sdf555\"\n      [\"1\"].concat(\"sdf\",\"555\") ->[\"1\", \"sdf\", \"555\"]\n> 3、toLocaleUpperCase同toUpperCase 小写转换成大写\n     \"asaddas\".toLocaleUpperCase()==\"asaddas\".toUpperCase() \"ASADDAS\"\n> 4、toLocaleLowerCase同toLowerCase 大写转换成小写\n     \"ASADDAS\".toLocaleLowerCase()==\"asaddas\".toLowerCase() \"asaddas\"\n> 5、charAt 从字符串中取出单个字符\n     \"asde\".charAt(2)-> d\n> 6、indexOf(\"xx\",[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".indexOf(\"yuyafei\") ->5\n> 7、lastIndexOf(\"xx\",[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,\n     \"woshiyuyafei\".lastIndexOf(\"yu\",11) ->5\n> 8、match(\"xxx\",'regexp') 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,\n     \"hello world\".match(\"hello\") -> [\"hello\"]\n     \"he2llo1wo3rld\".match(/\\d+/g) -> [\"2\", \"1\", \"3\"]\n> 9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串\n     \"hello aaaa\".slice(1,6) -> \"ello \"\n    \"hello aaaa\".slice(-8,-2) -> \"hello aaaa\".slice(2,8) -> \"llo aa\"\n> 10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串\n     \"hello world\".substr(1,4) -> \"ello\"\n     \"hello world\".substr(-8,4)-> \"hello world\".substr(3,4)  -> \"lo w\"\n> 11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)\n     \"hello\".substring(1,3) -> \"el\"\n\n<!--more-->\n##Number对象的各种属性与方法\n\n方法：\n\n> 1、toString([几进制显示数字]) 把数字转换成字符串\n      123.toString() -> 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；\n    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；\n    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；\n       var num = 111; num.toString();  -> \"111\" 或 (123).toString()\n       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 \"[object Object]\"\n> 2、toFixed() 把数字四舍五入为指定小数位数的数字\n      var num = 1223; num.toFixed(2); -> \"1223.00\"\n> 3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法\n      var num =10000; num.toPrecision(4) -> \"1.000e+4\"\n\n\n##Boolean对象的各种属性与方法\n\n方法：\n\n> 1、toSource() 返回表示对象源代码的字符串\n     function employee(name,job,born)\n     {\n       this.name=name;\n       this.job=job;\n       this.born=born;\n    }\n     var bill=new employee(\"Bill Gates\",\"Engineer\",1985);\n     bill.toSource();  ->({name:\"Bill Gates\", job:\"Engineer\", born:1985})\n> 2、toString() 同number与String\n> 3、valueOf() 返回 Boolean 对象的原始值\n      var boo = new Boolean(false)\n      document.write(boo.valueOf())  ->false\n\n##Array对象的各种属性与方法\n属性：\n> 1、length 返回数组的长度\n      [\"1\",\"2\"].length  -> 2\n方法：\n> 1、concat() 合并数组\n     [\"1\",\"2\"].concat(\"123\",[2]) -> [\"1\", \"2\", \"123\", 2]\n> 2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。\n     [\"1\",\"2\"].join(\"|\")  -> \"1|2\"\n> 3、pop() 删除数组最后一个元素并返回杯删除的元素\n     [\"s\",\"e\"].pop()  -> \"e\"\n> 4、push() 往数组中添加一个或更多元素，并返回新的长度。\n     [\"s\",\"e\"].push(\"32\",\"45\") -> 4\n> 5、reverse() 颠倒顺序\n     [2,5,3,4,1].reverse()  -> [1, 4, 3, 5, 2]\n> 6、sort() 排序（但对数字排序不准确）\n     [2,5,3,4,21].sort() -> [2, 21, 3, 4, 5]\n> 7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。\n     [2,5,3,4,21].shift()  -> 2\n> 8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组\n    [2,5,3,4,21].slice(1,4) -> [5, 3, 4]\n> 9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。\n     [2,5,3,4,21].splice(1,3,8888) -> [5, 3, 4]\n> 10、toString() 把数组转换成字符串\n     [2,5,3,4,21].toString() -> \"2,5,3,4,21\"\n> 11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度\n     [2,5,3,4,21].unshift(1) -> 6\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"collection","published":1,"updated":"2020-02-26T10:28:02.913Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0yv0003000mbwky6qib","content":"<h2 id=\"如有转载，请注明出处。\"><a href=\"#如有转载，请注明出处。\" class=\"headerlink\" title=\"如有转载，请注明出处。\"></a><font size=1><strong>如有转载，请注明出处。</strong></font></h2><p><strong>String对象的各种属性与方法</strong></p>\n<p>属性：</p>\n<blockquote>\n<p> i、length 字符串长度<br>   “aaa”.length -&gt; 3<br> ii、prototype允许您向对象添加属性和方法<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：</span><br><span class=\"line\">   String.prototype.spacify=function(str)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span>(str.split(<span class=\"string\">\"\"</span>).join(<span class=\"string\">\" \"</span>))</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   \"asasda\".spacify(\"asss\") -&gt; \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格</span><br></pre></td></tr></table></figure><br>方法：</p>\n</blockquote>\n<blockquote>\n<p>1、split 讲字符分割成数组显示<br>      “a,s,d”.split(“,”) -&gt; [“a”,”s”,”d”]<br>2、concat 合并字符串火数组<br>     “1”.concat(“sdf”,”555”)-&gt; “1sdf555”<br>      [“1”].concat(“sdf”,”555”) -&gt;[“1”, “sdf”, “555”]<br>3、toLocaleUpperCase同toUpperCase 小写转换成大写<br>     “asaddas”.toLocaleUpperCase()==”asaddas”.toUpperCase() “ASADDAS”<br>4、toLocaleLowerCase同toLowerCase 大写转换成小写<br>     “ASADDAS”.toLocaleLowerCase()==”asaddas”.toLowerCase() “asaddas”<br>5、charAt 从字符串中取出单个字符<br>     “asde”.charAt(2)-&gt; d<br>6、indexOf(“xx”,[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.indexOf(“yuyafei”) -&gt;5<br>7、lastIndexOf(“xx”,[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.lastIndexOf(“yu”,11) -&gt;5<br>8、match(“xxx”,’regexp’) 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,<br>     “hello world”.match(“hello”) -&gt; [“hello”]<br>     “he2llo1wo3rld”.match(/\\d+/g) -&gt; [“2”, “1”, “3”]<br>9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串<br>     “hello aaaa”.slice(1,6) -&gt; “ello “<br>    “hello aaaa”.slice(-8,-2) -&gt; “hello aaaa”.slice(2,8) -&gt; “llo aa”<br>10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串<br>     “hello world”.substr(1,4) -&gt; “ello”<br>     “hello world”.substr(-8,4)-&gt; “hello world”.substr(3,4)  -&gt; “lo w”<br>11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)<br>     “hello”.substring(1,3) -&gt; “el”</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>##Number对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toString([几进制显示数字]) 把数字转换成字符串<br>      123.toString() -&gt; 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；<br>    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；<br>    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；<br>       var num = 111; num.toString();  -&gt; “111” 或 (123).toString()<br>       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 “[object Object]”<br>2、toFixed() 把数字四舍五入为指定小数位数的数字<br>      var num = 1223; num.toFixed(2); -&gt; “1223.00”<br>3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法<br>      var num =10000; num.toPrecision(4) -&gt; “1.000e+4”</p>\n</blockquote>\n<p>##Boolean对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toSource() 返回表示对象源代码的字符串<br>     function employee(name,job,born)<br>     {<br>       this.name=name;<br>       this.job=job;<br>       this.born=born;<br>    }<br>     var bill=new employee(“Bill Gates”,”Engineer”,1985);<br>     bill.toSource();  -&gt;({name:”Bill Gates”, job:”Engineer”, born:1985})<br>2、toString() 同number与String<br>3、valueOf() 返回 Boolean 对象的原始值<br>      var boo = new Boolean(false)<br>      document.write(boo.valueOf())  -&gt;false</p>\n</blockquote>\n<p>##Array对象的各种属性与方法<br>属性：</p>\n<blockquote>\n<p>1、length 返回数组的长度<br>      [“1”,”2”].length  -&gt; 2<br>方法：<br>1、concat() 合并数组<br>     [“1”,”2”].concat(“123”,[2]) -&gt; [“1”, “2”, “123”, 2]<br>2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。<br>     [“1”,”2”].join(“|”)  -&gt; “1|2”<br>3、pop() 删除数组最后一个元素并返回杯删除的元素<br>     [“s”,”e”].pop()  -&gt; “e”<br>4、push() 往数组中添加一个或更多元素，并返回新的长度。<br>     [“s”,”e”].push(“32”,”45”) -&gt; 4<br>5、reverse() 颠倒顺序<br>     [2,5,3,4,1].reverse()  -&gt; [1, 4, 3, 5, 2]<br>6、sort() 排序（但对数字排序不准确）<br>     [2,5,3,4,21].sort() -&gt; [2, 21, 3, 4, 5]<br>7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。<br>     [2,5,3,4,21].shift()  -&gt; 2<br>8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组<br>    [2,5,3,4,21].slice(1,4) -&gt; [5, 3, 4]<br>9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。<br>     [2,5,3,4,21].splice(1,3,8888) -&gt; [5, 3, 4]<br>10、toString() 把数组转换成字符串<br>     [2,5,3,4,21].toString() -&gt; “2,5,3,4,21”<br>11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度<br>     [2,5,3,4,21].unshift(1) -&gt; 6</p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"如有转载，请注明出处。\"><a href=\"#如有转载，请注明出处。\" class=\"headerlink\" title=\"如有转载，请注明出处。\"></a><font size=1><strong>如有转载，请注明出处。</strong></font></h2><p><strong>String对象的各种属性与方法</strong></p>\n<p>属性：</p>\n<blockquote>\n<p> i、length 字符串长度<br>   “aaa”.length -&gt; 3<br> ii、prototype允许您向对象添加属性和方法<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：</span><br><span class=\"line\">   String.prototype.spacify=function(str)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span>(str.split(<span class=\"string\">\"\"</span>).join(<span class=\"string\">\" \"</span>))</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   \"asasda\".spacify(\"asss\") -&gt; \"a s s s\" 新建的String对象的方法,用于往字符串中插入空格</span><br></pre></td></tr></table></figure><br>方法：</p>\n</blockquote>\n<blockquote>\n<p>1、split 讲字符分割成数组显示<br>      “a,s,d”.split(“,”) -&gt; [“a”,”s”,”d”]<br>2、concat 合并字符串火数组<br>     “1”.concat(“sdf”,”555”)-&gt; “1sdf555”<br>      [“1”].concat(“sdf”,”555”) -&gt;[“1”, “sdf”, “555”]<br>3、toLocaleUpperCase同toUpperCase 小写转换成大写<br>     “asaddas”.toLocaleUpperCase()==”asaddas”.toUpperCase() “ASADDAS”<br>4、toLocaleLowerCase同toLowerCase 大写转换成小写<br>     “ASADDAS”.toLocaleLowerCase()==”asaddas”.toLowerCase() “asaddas”<br>5、charAt 从字符串中取出单个字符<br>     “asde”.charAt(2)-&gt; d<br>6、indexOf(“xx”,[从几开始检索]) 从字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.indexOf(“yuyafei”) -&gt;5<br>7、lastIndexOf(“xx”,[从几开始检索]) 从最后往字符串中检索字符是否存在,不存在返回-1,<br>     “woshiyuyafei”.lastIndexOf(“yu”,11) -&gt;5<br>8、match(“xxx”,’regexp’) 检索字符串中指定值返回指定值，或找到一个或多个正则表达式的匹配,<br>     “hello world”.match(“hello”) -&gt; [“hello”]<br>     “he2llo1wo3rld”.match(/\\d+/g) -&gt; [“2”, “1”, “3”]<br>9、slice(start,end) 提取字符串的某个部分，并以新的字符串返回被提取的部分(不包括结束),不申明结束则默认为字符串长度-1.若为负数，则变为长度+负数的值取 返回新的字符串<br>     “hello aaaa”.slice(1,6) -&gt; “ello “<br>    “hello aaaa”.slice(-8,-2) -&gt; “hello aaaa”.slice(2,8) -&gt; “llo aa”<br>10、substr(start,length) 从字符串中抽取从 start 下标开始的指定数目的字符,若为负数：-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。  返回新字符串<br>     “hello world”.substr(1,4) -&gt; “ello”<br>     “hello world”.substr(-8,4)-&gt; “hello world”.substr(3,4)  -&gt; “lo w”<br>11、substring(start,end) 提取字符串中介于两个指定下标之间的字符(不包括结束不接受负数)<br>     “hello”.substring(1,3) -&gt; “el”</p>\n</blockquote>","more":"<p>##Number对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toString([几进制显示数字]) 把数字转换成字符串<br>      123.toString() -&gt; 报错：这是因为javascript引擎在解释代码时对于“1.toString()”认为“.”是浮点符号，但因小数点后面的字符是非法的，所以报语法错误；<br>    而后面的“1..toString()和1.2.toStirng()”写法，javascript引擎认为第一个“.”小数点，的二个为属性访问语法，所以都能正确解释执行；<br>    对于“(1).toStirng()”的写法，用“()”排除了“.”被视为小数点的语法解释，所以这种写法能够被解释执行；<br>       var num = 111; num.toString();  -&gt; “111” 或 (123).toString()<br>       {}.toString() 报错 表達式語句不能以 { 或 function 開頭 改成({}).toString() 输出 “[object Object]”<br>2、toFixed() 把数字四舍五入为指定小数位数的数字<br>      var num = 1223; num.toFixed(2); -&gt; “1223.00”<br>3、toPrecision( 1 ~ 21 之间的整数) 在对象的值超出指定位数时将其转换为指数计数法<br>      var num =10000; num.toPrecision(4) -&gt; “1.000e+4”</p>\n</blockquote>\n<p>##Boolean对象的各种属性与方法</p>\n<p>方法：</p>\n<blockquote>\n<p>1、toSource() 返回表示对象源代码的字符串<br>     function employee(name,job,born)<br>     {<br>       this.name=name;<br>       this.job=job;<br>       this.born=born;<br>    }<br>     var bill=new employee(“Bill Gates”,”Engineer”,1985);<br>     bill.toSource();  -&gt;({name:”Bill Gates”, job:”Engineer”, born:1985})<br>2、toString() 同number与String<br>3、valueOf() 返回 Boolean 对象的原始值<br>      var boo = new Boolean(false)<br>      document.write(boo.valueOf())  -&gt;false</p>\n</blockquote>\n<p>##Array对象的各种属性与方法<br>属性：</p>\n<blockquote>\n<p>1、length 返回数组的长度<br>      [“1”,”2”].length  -&gt; 2<br>方法：<br>1、concat() 合并数组<br>     [“1”,”2”].concat(“123”,[2]) -&gt; [“1”, “2”, “123”, 2]<br>2、join([分割的符号]) 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。<br>     [“1”,”2”].join(“|”)  -&gt; “1|2”<br>3、pop() 删除数组最后一个元素并返回杯删除的元素<br>     [“s”,”e”].pop()  -&gt; “e”<br>4、push() 往数组中添加一个或更多元素，并返回新的长度。<br>     [“s”,”e”].push(“32”,”45”) -&gt; 4<br>5、reverse() 颠倒顺序<br>     [2,5,3,4,1].reverse()  -&gt; [1, 4, 3, 5, 2]<br>6、sort() 排序（但对数字排序不准确）<br>     [2,5,3,4,21].sort() -&gt; [2, 21, 3, 4, 5]<br>7、shift() 把数组的第一个元素从其中删除，并返回第一个元素的值。<br>     [2,5,3,4,21].shift()  -&gt; 2<br>8、slice(start,end) 从已有的数组中返回选定的元素,返回新数组<br>    [2,5,3,4,21].slice(1,4) -&gt; [5, 3, 4]<br>9、splice(规定添加/删除项目的位置,要删除的项目数量,向数组添加的新项目) 向/从数组中添加/删除项目，返回被删除的项目。<br>     [2,5,3,4,21].splice(1,3,8888) -&gt; [5, 3, 4]<br>10、toString() 把数组转换成字符串<br>     [2,5,3,4,21].toString() -&gt; “2,5,3,4,21”<br>11、unshift() 向数组的开头添加一个或更多元素，并返回新的长度<br>     [2,5,3,4,21].unshift(1) -&gt; 6</p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"进入差评后的小笔记","date":"2018-02-04T16:00:00.000Z","_content":"啦啦啦啦啦啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## Intersting\n## 1、Vue.filter 过滤\n```javascript\nfilterShoppingList: function () {\n    var key = this.key;\n    var shoppingList = this.shoppingList;\n    return shoppingList.filter(function (item) {\n        return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n    });;\n}\n```\n\n## 2、数组对象去重（根据时间一样去重，把title合并）\n```javascript\nvar arr = [\n  {\n    time:'211521',\n    title:[\n      '111111111111111'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我有一只小毛驴',\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我重来也不骑'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '有一天我心血来潮'\n    ]\n  },\n  {\n    time:'23werwef3',\n    title:[\n      '111111111111111'\n    ]\n  }\n];\nvar result = [], hash = {};\nfor (var i = 0; i<arr.length; i++) { //去重\n  var elem = arr[i].time;\n  if (!hash[elem]) {\n      result.push(arr[i]);\n      hash[elem] = true;\n  }else{\n    for (var j = 0; j<result.length; j++) { //填数据\n      if(result[j].time == elem){\n        console.log(arr[i].title)\n        result[j].title.push(arr[i].title[0])\n      }\n    }\n  }\n}\nconsole.log(result)\n```\n<!--more-->\n## 3、页面判断是手机就打开手机网址\n```javascript\n  let ua = window.navigator.userAgent.toLocaleLowerCase()\n  let murl =\"//m.jd.com\",\n  let reg =/iphone|android|symbianos|windows\\sphone/g\n  if (reg .test(ua )) {\n      window.location.href = murl\n  }\n```\n\n## 4、 返回对象的函数能够用于链式操作\n```javascript\nfunction Person(name) {\n  this.name = name;\n  this.sayName = function() {\n    console.log(\"Hello my name is: \", this.name);\n    return this;\n  };\n  this.changeName = function(name) {\n    this.name = name;\n    return this;\n  };\n}\nvar person = new Person(\"John\");\nperson.sayName().changeName(\"Timmy\").sayName();\n//Hello my name is: John\n//Hello my name is: Timmy\n```\n## 5、微信小程序实现多选样式更改\n```javascript\n// wxml\n<checkbox-group bindchange=\"checkboxChange\">\n  <view class=\"checkbox_selection\">\n   <label wx:for=\"{{allValue}}\" wx:key=\"{{item.value}}\" class=\"checkbox {{item.checked?'is_checked':''}}\">\n    <checkbox value=\"{{item.value}}\" checked=\"{{item.checked}}\" hidden=\"false\" />{{item.name}}\n   </label>\n  </view>\n</checkbox-group>\n// wxss\n.checkbox_selection {\n  padding: 15px 10px;\n  background: #fff;\n}\n.checkbox_selection label {\n  background: #f0f1ec;\n  padding: 6px 7px;\n  font-size: 12px;\n  border-radius: 4px;\n  margin:4rpx;\n}\n\n.checkbox_selection .is_checked {\n  background: lightblue;\n}\n// js\nvar app = getApp();\nPage({\n  data: {\n    allValue: [\n      { name: '人力资源', value: '0', checked: true },\n      { name: '项目资金', value: '1', checked: false },\n      { name: '项目资金', value: '2', checked: false },\n      { name: '项目资金', value: '3', checked: false },\n    ],\n  },\n  checkboxChange: function (e) {\n    var allValue = this.data.allValue;\n    var checkArr = e.detail.value;\n    console.log(checkArr)\n    for (var i = 0; i < allValue.length; i++) {\n      if (checkArr.indexOf(i + \"\") != -1) {\n        allValue[i].checked = true;\n      } else {\n        allValue[i].checked = false;\n      }\n    }\n    this.setData({\n      allValue: allValue\n    })\n  }\n})\n```\n\n## 6、微信小程序实现九宫格拖拽\n![img](https://github.com/maimai123/maimai123.github.io/blob/master/img/jgg.gif?raw=true)\n```javascript\n记得把图片换成自己本地的\n// wxml\n<view bindtap=\"box\" class=\"box\" >\n   <image\n     disable-scroll=\"true\"\n     wx:for=\"{{content}}\"\n     bindtouchmove=\"move\"\n     bindtouchstart=\"movestart\"\n     bindtouchend=\"moveend\"\n     data-index=\"{{item.id}}\"\n     data-main=\"{{mainx}}\"\n     class=\"main {{mainx == item.id? 'mainmove':'mainend'}}\"\n     style=\"left:{{start.x}}px; top:{{start.y}}px\"\n     bindtap=\"previewImages\"\n     data-id=\"{{idx}}\"\n     mode=\"widthFix\"\n     src=\"{{item.content}}\"\n       ></image>\n</view>\n// wxss\n.box{width:100%; position: relative}\n.main{\n  width:115px;\n  height:115px;\n  background: #eee;\n  border: 1px solid #ccc;\n  margin:2rpx 4rpx ;\n  box-sizing: border-box;\n  text-align: center;\n  line-height:115px;\n  display: inline-block;\n}\n.mainmove{position: absolute; opacity: 0.7}\n.maind{background: #fff; border:1px dashed #efefef;}\n.mainend{position: static; opacity: 1;}\n// js\nvar app = getApp();\nvar x, y, x1, y1, x2, y2, index, currindex, n, yy;\nvar arr1 = [\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png', id: 1 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 2 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png', id: 3 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 4 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg', id: 5 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 6 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png', id: 7 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 8 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png', id: 9 }];\nPage({\n  data: {\n    motto: 'Hello World',\n    userInfo: {},\n    mailen: 0,\n    content: [\n{ content:'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png', id: 1 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 2 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png', id: 3 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 4 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg', id: 5 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 6 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png', id: 7 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 8 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png', id: 9 },\n    ],\n    start: { x: 0, y: 0 },\n    tempFilePaths: [],\n    previewImg:[]\n  },\n  movestart: function (e) {\n    currindex = e.target.dataset.index;\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n    x1 = e.currentTarget.offsetLeft;\n    y1 = e.currentTarget.offsetTop;\n  },\n  move: function (e) {\n    yy = e.currentTarget.offsetTop;\n    x2 = e.touches[0].clientX - x + x1;\n    y2 = e.touches[0].clientY - y + y1;\n    this.setData({\n      mainx: currindex,\n      opacity: 0.7,\n      start: { x: x2, y: y2 }\n    })\n    // console.log(x2,y2)\n  },\n  moveend: function () {\n    var arr = [];\n    for (var i = 0; i < this.data.content.length; i++) {\n      arr.push(this.data.content[i]);\n    }\n    var nx = this.data.content.length;\n    if (x2 != 0 || y2 != 0){\n      var xz = 0, yz=0 , n=0;\n      for (var k = 1; k < nx / 3 +1; k++) {\n        if (x2 > (115 * k - 58)) {\n          xz = k ;\n          console.log(xz)\n        }\n        if (y2 > (115 * k - 58)) {\n          yz = k;\n          console.log(xz)\n        }\n      }\n      if (x2 > (115 * 3 + 10)) {\n        xz = 3 ;\n      }\n      if (y2 > (115 * 3 + 10) ) {\n        yz = 3;\n      }\n      n = xz + (3*yz);\n      arr.splice((currindex - 1), 1);\n      arr.splice(n, 0, arr1[currindex - 1]);\n      arr1 = [];\n      for (var m = 0; m < this.data.content.length; m++) {\n        arr[m].id = m + 1;\n        arr1.push(arr[m]);\n      }\n      this.setData({\n        mainx: \"\",\n        content: arr,\n        opacity: 1\n      })\n    }\n  },\n  upload: function () {\n    var self = this;\n    var arr = [];\n    wx.chooseImage({\n      count: 9, // 默认9\n      sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有\n      sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有\n      success: function (res) {\n        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\n        var tempFilePaths = res.tempFilePaths;\n        for (var i = 0; i < tempFilePaths.length;i++){\n          arr.push({\n            content: tempFilePaths[i],\n            id:i+1\n          })\n        }\n        self.setData({\n          tempFilePaths: self.data.tempFilePaths.concat(arr),\n          previewImg: self.data.previewImg.concat(tempFilePaths)\n        })\n      }\n    })\n  },\n  previewImages: function (e) {\n    var self = this;\n    var index = e.target.dataset.id;\n    console.log(self.data.tempFilePaths)\n    wx.previewImage({\n      current: self.data.previewImg[index-1], // 当前显示图片的http链接\n      urls: self.data.previewImg // 需要预览的图片http链接列表\n    })\n  },\n  delete: function (e) {\n    var index = e.currentTarget.dataset.index;\n    var images = this.data.tempFilePaths;\n    images.splice(index-1, 1);\n    this.setData({\n      tempFilePaths: images\n    });\n  }\n})\n```\n\n## 7、有趣的css小动画\n![img](https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177)\n```javascript\n<div class=\"triangle2rect\">\n    <div class=\"a\"></div>\n    <div class=\"b\"></div>\n    <div class=\"c\"></div>\n    <div class=\"d\"></div>\n</div>\n.triangle2rect {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: aniContainer 2s infinite alternate;\n}\n.triangle2rect div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.a {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    animation: a 2s infinite alternate;\n}\n.b {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    animation: b 2s infinite alternate;\n}\n.c {\n    background: deeppink;\n    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    animation: c 2s infinite alternate;\n}\n.d {\n    background: deeppink;\n    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    animation: d 2s infinite alternate;\n}\n@keyframes a {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);\n    }\n}\n@keyframes b {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);\n    }\n}\n@keyframes c {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);\n    }\n}\n@keyframes d {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);\n    }\n}\n```\n\n## 7、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/chaping.md","raw":"---\ntitle: 进入差评后的小笔记\ndate: 2018-02-05\ntags: js\n---\n啦啦啦啦啦啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## Intersting\n## 1、Vue.filter 过滤\n```javascript\nfilterShoppingList: function () {\n    var key = this.key;\n    var shoppingList = this.shoppingList;\n    return shoppingList.filter(function (item) {\n        return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n    });;\n}\n```\n\n## 2、数组对象去重（根据时间一样去重，把title合并）\n```javascript\nvar arr = [\n  {\n    time:'211521',\n    title:[\n      '111111111111111'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我有一只小毛驴',\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '我重来也不骑'\n    ]\n  },\n  {\n    time:'23333333333',\n    title:[\n      '有一天我心血来潮'\n    ]\n  },\n  {\n    time:'23werwef3',\n    title:[\n      '111111111111111'\n    ]\n  }\n];\nvar result = [], hash = {};\nfor (var i = 0; i<arr.length; i++) { //去重\n  var elem = arr[i].time;\n  if (!hash[elem]) {\n      result.push(arr[i]);\n      hash[elem] = true;\n  }else{\n    for (var j = 0; j<result.length; j++) { //填数据\n      if(result[j].time == elem){\n        console.log(arr[i].title)\n        result[j].title.push(arr[i].title[0])\n      }\n    }\n  }\n}\nconsole.log(result)\n```\n<!--more-->\n## 3、页面判断是手机就打开手机网址\n```javascript\n  let ua = window.navigator.userAgent.toLocaleLowerCase()\n  let murl =\"//m.jd.com\",\n  let reg =/iphone|android|symbianos|windows\\sphone/g\n  if (reg .test(ua )) {\n      window.location.href = murl\n  }\n```\n\n## 4、 返回对象的函数能够用于链式操作\n```javascript\nfunction Person(name) {\n  this.name = name;\n  this.sayName = function() {\n    console.log(\"Hello my name is: \", this.name);\n    return this;\n  };\n  this.changeName = function(name) {\n    this.name = name;\n    return this;\n  };\n}\nvar person = new Person(\"John\");\nperson.sayName().changeName(\"Timmy\").sayName();\n//Hello my name is: John\n//Hello my name is: Timmy\n```\n## 5、微信小程序实现多选样式更改\n```javascript\n// wxml\n<checkbox-group bindchange=\"checkboxChange\">\n  <view class=\"checkbox_selection\">\n   <label wx:for=\"{{allValue}}\" wx:key=\"{{item.value}}\" class=\"checkbox {{item.checked?'is_checked':''}}\">\n    <checkbox value=\"{{item.value}}\" checked=\"{{item.checked}}\" hidden=\"false\" />{{item.name}}\n   </label>\n  </view>\n</checkbox-group>\n// wxss\n.checkbox_selection {\n  padding: 15px 10px;\n  background: #fff;\n}\n.checkbox_selection label {\n  background: #f0f1ec;\n  padding: 6px 7px;\n  font-size: 12px;\n  border-radius: 4px;\n  margin:4rpx;\n}\n\n.checkbox_selection .is_checked {\n  background: lightblue;\n}\n// js\nvar app = getApp();\nPage({\n  data: {\n    allValue: [\n      { name: '人力资源', value: '0', checked: true },\n      { name: '项目资金', value: '1', checked: false },\n      { name: '项目资金', value: '2', checked: false },\n      { name: '项目资金', value: '3', checked: false },\n    ],\n  },\n  checkboxChange: function (e) {\n    var allValue = this.data.allValue;\n    var checkArr = e.detail.value;\n    console.log(checkArr)\n    for (var i = 0; i < allValue.length; i++) {\n      if (checkArr.indexOf(i + \"\") != -1) {\n        allValue[i].checked = true;\n      } else {\n        allValue[i].checked = false;\n      }\n    }\n    this.setData({\n      allValue: allValue\n    })\n  }\n})\n```\n\n## 6、微信小程序实现九宫格拖拽\n![img](https://github.com/maimai123/maimai123.github.io/blob/master/img/jgg.gif?raw=true)\n```javascript\n记得把图片换成自己本地的\n// wxml\n<view bindtap=\"box\" class=\"box\" >\n   <image\n     disable-scroll=\"true\"\n     wx:for=\"{{content}}\"\n     bindtouchmove=\"move\"\n     bindtouchstart=\"movestart\"\n     bindtouchend=\"moveend\"\n     data-index=\"{{item.id}}\"\n     data-main=\"{{mainx}}\"\n     class=\"main {{mainx == item.id? 'mainmove':'mainend'}}\"\n     style=\"left:{{start.x}}px; top:{{start.y}}px\"\n     bindtap=\"previewImages\"\n     data-id=\"{{idx}}\"\n     mode=\"widthFix\"\n     src=\"{{item.content}}\"\n       ></image>\n</view>\n// wxss\n.box{width:100%; position: relative}\n.main{\n  width:115px;\n  height:115px;\n  background: #eee;\n  border: 1px solid #ccc;\n  margin:2rpx 4rpx ;\n  box-sizing: border-box;\n  text-align: center;\n  line-height:115px;\n  display: inline-block;\n}\n.mainmove{position: absolute; opacity: 0.7}\n.maind{background: #fff; border:1px dashed #efefef;}\n.mainend{position: static; opacity: 1;}\n// js\nvar app = getApp();\nvar x, y, x1, y1, x2, y2, index, currindex, n, yy;\nvar arr1 = [\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png', id: 1 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 2 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png', id: 3 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 4 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg', id: 5 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 6 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png', id: 7 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 8 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png', id: 9 }];\nPage({\n  data: {\n    motto: 'Hello World',\n    userInfo: {},\n    mailen: 0,\n    content: [\n{ content:'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png', id: 1 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 2 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png', id: 3 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 4 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg', id: 5 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 6 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png', id: 7 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png', id: 8 },\n{ content: 'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png', id: 9 },\n    ],\n    start: { x: 0, y: 0 },\n    tempFilePaths: [],\n    previewImg:[]\n  },\n  movestart: function (e) {\n    currindex = e.target.dataset.index;\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n    x1 = e.currentTarget.offsetLeft;\n    y1 = e.currentTarget.offsetTop;\n  },\n  move: function (e) {\n    yy = e.currentTarget.offsetTop;\n    x2 = e.touches[0].clientX - x + x1;\n    y2 = e.touches[0].clientY - y + y1;\n    this.setData({\n      mainx: currindex,\n      opacity: 0.7,\n      start: { x: x2, y: y2 }\n    })\n    // console.log(x2,y2)\n  },\n  moveend: function () {\n    var arr = [];\n    for (var i = 0; i < this.data.content.length; i++) {\n      arr.push(this.data.content[i]);\n    }\n    var nx = this.data.content.length;\n    if (x2 != 0 || y2 != 0){\n      var xz = 0, yz=0 , n=0;\n      for (var k = 1; k < nx / 3 +1; k++) {\n        if (x2 > (115 * k - 58)) {\n          xz = k ;\n          console.log(xz)\n        }\n        if (y2 > (115 * k - 58)) {\n          yz = k;\n          console.log(xz)\n        }\n      }\n      if (x2 > (115 * 3 + 10)) {\n        xz = 3 ;\n      }\n      if (y2 > (115 * 3 + 10) ) {\n        yz = 3;\n      }\n      n = xz + (3*yz);\n      arr.splice((currindex - 1), 1);\n      arr.splice(n, 0, arr1[currindex - 1]);\n      arr1 = [];\n      for (var m = 0; m < this.data.content.length; m++) {\n        arr[m].id = m + 1;\n        arr1.push(arr[m]);\n      }\n      this.setData({\n        mainx: \"\",\n        content: arr,\n        opacity: 1\n      })\n    }\n  },\n  upload: function () {\n    var self = this;\n    var arr = [];\n    wx.chooseImage({\n      count: 9, // 默认9\n      sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有\n      sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有\n      success: function (res) {\n        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\n        var tempFilePaths = res.tempFilePaths;\n        for (var i = 0; i < tempFilePaths.length;i++){\n          arr.push({\n            content: tempFilePaths[i],\n            id:i+1\n          })\n        }\n        self.setData({\n          tempFilePaths: self.data.tempFilePaths.concat(arr),\n          previewImg: self.data.previewImg.concat(tempFilePaths)\n        })\n      }\n    })\n  },\n  previewImages: function (e) {\n    var self = this;\n    var index = e.target.dataset.id;\n    console.log(self.data.tempFilePaths)\n    wx.previewImage({\n      current: self.data.previewImg[index-1], // 当前显示图片的http链接\n      urls: self.data.previewImg // 需要预览的图片http链接列表\n    })\n  },\n  delete: function (e) {\n    var index = e.currentTarget.dataset.index;\n    var images = this.data.tempFilePaths;\n    images.splice(index-1, 1);\n    this.setData({\n      tempFilePaths: images\n    });\n  }\n})\n```\n\n## 7、有趣的css小动画\n![img](https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177)\n```javascript\n<div class=\"triangle2rect\">\n    <div class=\"a\"></div>\n    <div class=\"b\"></div>\n    <div class=\"c\"></div>\n    <div class=\"d\"></div>\n</div>\n.triangle2rect {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: aniContainer 2s infinite alternate;\n}\n.triangle2rect div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.a {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    animation: a 2s infinite alternate;\n}\n.b {\n    background: deeppink;\n    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    animation: b 2s infinite alternate;\n}\n.c {\n    background: deeppink;\n    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    animation: c 2s infinite alternate;\n}\n.d {\n    background: deeppink;\n    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    animation: d 2s infinite alternate;\n}\n@keyframes a {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);\n    }\n}\n@keyframes b {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);\n    }\n}\n@keyframes c {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);\n    }\n}\n@keyframes d {\n    0%, 10% {\n        background: white;\n        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);\n    }\n    90%, 100% {\n        background: #000;\n        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);\n    }\n}\n```\n\n## 7、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"chaping","published":1,"updated":"2020-02-26T10:27:59.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0yw0004000m16fsas40","content":"<p>啦啦啦啦啦啦~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Intersting\"><a href=\"#Intersting\" class=\"headerlink\" title=\"Intersting\"></a>Intersting</h2><h2 id=\"1、Vue-filter-过滤\"><a href=\"#1、Vue-filter-过滤\" class=\"headerlink\" title=\"1、Vue.filter 过滤\"></a>1、Vue.filter 过滤</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filterShoppingList: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> key = <span class=\"keyword\">this</span>.key;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> shoppingList = <span class=\"keyword\">this</span>.shoppingList;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> shoppingList.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item.toLowerCase().indexOf(key.toLowerCase()) != <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125;);;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、数组对象去重（根据时间一样去重，把title合并）\"><a href=\"#2、数组对象去重（根据时间一样去重，把title合并）\" class=\"headerlink\" title=\"2、数组对象去重（根据时间一样去重，把title合并）\"></a>2、数组对象去重（根据时间一样去重，把title合并）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'211521'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'111111111111111'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23333333333'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'我有一只小毛驴'</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23333333333'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'我重来也不骑'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23333333333'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'有一天我心血来潮'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23werwef3'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'111111111111111'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = [], hash = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;arr.length; i++) &#123; <span class=\"comment\">//去重</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> elem = arr[i].time;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!hash[elem]) &#123;</span><br><span class=\"line\">      result.push(arr[i]);</span><br><span class=\"line\">      hash[elem] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j&lt;result.length; j++) &#123; <span class=\"comment\">//填数据</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(result[j].time == elem)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(arr[i].title)</span><br><span class=\"line\">        result[j].title.push(arr[i].title[<span class=\"number\">0</span>])</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result)</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"3、页面判断是手机就打开手机网址\"><a href=\"#3、页面判断是手机就打开手机网址\" class=\"headerlink\" title=\"3、页面判断是手机就打开手机网址\"></a>3、页面判断是手机就打开手机网址</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> ua = <span class=\"built_in\">window</span>.navigator.userAgent.toLocaleLowerCase()</span><br><span class=\"line\"><span class=\"keyword\">let</span> murl =<span class=\"string\">\"//m.jd.com\"</span>,</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg =<span class=\"regexp\">/iphone|android|symbianos|windows\\sphone/g</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (reg .test(ua )) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.location.href = murl</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4、-返回对象的函数能够用于链式操作\"><a href=\"#4、-返回对象的函数能够用于链式操作\" class=\"headerlink\" title=\"4、 返回对象的函数能够用于链式操作\"></a>4、 返回对象的函数能够用于链式操作</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Hello my name is: \"</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.changeName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"John\"</span>);</span><br><span class=\"line\">person.sayName().changeName(<span class=\"string\">\"Timmy\"</span>).sayName();</span><br><span class=\"line\"><span class=\"comment\">//Hello my name is: John</span></span><br><span class=\"line\"><span class=\"comment\">//Hello my name is: Timmy</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5、微信小程序实现多选样式更改\"><a href=\"#5、微信小程序实现多选样式更改\" class=\"headerlink\" title=\"5、微信小程序实现多选样式更改\"></a>5、微信小程序实现多选样式更改</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// wxml</span></span><br><span class=\"line\">&lt;checkbox-group bindchange=<span class=\"string\">\"checkboxChange\"</span>&gt;</span><br><span class=\"line\">  &lt;view <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"checkbox_selection\"</span>&gt;</span><br><span class=\"line\">   &lt;label wx:<span class=\"keyword\">for</span>=<span class=\"string\">\"&#123;&#123;allValue&#125;&#125;\"</span> wx:key=<span class=\"string\">\"&#123;&#123;item.value&#125;&#125;\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"checkbox &#123;&#123;item.checked?'is_checked':''&#125;&#125;\"</span>&gt;</span><br><span class=\"line\">    &lt;checkbox value=<span class=\"string\">\"&#123;&#123;item.value&#125;&#125;\"</span> checked=<span class=\"string\">\"&#123;&#123;item.checked&#125;&#125;\"</span> hidden=<span class=\"string\">\"false\"</span> /&gt;&#123;&#123;item.name&#125;&#125;</span><br><span class=\"line\">   &lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>view&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/checkbox-group&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ wxss</span></span><br><span class=\"line\"><span class=\"regexp\">.checkbox_selection &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  padding: 15px 10px;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: #fff;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.checkbox_selection label &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: #f0f1ec;</span></span><br><span class=\"line\"><span class=\"regexp\">  padding: 6px 7px;</span></span><br><span class=\"line\"><span class=\"regexp\">  font-size: 12px;</span></span><br><span class=\"line\"><span class=\"regexp\">  border-radius: 4px;</span></span><br><span class=\"line\"><span class=\"regexp\">  margin:4rpx;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">.checkbox_selection .is_checked &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: lightblue;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ js</span></span><br><span class=\"line\"><span class=\"regexp\">var app = getApp();</span></span><br><span class=\"line\"><span class=\"regexp\">Page(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  data: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    allValue: [</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '人力资源', value: '0', checked: true &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '项目资金', value: '1', checked: false &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '项目资金', value: '2', checked: false &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '项目资金', value: '3', checked: false &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    ],</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  checkboxChange: function (e) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    var allValue = this.data.allValue;</span></span><br><span class=\"line\"><span class=\"regexp\">    var checkArr = e.detail.value;</span></span><br><span class=\"line\"><span class=\"regexp\">    console.log(checkArr)</span></span><br><span class=\"line\"><span class=\"regexp\">    for (var i = 0; i &lt; allValue.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      if (checkArr.indexOf(i + \"\") != -1) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        allValue[i].checked = true;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        allValue[i].checked = false;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      allValue: allValue</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"6、微信小程序实现九宫格拖拽\"><a href=\"#6、微信小程序实现九宫格拖拽\" class=\"headerlink\" title=\"6、微信小程序实现九宫格拖拽\"></a>6、微信小程序实现九宫格拖拽</h2><p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jgg.gif?raw=true\" alt=\"img\"><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记得把图片换成自己本地的</span><br><span class=\"line\"><span class=\"comment\">// wxml</span></span><br><span class=\"line\">&lt;view bindtap=<span class=\"string\">\"box\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"box\"</span> &gt;</span><br><span class=\"line\">   &lt;image</span><br><span class=\"line\">     disable-scroll=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">     wx:<span class=\"keyword\">for</span>=<span class=\"string\">\"&#123;&#123;content&#125;&#125;\"</span></span><br><span class=\"line\">     bindtouchmove=<span class=\"string\">\"move\"</span></span><br><span class=\"line\">     bindtouchstart=<span class=\"string\">\"movestart\"</span></span><br><span class=\"line\">     bindtouchend=<span class=\"string\">\"moveend\"</span></span><br><span class=\"line\">     data-index=<span class=\"string\">\"&#123;&#123;item.id&#125;&#125;\"</span></span><br><span class=\"line\">     data-main=<span class=\"string\">\"&#123;&#123;mainx&#125;&#125;\"</span></span><br><span class=\"line\">     <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"main &#123;&#123;mainx == item.id? 'mainmove':'mainend'&#125;&#125;\"</span></span><br><span class=\"line\">     style=<span class=\"string\">\"left:&#123;&#123;start.x&#125;&#125;px; top:&#123;&#123;start.y&#125;&#125;px\"</span></span><br><span class=\"line\">     bindtap=<span class=\"string\">\"previewImages\"</span></span><br><span class=\"line\">     data-id=<span class=\"string\">\"&#123;&#123;idx&#125;&#125;\"</span></span><br><span class=\"line\">     mode=<span class=\"string\">\"widthFix\"</span></span><br><span class=\"line\">     src=<span class=\"string\">\"&#123;&#123;item.content&#125;&#125;\"</span></span><br><span class=\"line\">       &gt;&lt;<span class=\"regexp\">/image&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>view&gt;</span><br><span class=\"line\"><span class=\"comment\">// wxss</span></span><br><span class=\"line\">.box&#123;<span class=\"attr\">width</span>:<span class=\"number\">100</span>%; position: relative&#125;</span><br><span class=\"line\">.main&#123;</span><br><span class=\"line\">  width:<span class=\"number\">115</span>px;</span><br><span class=\"line\">  height:<span class=\"number\">115</span>px;</span><br><span class=\"line\">  background: #eee;</span><br><span class=\"line\">  border: 1px solid #ccc;</span><br><span class=\"line\">  margin:<span class=\"number\">2</span>rpx <span class=\"number\">4</span>rpx ;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  text-align: center;</span><br><span class=\"line\">  line-height:<span class=\"number\">115</span>px;</span><br><span class=\"line\">  display: inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.mainmove&#123;<span class=\"attr\">position</span>: absolute; opacity: <span class=\"number\">0.7</span>&#125;</span><br><span class=\"line\">.maind&#123;background: #fff; border:1px dashed #efefef;&#125;</span><br><span class=\"line\">.mainend&#123;<span class=\"attr\">position</span>: <span class=\"keyword\">static</span>; opacity: <span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"><span class=\"comment\">// js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = getApp();</span><br><span class=\"line\"><span class=\"keyword\">var</span> x, y, x1, y1, x2, y2, index, currindex, n, yy;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">3</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">4</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg'</span>, <span class=\"attr\">id</span>: <span class=\"number\">5</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">6</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">7</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">8</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">9</span> &#125;];</span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    motto: <span class=\"string\">'Hello World'</span>,</span><br><span class=\"line\">    userInfo: &#123;&#125;,</span><br><span class=\"line\">    mailen: <span class=\"number\">0</span>,</span><br><span class=\"line\">    content: [</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>:<span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">3</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">4</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg'</span>, <span class=\"attr\">id</span>: <span class=\"number\">5</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">6</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">7</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">8</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">9</span> &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    start: &#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">    tempFilePaths: [],</span><br><span class=\"line\">    previewImg:[]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  movestart: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    currindex = e.target.dataset.index;</span><br><span class=\"line\">    x = e.touches[<span class=\"number\">0</span>].clientX;</span><br><span class=\"line\">    y = e.touches[<span class=\"number\">0</span>].clientY;</span><br><span class=\"line\">    x1 = e.currentTarget.offsetLeft;</span><br><span class=\"line\">    y1 = e.currentTarget.offsetTop;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  move: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    yy = e.currentTarget.offsetTop;</span><br><span class=\"line\">    x2 = e.touches[<span class=\"number\">0</span>].clientX - x + x1;</span><br><span class=\"line\">    y2 = e.touches[<span class=\"number\">0</span>].clientY - y + y1;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setData(&#123;</span><br><span class=\"line\">      mainx: currindex,</span><br><span class=\"line\">      opacity: <span class=\"number\">0.7</span>,</span><br><span class=\"line\">      start: &#123; <span class=\"attr\">x</span>: x2, <span class=\"attr\">y</span>: y2 &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// console.log(x2,y2)</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  moveend: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.data.content.length; i++) &#123;</span><br><span class=\"line\">      arr.push(<span class=\"keyword\">this</span>.data.content[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nx = <span class=\"keyword\">this</span>.data.content.length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x2 != <span class=\"number\">0</span> || y2 != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> xz = <span class=\"number\">0</span>, yz=<span class=\"number\">0</span> , n=<span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k = <span class=\"number\">1</span>; k &lt; nx / <span class=\"number\">3</span> +<span class=\"number\">1</span>; k++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x2 &gt; (<span class=\"number\">115</span> * k - <span class=\"number\">58</span>)) &#123;</span><br><span class=\"line\">          xz = k ;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(xz)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y2 &gt; (<span class=\"number\">115</span> * k - <span class=\"number\">58</span>)) &#123;</span><br><span class=\"line\">          yz = k;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(xz)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (x2 &gt; (<span class=\"number\">115</span> * <span class=\"number\">3</span> + <span class=\"number\">10</span>)) &#123;</span><br><span class=\"line\">        xz = <span class=\"number\">3</span> ;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (y2 &gt; (<span class=\"number\">115</span> * <span class=\"number\">3</span> + <span class=\"number\">10</span>) ) &#123;</span><br><span class=\"line\">        yz = <span class=\"number\">3</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      n = xz + (<span class=\"number\">3</span>*yz);</span><br><span class=\"line\">      arr.splice((currindex - <span class=\"number\">1</span>), <span class=\"number\">1</span>);</span><br><span class=\"line\">      arr.splice(n, <span class=\"number\">0</span>, arr1[currindex - <span class=\"number\">1</span>]);</span><br><span class=\"line\">      arr1 = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> m = <span class=\"number\">0</span>; m &lt; <span class=\"keyword\">this</span>.data.content.length; m++) &#123;</span><br><span class=\"line\">        arr[m].id = m + <span class=\"number\">1</span>;</span><br><span class=\"line\">        arr1.push(arr[m]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setData(&#123;</span><br><span class=\"line\">        mainx: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">        content: arr,</span><br><span class=\"line\">        opacity: <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  upload: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">    wx.chooseImage(&#123;</span><br><span class=\"line\">      count: <span class=\"number\">9</span>, <span class=\"comment\">// 默认9</span></span><br><span class=\"line\">      sizeType: [<span class=\"string\">'original'</span>, <span class=\"string\">'compressed'</span>], <span class=\"comment\">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class=\"line\">      sourceType: [<span class=\"string\">'album'</span>, <span class=\"string\">'camera'</span>], <span class=\"comment\">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> tempFilePaths = res.tempFilePaths;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; tempFilePaths.length;i++)&#123;</span><br><span class=\"line\">          arr.push(&#123;</span><br><span class=\"line\">            content: tempFilePaths[i],</span><br><span class=\"line\">            id:i+<span class=\"number\">1</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        self.setData(&#123;</span><br><span class=\"line\">          tempFilePaths: self.data.tempFilePaths.concat(arr),</span><br><span class=\"line\">          previewImg: self.data.previewImg.concat(tempFilePaths)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  previewImages: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> index = e.target.dataset.id;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(self.data.tempFilePaths)</span><br><span class=\"line\">    wx.previewImage(&#123;</span><br><span class=\"line\">      current: self.data.previewImg[index<span class=\"number\">-1</span>], <span class=\"comment\">// 当前显示图片的http链接</span></span><br><span class=\"line\">      urls: self.data.previewImg <span class=\"comment\">// 需要预览的图片http链接列表</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">delete</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> index = e.currentTarget.dataset.index;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> images = <span class=\"keyword\">this</span>.data.tempFilePaths;</span><br><span class=\"line\">    images.splice(index<span class=\"number\">-1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setData(&#123;</span><br><span class=\"line\">      tempFilePaths: images</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7、有趣的css小动画\"><a href=\"#7、有趣的css小动画\" class=\"headerlink\" title=\"7、有趣的css小动画\"></a>7、有趣的css小动画</h2><p><img src=\"https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177\" alt=\"img\"><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"triangle2rect\"</span>&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"a\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div class=\"b\"&gt;&lt;/</span>div&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"c\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div class=\"d\"&gt;&lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">.triangle2rect &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"regexp\">  width: 100px;</span></span><br><span class=\"line\"><span class=\"regexp\">  height: 100px;</span></span><br><span class=\"line\"><span class=\"regexp\">  top: 50%;</span></span><br><span class=\"line\"><span class=\"regexp\">  left: 50%;</span></span><br><span class=\"line\"><span class=\"regexp\">  transform: translate(-50%, -50%);</span></span><br><span class=\"line\"><span class=\"regexp\">  animation: aniContainer 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.triangle2rect div &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"regexp\">  top: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  left: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.a &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: a 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.b &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: b 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.c &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: c 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.d &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: d 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes a &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes b &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes c &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes d &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7、请耐心等待，麦麦会不定期更新哒\"><a href=\"#7、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"7、请耐心等待，麦麦会不定期更新哒~\"></a>7、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<p>啦啦啦啦啦啦~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Intersting\"><a href=\"#Intersting\" class=\"headerlink\" title=\"Intersting\"></a>Intersting</h2><h2 id=\"1、Vue-filter-过滤\"><a href=\"#1、Vue-filter-过滤\" class=\"headerlink\" title=\"1、Vue.filter 过滤\"></a>1、Vue.filter 过滤</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filterShoppingList: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> key = <span class=\"keyword\">this</span>.key;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> shoppingList = <span class=\"keyword\">this</span>.shoppingList;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> shoppingList.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item.toLowerCase().indexOf(key.toLowerCase()) != <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125;);;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、数组对象去重（根据时间一样去重，把title合并）\"><a href=\"#2、数组对象去重（根据时间一样去重，把title合并）\" class=\"headerlink\" title=\"2、数组对象去重（根据时间一样去重，把title合并）\"></a>2、数组对象去重（根据时间一样去重，把title合并）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'211521'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'111111111111111'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23333333333'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'我有一只小毛驴'</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23333333333'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'我重来也不骑'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23333333333'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'有一天我心血来潮'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    time:<span class=\"string\">'23werwef3'</span>,</span><br><span class=\"line\">    title:[</span><br><span class=\"line\">      <span class=\"string\">'111111111111111'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = [], hash = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;arr.length; i++) &#123; <span class=\"comment\">//去重</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> elem = arr[i].time;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!hash[elem]) &#123;</span><br><span class=\"line\">      result.push(arr[i]);</span><br><span class=\"line\">      hash[elem] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j&lt;result.length; j++) &#123; <span class=\"comment\">//填数据</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(result[j].time == elem)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(arr[i].title)</span><br><span class=\"line\">        result[j].title.push(arr[i].title[<span class=\"number\">0</span>])</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result)</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"3、页面判断是手机就打开手机网址\"><a href=\"#3、页面判断是手机就打开手机网址\" class=\"headerlink\" title=\"3、页面判断是手机就打开手机网址\"></a>3、页面判断是手机就打开手机网址</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> ua = <span class=\"built_in\">window</span>.navigator.userAgent.toLocaleLowerCase()</span><br><span class=\"line\"><span class=\"keyword\">let</span> murl =<span class=\"string\">\"//m.jd.com\"</span>,</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg =<span class=\"regexp\">/iphone|android|symbianos|windows\\sphone/g</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (reg .test(ua )) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.location.href = murl</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4、-返回对象的函数能够用于链式操作\"><a href=\"#4、-返回对象的函数能够用于链式操作\" class=\"headerlink\" title=\"4、 返回对象的函数能够用于链式操作\"></a>4、 返回对象的函数能够用于链式操作</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Hello my name is: \"</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.changeName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"John\"</span>);</span><br><span class=\"line\">person.sayName().changeName(<span class=\"string\">\"Timmy\"</span>).sayName();</span><br><span class=\"line\"><span class=\"comment\">//Hello my name is: John</span></span><br><span class=\"line\"><span class=\"comment\">//Hello my name is: Timmy</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5、微信小程序实现多选样式更改\"><a href=\"#5、微信小程序实现多选样式更改\" class=\"headerlink\" title=\"5、微信小程序实现多选样式更改\"></a>5、微信小程序实现多选样式更改</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// wxml</span></span><br><span class=\"line\">&lt;checkbox-group bindchange=<span class=\"string\">\"checkboxChange\"</span>&gt;</span><br><span class=\"line\">  &lt;view <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"checkbox_selection\"</span>&gt;</span><br><span class=\"line\">   &lt;label wx:<span class=\"keyword\">for</span>=<span class=\"string\">\"&#123;&#123;allValue&#125;&#125;\"</span> wx:key=<span class=\"string\">\"&#123;&#123;item.value&#125;&#125;\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"checkbox &#123;&#123;item.checked?'is_checked':''&#125;&#125;\"</span>&gt;</span><br><span class=\"line\">    &lt;checkbox value=<span class=\"string\">\"&#123;&#123;item.value&#125;&#125;\"</span> checked=<span class=\"string\">\"&#123;&#123;item.checked&#125;&#125;\"</span> hidden=<span class=\"string\">\"false\"</span> /&gt;&#123;&#123;item.name&#125;&#125;</span><br><span class=\"line\">   &lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>view&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/checkbox-group&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ wxss</span></span><br><span class=\"line\"><span class=\"regexp\">.checkbox_selection &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  padding: 15px 10px;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: #fff;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.checkbox_selection label &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: #f0f1ec;</span></span><br><span class=\"line\"><span class=\"regexp\">  padding: 6px 7px;</span></span><br><span class=\"line\"><span class=\"regexp\">  font-size: 12px;</span></span><br><span class=\"line\"><span class=\"regexp\">  border-radius: 4px;</span></span><br><span class=\"line\"><span class=\"regexp\">  margin:4rpx;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">.checkbox_selection .is_checked &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: lightblue;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ js</span></span><br><span class=\"line\"><span class=\"regexp\">var app = getApp();</span></span><br><span class=\"line\"><span class=\"regexp\">Page(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  data: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    allValue: [</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '人力资源', value: '0', checked: true &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '项目资金', value: '1', checked: false &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '项目资金', value: '2', checked: false &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123; name: '项目资金', value: '3', checked: false &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    ],</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  checkboxChange: function (e) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    var allValue = this.data.allValue;</span></span><br><span class=\"line\"><span class=\"regexp\">    var checkArr = e.detail.value;</span></span><br><span class=\"line\"><span class=\"regexp\">    console.log(checkArr)</span></span><br><span class=\"line\"><span class=\"regexp\">    for (var i = 0; i &lt; allValue.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      if (checkArr.indexOf(i + \"\") != -1) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        allValue[i].checked = true;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        allValue[i].checked = false;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      allValue: allValue</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"6、微信小程序实现九宫格拖拽\"><a href=\"#6、微信小程序实现九宫格拖拽\" class=\"headerlink\" title=\"6、微信小程序实现九宫格拖拽\"></a>6、微信小程序实现九宫格拖拽</h2><p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jgg.gif?raw=true\" alt=\"img\"><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记得把图片换成自己本地的</span><br><span class=\"line\"><span class=\"comment\">// wxml</span></span><br><span class=\"line\">&lt;view bindtap=<span class=\"string\">\"box\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"box\"</span> &gt;</span><br><span class=\"line\">   &lt;image</span><br><span class=\"line\">     disable-scroll=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">     wx:<span class=\"keyword\">for</span>=<span class=\"string\">\"&#123;&#123;content&#125;&#125;\"</span></span><br><span class=\"line\">     bindtouchmove=<span class=\"string\">\"move\"</span></span><br><span class=\"line\">     bindtouchstart=<span class=\"string\">\"movestart\"</span></span><br><span class=\"line\">     bindtouchend=<span class=\"string\">\"moveend\"</span></span><br><span class=\"line\">     data-index=<span class=\"string\">\"&#123;&#123;item.id&#125;&#125;\"</span></span><br><span class=\"line\">     data-main=<span class=\"string\">\"&#123;&#123;mainx&#125;&#125;\"</span></span><br><span class=\"line\">     <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"main &#123;&#123;mainx == item.id? 'mainmove':'mainend'&#125;&#125;\"</span></span><br><span class=\"line\">     style=<span class=\"string\">\"left:&#123;&#123;start.x&#125;&#125;px; top:&#123;&#123;start.y&#125;&#125;px\"</span></span><br><span class=\"line\">     bindtap=<span class=\"string\">\"previewImages\"</span></span><br><span class=\"line\">     data-id=<span class=\"string\">\"&#123;&#123;idx&#125;&#125;\"</span></span><br><span class=\"line\">     mode=<span class=\"string\">\"widthFix\"</span></span><br><span class=\"line\">     src=<span class=\"string\">\"&#123;&#123;item.content&#125;&#125;\"</span></span><br><span class=\"line\">       &gt;&lt;<span class=\"regexp\">/image&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>view&gt;</span><br><span class=\"line\"><span class=\"comment\">// wxss</span></span><br><span class=\"line\">.box&#123;<span class=\"attr\">width</span>:<span class=\"number\">100</span>%; position: relative&#125;</span><br><span class=\"line\">.main&#123;</span><br><span class=\"line\">  width:<span class=\"number\">115</span>px;</span><br><span class=\"line\">  height:<span class=\"number\">115</span>px;</span><br><span class=\"line\">  background: #eee;</span><br><span class=\"line\">  border: 1px solid #ccc;</span><br><span class=\"line\">  margin:<span class=\"number\">2</span>rpx <span class=\"number\">4</span>rpx ;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  text-align: center;</span><br><span class=\"line\">  line-height:<span class=\"number\">115</span>px;</span><br><span class=\"line\">  display: inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.mainmove&#123;<span class=\"attr\">position</span>: absolute; opacity: <span class=\"number\">0.7</span>&#125;</span><br><span class=\"line\">.maind&#123;background: #fff; border:1px dashed #efefef;&#125;</span><br><span class=\"line\">.mainend&#123;<span class=\"attr\">position</span>: <span class=\"keyword\">static</span>; opacity: <span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"><span class=\"comment\">// js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = getApp();</span><br><span class=\"line\"><span class=\"keyword\">var</span> x, y, x1, y1, x2, y2, index, currindex, n, yy;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">3</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">4</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg'</span>, <span class=\"attr\">id</span>: <span class=\"number\">5</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">6</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">7</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">8</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">9</span> &#125;];</span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    motto: <span class=\"string\">'Hello World'</span>,</span><br><span class=\"line\">    userInfo: &#123;&#125;,</span><br><span class=\"line\">    mailen: <span class=\"number\">0</span>,</span><br><span class=\"line\">    content: [</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>:<span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUdc0fc00003a6d08484020a52c2c4aefc.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU13f3e7ed7c4e9e08b38753d1ac5ab0b3.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">3</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">4</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU5ebd2117e840f1a99944c866d3ee1d52.jpg'</span>, <span class=\"attr\">id</span>: <span class=\"number\">5</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">6</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUe5a6e958fb019ab474b24705d2b6a630.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">7</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuUcb013dedafe0a58c103d27536f665ff7.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">8</span> &#125;,</span><br><span class=\"line\">&#123; <span class=\"attr\">content</span>: <span class=\"string\">'wxfile://tmp_795160320o6zAJsxg0kaja8hhRyhkO81BBPuU4bdd160fc442cae480c94ad8324fb0de.png'</span>, <span class=\"attr\">id</span>: <span class=\"number\">9</span> &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    start: &#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">    tempFilePaths: [],</span><br><span class=\"line\">    previewImg:[]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  movestart: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    currindex = e.target.dataset.index;</span><br><span class=\"line\">    x = e.touches[<span class=\"number\">0</span>].clientX;</span><br><span class=\"line\">    y = e.touches[<span class=\"number\">0</span>].clientY;</span><br><span class=\"line\">    x1 = e.currentTarget.offsetLeft;</span><br><span class=\"line\">    y1 = e.currentTarget.offsetTop;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  move: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    yy = e.currentTarget.offsetTop;</span><br><span class=\"line\">    x2 = e.touches[<span class=\"number\">0</span>].clientX - x + x1;</span><br><span class=\"line\">    y2 = e.touches[<span class=\"number\">0</span>].clientY - y + y1;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setData(&#123;</span><br><span class=\"line\">      mainx: currindex,</span><br><span class=\"line\">      opacity: <span class=\"number\">0.7</span>,</span><br><span class=\"line\">      start: &#123; <span class=\"attr\">x</span>: x2, <span class=\"attr\">y</span>: y2 &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// console.log(x2,y2)</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  moveend: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.data.content.length; i++) &#123;</span><br><span class=\"line\">      arr.push(<span class=\"keyword\">this</span>.data.content[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nx = <span class=\"keyword\">this</span>.data.content.length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x2 != <span class=\"number\">0</span> || y2 != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> xz = <span class=\"number\">0</span>, yz=<span class=\"number\">0</span> , n=<span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k = <span class=\"number\">1</span>; k &lt; nx / <span class=\"number\">3</span> +<span class=\"number\">1</span>; k++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x2 &gt; (<span class=\"number\">115</span> * k - <span class=\"number\">58</span>)) &#123;</span><br><span class=\"line\">          xz = k ;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(xz)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y2 &gt; (<span class=\"number\">115</span> * k - <span class=\"number\">58</span>)) &#123;</span><br><span class=\"line\">          yz = k;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(xz)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (x2 &gt; (<span class=\"number\">115</span> * <span class=\"number\">3</span> + <span class=\"number\">10</span>)) &#123;</span><br><span class=\"line\">        xz = <span class=\"number\">3</span> ;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (y2 &gt; (<span class=\"number\">115</span> * <span class=\"number\">3</span> + <span class=\"number\">10</span>) ) &#123;</span><br><span class=\"line\">        yz = <span class=\"number\">3</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      n = xz + (<span class=\"number\">3</span>*yz);</span><br><span class=\"line\">      arr.splice((currindex - <span class=\"number\">1</span>), <span class=\"number\">1</span>);</span><br><span class=\"line\">      arr.splice(n, <span class=\"number\">0</span>, arr1[currindex - <span class=\"number\">1</span>]);</span><br><span class=\"line\">      arr1 = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> m = <span class=\"number\">0</span>; m &lt; <span class=\"keyword\">this</span>.data.content.length; m++) &#123;</span><br><span class=\"line\">        arr[m].id = m + <span class=\"number\">1</span>;</span><br><span class=\"line\">        arr1.push(arr[m]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setData(&#123;</span><br><span class=\"line\">        mainx: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">        content: arr,</span><br><span class=\"line\">        opacity: <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  upload: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">    wx.chooseImage(&#123;</span><br><span class=\"line\">      count: <span class=\"number\">9</span>, <span class=\"comment\">// 默认9</span></span><br><span class=\"line\">      sizeType: [<span class=\"string\">'original'</span>, <span class=\"string\">'compressed'</span>], <span class=\"comment\">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class=\"line\">      sourceType: [<span class=\"string\">'album'</span>, <span class=\"string\">'camera'</span>], <span class=\"comment\">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> tempFilePaths = res.tempFilePaths;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; tempFilePaths.length;i++)&#123;</span><br><span class=\"line\">          arr.push(&#123;</span><br><span class=\"line\">            content: tempFilePaths[i],</span><br><span class=\"line\">            id:i+<span class=\"number\">1</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        self.setData(&#123;</span><br><span class=\"line\">          tempFilePaths: self.data.tempFilePaths.concat(arr),</span><br><span class=\"line\">          previewImg: self.data.previewImg.concat(tempFilePaths)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  previewImages: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> index = e.target.dataset.id;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(self.data.tempFilePaths)</span><br><span class=\"line\">    wx.previewImage(&#123;</span><br><span class=\"line\">      current: self.data.previewImg[index<span class=\"number\">-1</span>], <span class=\"comment\">// 当前显示图片的http链接</span></span><br><span class=\"line\">      urls: self.data.previewImg <span class=\"comment\">// 需要预览的图片http链接列表</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">delete</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> index = e.currentTarget.dataset.index;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> images = <span class=\"keyword\">this</span>.data.tempFilePaths;</span><br><span class=\"line\">    images.splice(index<span class=\"number\">-1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setData(&#123;</span><br><span class=\"line\">      tempFilePaths: images</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7、有趣的css小动画\"><a href=\"#7、有趣的css小动画\" class=\"headerlink\" title=\"7、有趣的css小动画\"></a>7、有趣的css小动画</h2><p><img src=\"https://user-images.githubusercontent.com/8554143/27017024-cf387976-4f57-11e7-9063-7e9fb2893a24.gif?_=6992177\" alt=\"img\"><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"triangle2rect\"</span>&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"a\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div class=\"b\"&gt;&lt;/</span>div&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"c\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div class=\"d\"&gt;&lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">.triangle2rect &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"regexp\">  width: 100px;</span></span><br><span class=\"line\"><span class=\"regexp\">  height: 100px;</span></span><br><span class=\"line\"><span class=\"regexp\">  top: 50%;</span></span><br><span class=\"line\"><span class=\"regexp\">  left: 50%;</span></span><br><span class=\"line\"><span class=\"regexp\">  transform: translate(-50%, -50%);</span></span><br><span class=\"line\"><span class=\"regexp\">  animation: aniContainer 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.triangle2rect div &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"regexp\">  top: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  left: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.a &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: a 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.b &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: b 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.c &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: c 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">.d &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: deeppink;</span></span><br><span class=\"line\"><span class=\"regexp\">    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    animation: d 2s infinite alternate;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes a &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(0% 0%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes b &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(0% 0%, 100% 0%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes c &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(100% 0%, 100% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">@keyframes d &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    0%, 10% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: white;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(100% 100%, 0% 100%, 50% 50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    90%, 100% &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        background: #000;</span></span><br><span class=\"line\"><span class=\"regexp\">        clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7、请耐心等待，麦麦会不定期更新哒\"><a href=\"#7、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"7、请耐心等待，麦麦会不定期更新哒~\"></a>7、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>"},{"title":"在react中实现滑动到某处执行动画","date":"2020-03-31T16:00:00.000Z","_content":"hello~ 近日要做个官网。我打算给官网做一丢丢的动效，搜了一下wowjs挺好用的，然后又看到有个react-wow，就是把wow封装了一下，就都拿来试了一下，方法就写在下面拉。[wow demo地址](https://www.delac.io/wow/)\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 引入react-wow的用法\n\n```javascript\n  import ReactWOW from 'react-wow';\n\n  // 在global.less中引用animate.css\n\n  <ReactWOW delay='0.1s' animation='rollIn'>\n    <div>这里是你需要用到动画的dom</div>\n  </ReactWOW>\n\n```\n> 引入wow的用法\n\n```javascript\n  import wow from 'wowjs';\n\n  // 在global.less中引用animate.css\n\n  useEffect(() => {\n    const wows = new wow.WOW({\n      live: false\n    });\n    wows.init();\n  }, []);\n\n  <div className=\"wow slideInLeft\" data-wow-duration=\"2s\" data-wow-delay=\"0.3s\">这里是你需要用到动画的dom</div>\n```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/animate.md","raw":"---\ntitle: 在react中实现滑动到某处执行动画\ndate: 2020-04-01\ntags: react\n---\nhello~ 近日要做个官网。我打算给官网做一丢丢的动效，搜了一下wowjs挺好用的，然后又看到有个react-wow，就是把wow封装了一下，就都拿来试了一下，方法就写在下面拉。[wow demo地址](https://www.delac.io/wow/)\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 引入react-wow的用法\n\n```javascript\n  import ReactWOW from 'react-wow';\n\n  // 在global.less中引用animate.css\n\n  <ReactWOW delay='0.1s' animation='rollIn'>\n    <div>这里是你需要用到动画的dom</div>\n  </ReactWOW>\n\n```\n> 引入wow的用法\n\n```javascript\n  import wow from 'wowjs';\n\n  // 在global.less中引用animate.css\n\n  useEffect(() => {\n    const wows = new wow.WOW({\n      live: false\n    });\n    wows.init();\n  }, []);\n\n  <div className=\"wow slideInLeft\" data-wow-duration=\"2s\" data-wow-delay=\"0.3s\">这里是你需要用到动画的dom</div>\n```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"animate","published":1,"updated":"2020-04-01T03:17:47.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0yw0005000maax02a6s","content":"<p>hello~ 近日要做个官网。我打算给官网做一丢丢的动效，搜了一下wowjs挺好用的，然后又看到有个react-wow，就是把wow封装了一下，就都拿来试了一下，方法就写在下面拉。<a href=\"https://www.delac.io/wow/\" target=\"_blank\" rel=\"noopener\">wow demo地址</a></p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>引入react-wow的用法</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ReactWOW <span class=\"keyword\">from</span> <span class=\"string\">'react-wow'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在global.less中引用animate.css</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ReactWOW delay=<span class=\"string\">'0.1s'</span> animation=<span class=\"string\">'rollIn'</span>&gt;</span><br><span class=\"line\">  &lt;div&gt;这里是你需要用到动画的dom&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>ReactWOW&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>引入wow的用法</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wow <span class=\"keyword\">from</span> <span class=\"string\">'wowjs'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在global.less中引用animate.css</span></span><br><span class=\"line\"></span><br><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> wows = <span class=\"keyword\">new</span> wow.WOW(&#123;</span><br><span class=\"line\">    live: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  wows.init();</span><br><span class=\"line\">&#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div className=<span class=\"string\">\"wow slideInLeft\"</span> data-wow-duration=<span class=\"string\">\"2s\"</span> data-wow-delay=<span class=\"string\">\"0.3s\"</span>&gt;这里是你需要用到动画的dom&lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>hello~ 近日要做个官网。我打算给官网做一丢丢的动效，搜了一下wowjs挺好用的，然后又看到有个react-wow，就是把wow封装了一下，就都拿来试了一下，方法就写在下面拉。<a href=\"https://www.delac.io/wow/\" target=\"_blank\" rel=\"noopener\">wow demo地址</a></p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>引入react-wow的用法</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ReactWOW <span class=\"keyword\">from</span> <span class=\"string\">'react-wow'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在global.less中引用animate.css</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ReactWOW delay=<span class=\"string\">'0.1s'</span> animation=<span class=\"string\">'rollIn'</span>&gt;</span><br><span class=\"line\">  &lt;div&gt;这里是你需要用到动画的dom&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>ReactWOW&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>引入wow的用法</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wow <span class=\"keyword\">from</span> <span class=\"string\">'wowjs'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在global.less中引用animate.css</span></span><br><span class=\"line\"></span><br><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> wows = <span class=\"keyword\">new</span> wow.WOW(&#123;</span><br><span class=\"line\">    live: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  wows.init();</span><br><span class=\"line\">&#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div className=<span class=\"string\">\"wow slideInLeft\"</span> data-wow-duration=<span class=\"string\">\"2s\"</span> data-wow-delay=<span class=\"string\">\"0.3s\"</span>&gt;这里是你需要用到动画的dom&lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"用 cooking 搭建一个多页面易配置的 Vue 2 项目","date":"2018-08-08T16:00:00.000Z","_content":"学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-> 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自[知乎](https://zhuanlan.zhihu.com/p/22610408)\n\n## 搭建基础项目--<font size=1>直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font>\n**npm i cooking-cli -g**\nor 切换至淘宝镜像\n**npm i cooking-cli -g --registry=https://registry.npm.taobao.org**\n完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。\n**cooking create xxx vue**\n接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。\n> [?] Give your app a name: multiple-pages\n> [?] Give your app a description: A vue project.\n> [?] Private? Yes\n> [?] What Vue version do you what? Vue 2\n> [?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)\n> [?] What way use cooking do you want? Global cooking (webpack 2)\n> [?] Need dev server? Yes\n> [?] What CSS preprocessor do you want to use? Only CSS\n> [?] Setup unit tests with Karma + Mocha? No\n> [?] git repository:\n> [?] author:\n> [?] license: ISC\n> [?] Continue? Yes\n\n最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。\n\n## 多页面项目分析\n写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。\n<!--more-->\n```javascript\n{\n  \"pages\": [\n    {\n      \"entry\": \"home\",\n      \"title\": \"首页\",\n      \"cdn\": {}\n    },\n    {\n      \"entry\": \"admin\",\n      \"title\": \"后台\",\n      \"cdn\": {}\n    }\n  ],\n  \"basePath\": \"./src/pages/\",\n  \"cdn\": {\n    \"js\": [\n      \"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\",\n      \"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"\n    ],\n    \"css\": []\n  },\n  \"externals\": {\n    \"vue\": \"Vue\",\n    \"vuex\": \"Vuex\"\n  }\n}\n```\n同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。\n\n**index.js**\n```javascript\nimport Vue from 'vue'\nimport App from './app'\nnew Vue({ // eslint-disable-line\n  el: '#app',\n  render: h => h(App)\n})\n```\n**app.vue**\n```javascript\n<template>\n  <div>\n    <h1>首页</h1>\n    <p>A vue project.</p>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'app'\n  };\n</script>\n```\n## 配置 cooking --<font size=1>入口文件</font>\n接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。\n\n> **var App = require('./app.json')\n> var entries = function() {\n>   var result = {}\n>   App.pages.forEach(p => {\n>     result[p.entry] = path.resolve(App.basePath, p.entry)\n>   })\n>   return result\n> }\n> cooking.set({\n>   entry: entries()\n> })**\n\n## 模板文件\n所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。\n```javascript\nvar App = require('./app.json')\nvar path = require('path')\nvar merge = function(a, b) {\n  return {\n    css: (a.css || []).concat(b.css || []),\n    js: (a.js || []).concat(b.js || [])\n  }\n}\nvar templates = function() {\n  return App.pages.map(p => {\n    return {\n      title: p.title,\n      filename: p.entry + '.html',\n      template: path.resolve(__dirname, 'index.tpl'),\n      cdn: merge(App.cdn, p.cdn),\n      chunks: ['vendor', 'manifest', p.entry]\n    }\n  })\n}\ncooking.set({\n  template: templates()\n})\n模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title><%= htmlWebpackPlugin.options.title %></title>\n    <% for (var i in htmlWebpackPlugin.options.cdn.css) { %>\n    <link rel=\"stylesheet\" href=\"<%= htmlWebpackPlugin.options.cdn.css[i] %>\"><% } %>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <% for (var i in htmlWebpackPlugin.options.cdn.js) { %>\n    <script src=\"<%= htmlWebpackPlugin.options.cdn.js[i] %>\"></script><% } %>\n  </body>\n</html>\n```\n## 最终配置\n最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。\n```javascript\nvar path = require('path')\nvar cooking = require('cooking')\nvar build = require('./build')\ncooking.set({\n  entry: build.entries(),\n  dist: './dist',\n  template: build.templates(),\n  devServer: {\n    port: 8081,\n    publicPath: '/',\n  },\n  clean: true,\n  hash: true,\n  sourceMap: true,\n  chunk: true,\n  publicPath: '/dist/',\n  extractCSS: true,\n  alias: {\n    'src': path.join(__dirname, 'src')\n  },\n  extends: ['vue2', 'buble', 'lint', 'autoprefixer'],\n  externals: build.externals()\n})\nmodule.exports = cooking.resolve()\n```\n\n## 运行项目\n我们直接通过 cooking 命令行启动项目。\n**cooking watch -p**\n最后我们通过 build 构建项目，最终打包文件在 dist 目录里。\n**cooking build -p**\n\n## 开发目录说明\n\n** src --开发目录\n\n +components 自定义组件\n\n +pages 页面存放，文件夹名对应页面名字\n\n +assets 静态资源文件，如公用的样式和字体文件以及图片\n\n举个栗子：\n\npages\n  + index\n    index.js   //页面初始化\n    app.vue    //页面逻辑，包括tempalte,script,style**\n\n## 引入饿了么组件\n饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件\n\n安装饿了么组件 引入 Element\n**npm i element-ui -S**\n你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。\n> ¶ 完整引入\n在 main.js 中写入以下内容：\n```javascript\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nimport App from './App.vue'\nVue.use(ElementUI)\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n```\n> ¶ 按需引入\n借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。\n首先，安装 **babel-plugin-component：npm install babel-plugin-component -D**\n```javascript\nimport Vue from 'vue';\nimport App from './app';\nimport { Button, Select } from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nVue.use(Button)\nVue.use(Select)\n\nnew Vue({\n    el: \"#app\",\n    render:h => h(App)\n})\n```\n然后，将 .babelrc 修改为：\n```javascript\n{\n  \"presets\": [\"es2015\", \"stage-0\", \"stage-2\"],\n  \"comments\": false,\n  \"env\": {\n    \"production\": {\n      \"plugins\": [\n        [\"transform-runtime\", { \"polyfill\": false, \"regenerator\": false }],\n        [\"component\", [\n          {\n            \"libraryName\": \"element-ui\",\n            \"styleLibraryName\": \"theme-default\"\n          }\n        ]]\n      ]\n    }\n  }\n}\n```\n参考脚手架：[麦麦的github](https://github.com/maimai123/cookingVue2.git)\n","source":"_posts/cooking.md","raw":"---\ntitle: 用 cooking 搭建一个多页面易配置的 Vue 2 项目\ndate: 2018-08-09\ntags: vue\n---\n学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-> 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自[知乎](https://zhuanlan.zhihu.com/p/22610408)\n\n## 搭建基础项目--<font size=1>直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font>\n**npm i cooking-cli -g**\nor 切换至淘宝镜像\n**npm i cooking-cli -g --registry=https://registry.npm.taobao.org**\n完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。\n**cooking create xxx vue**\n接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。\n> [?] Give your app a name: multiple-pages\n> [?] Give your app a description: A vue project.\n> [?] Private? Yes\n> [?] What Vue version do you what? Vue 2\n> [?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)\n> [?] What way use cooking do you want? Global cooking (webpack 2)\n> [?] Need dev server? Yes\n> [?] What CSS preprocessor do you want to use? Only CSS\n> [?] Setup unit tests with Karma + Mocha? No\n> [?] git repository:\n> [?] author:\n> [?] license: ISC\n> [?] Continue? Yes\n\n最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。\n\n## 多页面项目分析\n写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。\n<!--more-->\n```javascript\n{\n  \"pages\": [\n    {\n      \"entry\": \"home\",\n      \"title\": \"首页\",\n      \"cdn\": {}\n    },\n    {\n      \"entry\": \"admin\",\n      \"title\": \"后台\",\n      \"cdn\": {}\n    }\n  ],\n  \"basePath\": \"./src/pages/\",\n  \"cdn\": {\n    \"js\": [\n      \"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\",\n      \"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"\n    ],\n    \"css\": []\n  },\n  \"externals\": {\n    \"vue\": \"Vue\",\n    \"vuex\": \"Vuex\"\n  }\n}\n```\n同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。\n\n**index.js**\n```javascript\nimport Vue from 'vue'\nimport App from './app'\nnew Vue({ // eslint-disable-line\n  el: '#app',\n  render: h => h(App)\n})\n```\n**app.vue**\n```javascript\n<template>\n  <div>\n    <h1>首页</h1>\n    <p>A vue project.</p>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'app'\n  };\n</script>\n```\n## 配置 cooking --<font size=1>入口文件</font>\n接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。\n\n> **var App = require('./app.json')\n> var entries = function() {\n>   var result = {}\n>   App.pages.forEach(p => {\n>     result[p.entry] = path.resolve(App.basePath, p.entry)\n>   })\n>   return result\n> }\n> cooking.set({\n>   entry: entries()\n> })**\n\n## 模板文件\n所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。\n```javascript\nvar App = require('./app.json')\nvar path = require('path')\nvar merge = function(a, b) {\n  return {\n    css: (a.css || []).concat(b.css || []),\n    js: (a.js || []).concat(b.js || [])\n  }\n}\nvar templates = function() {\n  return App.pages.map(p => {\n    return {\n      title: p.title,\n      filename: p.entry + '.html',\n      template: path.resolve(__dirname, 'index.tpl'),\n      cdn: merge(App.cdn, p.cdn),\n      chunks: ['vendor', 'manifest', p.entry]\n    }\n  })\n}\ncooking.set({\n  template: templates()\n})\n模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title><%= htmlWebpackPlugin.options.title %></title>\n    <% for (var i in htmlWebpackPlugin.options.cdn.css) { %>\n    <link rel=\"stylesheet\" href=\"<%= htmlWebpackPlugin.options.cdn.css[i] %>\"><% } %>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <% for (var i in htmlWebpackPlugin.options.cdn.js) { %>\n    <script src=\"<%= htmlWebpackPlugin.options.cdn.js[i] %>\"></script><% } %>\n  </body>\n</html>\n```\n## 最终配置\n最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。\n```javascript\nvar path = require('path')\nvar cooking = require('cooking')\nvar build = require('./build')\ncooking.set({\n  entry: build.entries(),\n  dist: './dist',\n  template: build.templates(),\n  devServer: {\n    port: 8081,\n    publicPath: '/',\n  },\n  clean: true,\n  hash: true,\n  sourceMap: true,\n  chunk: true,\n  publicPath: '/dist/',\n  extractCSS: true,\n  alias: {\n    'src': path.join(__dirname, 'src')\n  },\n  extends: ['vue2', 'buble', 'lint', 'autoprefixer'],\n  externals: build.externals()\n})\nmodule.exports = cooking.resolve()\n```\n\n## 运行项目\n我们直接通过 cooking 命令行启动项目。\n**cooking watch -p**\n最后我们通过 build 构建项目，最终打包文件在 dist 目录里。\n**cooking build -p**\n\n## 开发目录说明\n\n** src --开发目录\n\n +components 自定义组件\n\n +pages 页面存放，文件夹名对应页面名字\n\n +assets 静态资源文件，如公用的样式和字体文件以及图片\n\n举个栗子：\n\npages\n  + index\n    index.js   //页面初始化\n    app.vue    //页面逻辑，包括tempalte,script,style**\n\n## 引入饿了么组件\n饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件\n\n安装饿了么组件 引入 Element\n**npm i element-ui -S**\n你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。\n> ¶ 完整引入\n在 main.js 中写入以下内容：\n```javascript\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nimport App from './App.vue'\nVue.use(ElementUI)\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n```\n> ¶ 按需引入\n借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。\n首先，安装 **babel-plugin-component：npm install babel-plugin-component -D**\n```javascript\nimport Vue from 'vue';\nimport App from './app';\nimport { Button, Select } from 'element-ui'\nimport 'element-ui/lib/theme-default/index.css'\nVue.use(Button)\nVue.use(Select)\n\nnew Vue({\n    el: \"#app\",\n    render:h => h(App)\n})\n```\n然后，将 .babelrc 修改为：\n```javascript\n{\n  \"presets\": [\"es2015\", \"stage-0\", \"stage-2\"],\n  \"comments\": false,\n  \"env\": {\n    \"production\": {\n      \"plugins\": [\n        [\"transform-runtime\", { \"polyfill\": false, \"regenerator\": false }],\n        [\"component\", [\n          {\n            \"libraryName\": \"element-ui\",\n            \"styleLibraryName\": \"theme-default\"\n          }\n        ]]\n      ]\n    }\n  }\n}\n```\n参考脚手架：[麦麦的github](https://github.com/maimai123/cookingVue2.git)\n","slug":"cooking","published":1,"updated":"2020-02-26T10:32:03.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0yy0008000m1dpecblb","content":"<p>学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-&gt; 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自<a href=\"https://zhuanlan.zhihu.com/p/22610408\" target=\"_blank\" rel=\"noopener\">知乎</a></p>\n<h2 id=\"搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\"><a href=\"#搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\" class=\"headerlink\" title=\"搭建基础项目–直接通过 cooking 的命令行工具直接生成一个 Vue 项目\"></a>搭建基础项目–<font size=1>直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font></h2><p><strong>npm i cooking-cli -g</strong><br>or 切换至淘宝镜像<br><strong>npm i cooking-cli -g –registry=<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a></strong><br>完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。<br><strong>cooking create xxx vue</strong><br>接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。</p>\n<blockquote>\n<p>[?] Give your app a name: multiple-pages<br>[?] Give your app a description: A vue project.<br>[?] Private? Yes<br>[?] What Vue version do you what? Vue 2<br>[?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)<br>[?] What way use cooking do you want? Global cooking (webpack 2)<br>[?] Need dev server? Yes<br>[?] What CSS preprocessor do you want to use? Only CSS<br>[?] Setup unit tests with Karma + Mocha? No<br>[?] git repository:<br>[?] author:<br>[?] license: ISC<br>[?] Continue? Yes</p>\n</blockquote>\n<p>最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。</p>\n<h2 id=\"多页面项目分析\"><a href=\"#多页面项目分析\" class=\"headerlink\" title=\"多页面项目分析\"></a>多页面项目分析</h2><p>写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"pages\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"home\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"首页\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"admin\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"后台\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"basePath\"</span>: <span class=\"string\">\"./src/pages/\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"cdn\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"js\"</span>: [</span><br><span class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">\"css\"</span>: []</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"externals\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"Vue\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vuex\"</span>: <span class=\"string\">\"Vuex\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。</p>\n<p><strong>index.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123; <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br><strong>app.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h1&gt;首页&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p&gt;A vue project.&lt;/</span>p&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"配置-cooking-–入口文件\"><a href=\"#配置-cooking-–入口文件\" class=\"headerlink\" title=\"配置 cooking –入口文件\"></a>配置 cooking –<font size=1>入口文件</font></h2><p>接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。</p>\n<blockquote>\n<p><strong>var App = require(‘./app.json’)<br>var entries = function() {<br>  var result = {}<br>  App.pages.forEach(p =&gt; {<br>    result[p.entry] = path.resolve(App.basePath, p.entry)<br>  })<br>  return result<br>}<br>cooking.set({<br>  entry: entries()<br>})</strong></p>\n</blockquote>\n<h2 id=\"模板文件\"><a href=\"#模板文件\" class=\"headerlink\" title=\"模板文件\"></a>模板文件</h2><p>所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"built_in\">require</span>(<span class=\"string\">'./app.json'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    css: (a.css || []).concat(b.css || []),</span><br><span class=\"line\">    js: (a.js || []).concat(b.js || [])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> templates = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> App.pages.map(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      title: p.title,</span><br><span class=\"line\">      filename: p.entry + <span class=\"string\">'.html'</span>,</span><br><span class=\"line\">      template: path.resolve(__dirname, <span class=\"string\">'index.tpl'</span>),</span><br><span class=\"line\">      cdn: merge(App.cdn, p.cdn),</span><br><span class=\"line\">      chunks: [<span class=\"string\">'vendor'</span>, <span class=\"string\">'manifest'</span>, p.entry]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cooking.set(&#123;</span><br><span class=\"line\">  template: templates()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"utf-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.css) &#123; %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;link rel=\"stylesheet\" href=\"&lt;%= htmlWebpackPlugin.options.cdn.css[i] %&gt;\"&gt;&lt;% &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;div id=<span class=\"string\">\"app\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.js) &#123; %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;script src=\"&lt;%= htmlWebpackPlugin.options.cdn.js[i] %&gt;\"&gt;&lt;/</span>script&gt;&lt;% &#125; %&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/body&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"最终配置\"><a href=\"#最终配置\" class=\"headerlink\" title=\"最终配置\"></a>最终配置</h2><p>最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> cooking = <span class=\"built_in\">require</span>(<span class=\"string\">'cooking'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> build = <span class=\"built_in\">require</span>(<span class=\"string\">'./build'</span>)</span><br><span class=\"line\">cooking.set(&#123;</span><br><span class=\"line\">  entry: build.entries(),</span><br><span class=\"line\">  dist: <span class=\"string\">'./dist'</span>,</span><br><span class=\"line\">  template: build.templates(),</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    port: <span class=\"number\">8081</span>,</span><br><span class=\"line\">    publicPath: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  clean: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  hash: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  sourceMap: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  chunk: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  publicPath: <span class=\"string\">'/dist/'</span>,</span><br><span class=\"line\">  extractCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  alias: &#123;</span><br><span class=\"line\">    <span class=\"string\">'src'</span>: path.join(__dirname, <span class=\"string\">'src'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  extends: [<span class=\"string\">'vue2'</span>, <span class=\"string\">'buble'</span>, <span class=\"string\">'lint'</span>, <span class=\"string\">'autoprefixer'</span>],</span><br><span class=\"line\">  externals: build.externals()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = cooking.resolve()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>我们直接通过 cooking 命令行启动项目。<br><strong>cooking watch -p</strong><br>最后我们通过 build 构建项目，最终打包文件在 dist 目录里。<br><strong>cooking build -p</strong></p>\n<h2 id=\"开发目录说明\"><a href=\"#开发目录说明\" class=\"headerlink\" title=\"开发目录说明\"></a>开发目录说明</h2><p>** src –开发目录</p>\n<p> +components 自定义组件</p>\n<p> +pages 页面存放，文件夹名对应页面名字</p>\n<p> +assets 静态资源文件，如公用的样式和字体文件以及图片</p>\n<p>举个栗子：</p>\n<p>pages</p>\n<ul>\n<li>index<br>index.js   //页面初始化<br>app.vue    //页面逻辑，包括tempalte,script,style**</li>\n</ul>\n<h2 id=\"引入饿了么组件\"><a href=\"#引入饿了么组件\" class=\"headerlink\" title=\"引入饿了么组件\"></a>引入饿了么组件</h2><p>饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件</p>\n<p>安装饿了么组件 引入 Element<br><strong>npm i element-ui -S</strong><br>你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。</p>\n<blockquote>\n<p>¶ 完整引入<br>在 main.js 中写入以下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></span><br><span class=\"line\">Vue.use(ElementUI)</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>¶ 按需引入<br>借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。<br>首先，安装 <strong>babel-plugin-component：npm install babel-plugin-component -D</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></span><br><span class=\"line\">Vue.use(Button)</span><br><span class=\"line\">Vue.use(Select)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    render:<span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>然后，将 .babelrc 修改为：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"es2015\"</span>, <span class=\"string\">\"stage-0\"</span>, <span class=\"string\">\"stage-2\"</span>],</span><br><span class=\"line\">  <span class=\"string\">\"comments\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">\"env\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"production\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"plugins\"</span>: [</span><br><span class=\"line\">        [<span class=\"string\">\"transform-runtime\"</span>, &#123; <span class=\"string\">\"polyfill\"</span>: <span class=\"literal\">false</span>, <span class=\"string\">\"regenerator\"</span>: <span class=\"literal\">false</span> &#125;],</span><br><span class=\"line\">        [<span class=\"string\">\"component\"</span>, [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"string\">\"libraryName\"</span>: <span class=\"string\">\"element-ui\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"styleLibraryName\"</span>: <span class=\"string\">\"theme-default\"</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]]</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>参考脚手架：<a href=\"https://github.com/maimai123/cookingVue2.git\" target=\"_blank\" rel=\"noopener\">麦麦的github</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>学vue第一步，那肯定是要搭建一个简单地脚手架啦，用啥搭建呢 vue-cli是一个很好的脚手架组件，但我们今天用cooking来搭建一个多页面（means-&gt; 不是单页哦 单页项目run build以后生成的文件合并成一个，请求文件过于大，所以不建议。所以打包出多页面就刻不容缓啦~接下来跟着麦麦一起去学习吧）本文出自<a href=\"https://zhuanlan.zhihu.com/p/22610408\" target=\"_blank\" rel=\"noopener\">知乎</a></p>\n<h2 id=\"搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\"><a href=\"#搭建基础项目–直接通过-cooking-的命令行工具直接生成一个-Vue-项目\" class=\"headerlink\" title=\"搭建基础项目–直接通过 cooking 的命令行工具直接生成一个 Vue 项目\"></a>搭建基础项目–<font size=1>直接通过 cooking 的命令行工具直接生成一个 Vue 项目</font></h2><p><strong>npm i cooking-cli -g</strong><br>or 切换至淘宝镜像<br><strong>npm i cooking-cli -g –registry=<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a></strong><br>完成后可以到你的目录下执行下面指令创建一个目录名 xxx 的 Vue 项目，第一次执行需要安装脚手架的依赖。<br><strong>cooking create xxx vue</strong><br>接下来会让你选择一些选项，我们这次选择 Vue2 + bublé + 全局 cooking 的配置。</p>\n<blockquote>\n<p>[?] Give your app a name: multiple-pages<br>[?] Give your app a description: A vue project.<br>[?] Private? Yes<br>[?] What Vue version do you what? Vue 2<br>[?] What ES2015+ compiler do you what to use? bublé (only use wepback 2)<br>[?] What way use cooking do you want? Global cooking (webpack 2)<br>[?] Need dev server? Yes<br>[?] What CSS preprocessor do you want to use? Only CSS<br>[?] Setup unit tests with Karma + Mocha? No<br>[?] git repository:<br>[?] author:<br>[?] license: ISC<br>[?] Continue? Yes</p>\n</blockquote>\n<p>最后可以试试直接运行 npm run dev 看看能不能正常启动。使用全局 cooking 的好处是可以减少项目的依赖。</p>\n<h2 id=\"多页面项目分析\"><a href=\"#多页面项目分析\" class=\"headerlink\" title=\"多页面项目分析\"></a>多页面项目分析</h2><p>写一个名叫 app.json 的配置文件，每个入口共享公共的 CDN 也可以配置私有的 CDN，还可以配置其他基本信息。<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"pages\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"home\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"首页\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"entry\"</span>: <span class=\"string\">\"admin\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"title\"</span>: <span class=\"string\">\"后台\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cdn\"</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"basePath\"</span>: <span class=\"string\">\"./src/pages/\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"cdn\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"js\"</span>: [</span><br><span class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vue/2.0.0-rc.7/vue.min.js\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"//cdn.jsdelivr.net/vuex/2.0.0-rc.5/vuex.min.js\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">\"css\"</span>: []</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"externals\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"Vue\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vuex\"</span>: <span class=\"string\">\"Vuex\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>同时我们在 src/pages 目录下创建 home 和 admin 目录。每个目录下创建一个 index.js 和 app.vue 文件。</p>\n<p><strong>index.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123; <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br><strong>app.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h1&gt;首页&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p&gt;A vue project.&lt;/</span>p&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"配置-cooking-–入口文件\"><a href=\"#配置-cooking-–入口文件\" class=\"headerlink\" title=\"配置 cooking –入口文件\"></a>配置 cooking –<font size=1>入口文件</font></h2><p>接下来我们在生成的 cooking 配置文件上加工，这里我们要传入多入口的配置，从 app.json 里读取 entry 的信息，通过 basePath 拼接成文件路径。</p>\n<blockquote>\n<p><strong>var App = require(‘./app.json’)<br>var entries = function() {<br>  var result = {}<br>  App.pages.forEach(p =&gt; {<br>    result[p.entry] = path.resolve(App.basePath, p.entry)<br>  })<br>  return result<br>}<br>cooking.set({<br>  entry: entries()<br>})</strong></p>\n</blockquote>\n<h2 id=\"模板文件\"><a href=\"#模板文件\" class=\"headerlink\" title=\"模板文件\"></a>模板文件</h2><p>所有入口的页面我们都是通过 index.tpl 模板配置，只需要将公用 CDN 和私有 CDN 合并后拼接成 HTML 插入到模板内，同时引入入口文件和 vendor，通过 html-webpack-plugin 的配置选项，可以很方便的实现我们的需求。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"built_in\">require</span>(<span class=\"string\">'./app.json'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    css: (a.css || []).concat(b.css || []),</span><br><span class=\"line\">    js: (a.js || []).concat(b.js || [])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> templates = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> App.pages.map(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      title: p.title,</span><br><span class=\"line\">      filename: p.entry + <span class=\"string\">'.html'</span>,</span><br><span class=\"line\">      template: path.resolve(__dirname, <span class=\"string\">'index.tpl'</span>),</span><br><span class=\"line\">      cdn: merge(App.cdn, p.cdn),</span><br><span class=\"line\">      chunks: [<span class=\"string\">'vendor'</span>, <span class=\"string\">'manifest'</span>, p.entry]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cooking.set(&#123;</span><br><span class=\"line\">  template: templates()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">模板文件也要改造一下。支持生成我们指定的 CDN 的 HTML 以及其他配置项。具体语法参考插件文档。</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"utf-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.css) &#123; %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;link rel=\"stylesheet\" href=\"&lt;%= htmlWebpackPlugin.options.cdn.css[i] %&gt;\"&gt;&lt;% &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;div id=<span class=\"string\">\"app\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;% for (var i in htmlWebpackPlugin.options.cdn.js) &#123; %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;script src=\"&lt;%= htmlWebpackPlugin.options.cdn.js[i] %&gt;\"&gt;&lt;/</span>script&gt;&lt;% &#125; %&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/body&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"最终配置\"><a href=\"#最终配置\" class=\"headerlink\" title=\"最终配置\"></a>最终配置</h2><p>最后我们可以优化一下配置，将生成配置的函数提取到另一个文件内，让配置信息更清晰。那么最终的配置内容如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> cooking = <span class=\"built_in\">require</span>(<span class=\"string\">'cooking'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> build = <span class=\"built_in\">require</span>(<span class=\"string\">'./build'</span>)</span><br><span class=\"line\">cooking.set(&#123;</span><br><span class=\"line\">  entry: build.entries(),</span><br><span class=\"line\">  dist: <span class=\"string\">'./dist'</span>,</span><br><span class=\"line\">  template: build.templates(),</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    port: <span class=\"number\">8081</span>,</span><br><span class=\"line\">    publicPath: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  clean: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  hash: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  sourceMap: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  chunk: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  publicPath: <span class=\"string\">'/dist/'</span>,</span><br><span class=\"line\">  extractCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  alias: &#123;</span><br><span class=\"line\">    <span class=\"string\">'src'</span>: path.join(__dirname, <span class=\"string\">'src'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  extends: [<span class=\"string\">'vue2'</span>, <span class=\"string\">'buble'</span>, <span class=\"string\">'lint'</span>, <span class=\"string\">'autoprefixer'</span>],</span><br><span class=\"line\">  externals: build.externals()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = cooking.resolve()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>我们直接通过 cooking 命令行启动项目。<br><strong>cooking watch -p</strong><br>最后我们通过 build 构建项目，最终打包文件在 dist 目录里。<br><strong>cooking build -p</strong></p>\n<h2 id=\"开发目录说明\"><a href=\"#开发目录说明\" class=\"headerlink\" title=\"开发目录说明\"></a>开发目录说明</h2><p>** src –开发目录</p>\n<p> +components 自定义组件</p>\n<p> +pages 页面存放，文件夹名对应页面名字</p>\n<p> +assets 静态资源文件，如公用的样式和字体文件以及图片</p>\n<p>举个栗子：</p>\n<p>pages</p>\n<ul>\n<li>index<br>index.js   //页面初始化<br>app.vue    //页面逻辑，包括tempalte,script,style**</li>\n</ul>\n<h2 id=\"引入饿了么组件\"><a href=\"#引入饿了么组件\" class=\"headerlink\" title=\"引入饿了么组件\"></a>引入饿了么组件</h2><p>饿了么组件一出就引起广大vue爱好者的好评 我们当然不能落下啦 接下来来安装饿了么组件</p>\n<p>安装饿了么组件 引入 Element<br><strong>npm i element-ui -S</strong><br>你可以引入整个 Element，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。</p>\n<blockquote>\n<p>¶ 完整引入<br>在 main.js 中写入以下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></span><br><span class=\"line\">Vue.use(ElementUI)</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>¶ 按需引入<br>借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的。<br>首先，安装 <strong>babel-plugin-component：npm install babel-plugin-component -D</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-default/index.css'</span></span><br><span class=\"line\">Vue.use(Button)</span><br><span class=\"line\">Vue.use(Select)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    render:<span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>然后，将 .babelrc 修改为：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"es2015\"</span>, <span class=\"string\">\"stage-0\"</span>, <span class=\"string\">\"stage-2\"</span>],</span><br><span class=\"line\">  <span class=\"string\">\"comments\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">\"env\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"production\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"plugins\"</span>: [</span><br><span class=\"line\">        [<span class=\"string\">\"transform-runtime\"</span>, &#123; <span class=\"string\">\"polyfill\"</span>: <span class=\"literal\">false</span>, <span class=\"string\">\"regenerator\"</span>: <span class=\"literal\">false</span> &#125;],</span><br><span class=\"line\">        [<span class=\"string\">\"component\"</span>, [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"string\">\"libraryName\"</span>: <span class=\"string\">\"element-ui\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"styleLibraryName\"</span>: <span class=\"string\">\"theme-default\"</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]]</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>参考脚手架：<a href=\"https://github.com/maimai123/cookingVue2.git\" target=\"_blank\" rel=\"noopener\">麦麦的github</a></p>\n</blockquote>"},{"title":"张鑫旭最精简css reset css通用样式库","date":"2017-08-13T16:00:00.000Z","_content":"<font size=1>**如有转载，请注明出处。**</font>\n<h1>CSS reset</h1>\n```python\nbody{\n    line-height:1.4;\n    color:#333;\n    font-family:arial;\n    font-size: 12px;\n    background:white;\n}\ninput,textarea,select{\n    font-size:12px;\n    font-size:100%;\n    font-family:arial;\n    font-family:inherit;\n}\nbody,h1,h2,h3,h4,h5,h6,p,ul,ol,form{\n    margin:0;\n}\nh4,h5,h6{\n    font-size:1em;\n}\nul,ol{\n    padding-left:0;\n    list-style-type:none;\n}\n/*image with no-border*/\na img{border:0;}\nimg{border:0;}\n```\n<h1>css通用样式库</h1>\n```python\n.l{float:left;}.r{float:right;}.cl{clear:both;}\n.n{font-weight:normal; font-style:normal;}.b{font-weight:bold;}.i{font-style:italic;}\n.fa{font-family:Arial;}.fg{font-family:Georgia;}.ft{font-family:Tahoma;}.fl{font-family:Lucida Console;}.fs{font-family:'宋体';}.fw{font-family:'微软雅黑';}\n.tc{text-align:center;}.tr{text-align:right;}.tl{text-align:left;}\n.tdl{text-decoration:underline;}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none;}\n.g0{color:#000000;}.g3{color:#333333;}.g6{color:#666666;}.g9{color:#999999;}.red{color:red;}.wh{color:white;}\n.f0{font-size:0;}.f10{font-size:10px;}.f12{font-size:12px;}.f13{font-size:13px;}.f14{font-size:14px;}.f16{font-size:16px;}.f20{font-size:20px;}.f24{font-size:24px;}\n.vm{vertical-align:middle;}.vtb{vertical-align:text-bottom;}.vt{vertical-align:top;}.vn{vertical-align:-2px;}.vimg{margin-bottom:-3px;}\n.m0{margin:0;}.ml1{margin-left:1px;}.ml2{margin-left:2px;}.ml5{margin-left:5px;}.ml10{margin-left:10px;}.ml20{margin-left:20px;}.mr1{margin-right:1;}.mr2{margin-right:2px;}.mr5{margin-right:5px;}.mr10{margin-right:10px;}.mr20{margin-right:20px;}.mt1{margin-top:1;}.mt2{margin-top:2px;}.mt5{margin-top:5px;}.mt10{margin-top:10px;}.mt20{margin-top:20px;}.mb1{margin-bottom:1px;}.mb2{margin-bottom:2px;}.mb5{margin-bottom:5px;}.mb10{margin-bottom:10px;}.mb20{margin-bottom:20px;}.ml-1{margin-left:-1px;}.mt-1{margin-top:-1px;}\n.p1{padding:1px;}.pl1{padding-left:1px;}.pt1{padding-top:1px;}.pr1{padding-right:1px;}.pb1{padding-bottom:1px;}.p2{padding:2px;}.pl2{padding-left:2px;}.pt2{padding-top:2px;}.pr2{padding-right:2px;}.pb2{padding-bottom:2px;}.pl5{padding-left:5px;}.p5{padding:5px;}.pt5{padding-top:5px;}.pr5{padding-right:5px;}.pb5{padding-bottom:5px;}.p10{padding:10px;}.pl10{padding-left:10px;}.pt10{padding-top:10px;}.pr10{padding-right:10px;}.pb10{padding-bottom:10px;}.p20{padding:20px;}.pl20{padding-left:20px;}.pt20{padding-top:20px;}.pr20{padding-right:20px;}.pb20{padding-bottom:20px;}\n.rel{position:relative;}.abs{position:absolute;}\n.dn{display:none;}.db{display:block;}.dib{-moz-inline-stack:inline-block; display:inline-block;}.di{display:inline;}\n.ovh{overflow:hidden;}.ovs{overflow:scroll;}.vh{visibility:hidden;}.vv{visibility:visible;}\n.lh14{line-height:14px;}.lh16{line-height:16px;}.lh18{line-height:18px;}.lh20{line-height:20px;}.lh22{line-height:22px;}.lh24{line-height:24px;}\n.fix{*zoom:1;}.fix:after,.fix:before{display:block; content:\"clear\"; height:0; clear:both; overflow:hidden; visibility:hidden;}.z{_zoom:1;}\n```\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/css.md","raw":"---\ntitle: 张鑫旭最精简css reset css通用样式库\ndate: 2017-08-14\ntags: css\n---\n<font size=1>**如有转载，请注明出处。**</font>\n<h1>CSS reset</h1>\n```python\nbody{\n    line-height:1.4;\n    color:#333;\n    font-family:arial;\n    font-size: 12px;\n    background:white;\n}\ninput,textarea,select{\n    font-size:12px;\n    font-size:100%;\n    font-family:arial;\n    font-family:inherit;\n}\nbody,h1,h2,h3,h4,h5,h6,p,ul,ol,form{\n    margin:0;\n}\nh4,h5,h6{\n    font-size:1em;\n}\nul,ol{\n    padding-left:0;\n    list-style-type:none;\n}\n/*image with no-border*/\na img{border:0;}\nimg{border:0;}\n```\n<h1>css通用样式库</h1>\n```python\n.l{float:left;}.r{float:right;}.cl{clear:both;}\n.n{font-weight:normal; font-style:normal;}.b{font-weight:bold;}.i{font-style:italic;}\n.fa{font-family:Arial;}.fg{font-family:Georgia;}.ft{font-family:Tahoma;}.fl{font-family:Lucida Console;}.fs{font-family:'宋体';}.fw{font-family:'微软雅黑';}\n.tc{text-align:center;}.tr{text-align:right;}.tl{text-align:left;}\n.tdl{text-decoration:underline;}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none;}\n.g0{color:#000000;}.g3{color:#333333;}.g6{color:#666666;}.g9{color:#999999;}.red{color:red;}.wh{color:white;}\n.f0{font-size:0;}.f10{font-size:10px;}.f12{font-size:12px;}.f13{font-size:13px;}.f14{font-size:14px;}.f16{font-size:16px;}.f20{font-size:20px;}.f24{font-size:24px;}\n.vm{vertical-align:middle;}.vtb{vertical-align:text-bottom;}.vt{vertical-align:top;}.vn{vertical-align:-2px;}.vimg{margin-bottom:-3px;}\n.m0{margin:0;}.ml1{margin-left:1px;}.ml2{margin-left:2px;}.ml5{margin-left:5px;}.ml10{margin-left:10px;}.ml20{margin-left:20px;}.mr1{margin-right:1;}.mr2{margin-right:2px;}.mr5{margin-right:5px;}.mr10{margin-right:10px;}.mr20{margin-right:20px;}.mt1{margin-top:1;}.mt2{margin-top:2px;}.mt5{margin-top:5px;}.mt10{margin-top:10px;}.mt20{margin-top:20px;}.mb1{margin-bottom:1px;}.mb2{margin-bottom:2px;}.mb5{margin-bottom:5px;}.mb10{margin-bottom:10px;}.mb20{margin-bottom:20px;}.ml-1{margin-left:-1px;}.mt-1{margin-top:-1px;}\n.p1{padding:1px;}.pl1{padding-left:1px;}.pt1{padding-top:1px;}.pr1{padding-right:1px;}.pb1{padding-bottom:1px;}.p2{padding:2px;}.pl2{padding-left:2px;}.pt2{padding-top:2px;}.pr2{padding-right:2px;}.pb2{padding-bottom:2px;}.pl5{padding-left:5px;}.p5{padding:5px;}.pt5{padding-top:5px;}.pr5{padding-right:5px;}.pb5{padding-bottom:5px;}.p10{padding:10px;}.pl10{padding-left:10px;}.pt10{padding-top:10px;}.pr10{padding-right:10px;}.pb10{padding-bottom:10px;}.p20{padding:20px;}.pl20{padding-left:20px;}.pt20{padding-top:20px;}.pr20{padding-right:20px;}.pb20{padding-bottom:20px;}\n.rel{position:relative;}.abs{position:absolute;}\n.dn{display:none;}.db{display:block;}.dib{-moz-inline-stack:inline-block; display:inline-block;}.di{display:inline;}\n.ovh{overflow:hidden;}.ovs{overflow:scroll;}.vh{visibility:hidden;}.vv{visibility:visible;}\n.lh14{line-height:14px;}.lh16{line-height:16px;}.lh18{line-height:18px;}.lh20{line-height:20px;}.lh22{line-height:22px;}.lh24{line-height:24px;}\n.fix{*zoom:1;}.fix:after,.fix:before{display:block; content:\"clear\"; height:0; clear:both; overflow:hidden; visibility:hidden;}.z{_zoom:1;}\n```\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"css","published":1,"updated":"2020-02-26T10:28:10.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0yy0009000mbxl223t6","content":"<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<p><h1>CSS reset</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body&#123;</span><br><span class=\"line\">    line-height:<span class=\"number\">1.4</span>;</span><br><span class=\"line\">    color:<span class=\"comment\">#333;</span></span><br><span class=\"line\">    font-family:arial;</span><br><span class=\"line\">    font-size: <span class=\"number\">12</span>px;</span><br><span class=\"line\">    background:white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">input,textarea,select&#123;</span><br><span class=\"line\">    font-size:<span class=\"number\">12</span>px;</span><br><span class=\"line\">    font-size:<span class=\"number\">100</span>%;</span><br><span class=\"line\">    font-family:arial;</span><br><span class=\"line\">    font-family:inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">body,h1,h2,h3,h4,h5,h6,p,ul,ol,form&#123;</span><br><span class=\"line\">    margin:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">h4,h5,h6&#123;</span><br><span class=\"line\">    font-size:<span class=\"number\">1</span>em;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul,ol&#123;</span><br><span class=\"line\">    padding-left:<span class=\"number\">0</span>;</span><br><span class=\"line\">    list-style-type:none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*image <span class=\"keyword\">with</span> no-border*/</span><br><span class=\"line\">a img&#123;border:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">img&#123;border:<span class=\"number\">0</span>;&#125;</span><br></pre></td></tr></table></figure></p>\n<p><h1>css通用样式库</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.l&#123;float:left;&#125;.r&#123;float:right;&#125;.cl&#123;clear:both;&#125;</span><br><span class=\"line\">.n&#123;font-weight:normal; font-style:normal;&#125;.b&#123;font-weight:bold;&#125;.i&#123;font-style:italic;&#125;</span><br><span class=\"line\">.fa&#123;font-family:Arial;&#125;.fg&#123;font-family:Georgia;&#125;.ft&#123;font-family:Tahoma;&#125;.fl&#123;font-family:Lucida Console;&#125;.fs&#123;font-family:<span class=\"string\">'宋体'</span>;&#125;.fw&#123;font-family:<span class=\"string\">'微软雅黑'</span>;&#125;</span><br><span class=\"line\">.tc&#123;text-align:center;&#125;.tr&#123;text-align:right;&#125;.tl&#123;text-align:left;&#125;</span><br><span class=\"line\">.tdl&#123;text-decoration:underline;&#125;.tdn,.tdn:hover,a.tdl:hover&#123;text-decoration:none;&#125;</span><br><span class=\"line\">.g0&#123;color:<span class=\"comment\">#000000;&#125;.g3&#123;color:#333333;&#125;.g6&#123;color:#666666;&#125;.g9&#123;color:#999999;&#125;.red&#123;color:red;&#125;.wh&#123;color:white;&#125;</span></span><br><span class=\"line\">.f0&#123;font-size:<span class=\"number\">0</span>;&#125;.f10&#123;font-size:<span class=\"number\">10</span>px;&#125;.f12&#123;font-size:<span class=\"number\">12</span>px;&#125;.f13&#123;font-size:<span class=\"number\">13</span>px;&#125;.f14&#123;font-size:<span class=\"number\">14</span>px;&#125;.f16&#123;font-size:<span class=\"number\">16</span>px;&#125;.f20&#123;font-size:<span class=\"number\">20</span>px;&#125;.f24&#123;font-size:<span class=\"number\">24</span>px;&#125;</span><br><span class=\"line\">.vm&#123;vertical-align:middle;&#125;.vtb&#123;vertical-align:text-bottom;&#125;.vt&#123;vertical-align:top;&#125;.vn&#123;vertical-align:<span class=\"number\">-2</span>px;&#125;.vimg&#123;margin-bottom:<span class=\"number\">-3</span>px;&#125;</span><br><span class=\"line\">.m0&#123;margin:<span class=\"number\">0</span>;&#125;.ml1&#123;margin-left:<span class=\"number\">1</span>px;&#125;.ml2&#123;margin-left:<span class=\"number\">2</span>px;&#125;.ml5&#123;margin-left:<span class=\"number\">5</span>px;&#125;.ml10&#123;margin-left:<span class=\"number\">10</span>px;&#125;.ml20&#123;margin-left:<span class=\"number\">20</span>px;&#125;.mr1&#123;margin-right:<span class=\"number\">1</span>;&#125;.mr2&#123;margin-right:<span class=\"number\">2</span>px;&#125;.mr5&#123;margin-right:<span class=\"number\">5</span>px;&#125;.mr10&#123;margin-right:<span class=\"number\">10</span>px;&#125;.mr20&#123;margin-right:<span class=\"number\">20</span>px;&#125;.mt1&#123;margin-top:<span class=\"number\">1</span>;&#125;.mt2&#123;margin-top:<span class=\"number\">2</span>px;&#125;.mt5&#123;margin-top:<span class=\"number\">5</span>px;&#125;.mt10&#123;margin-top:<span class=\"number\">10</span>px;&#125;.mt20&#123;margin-top:<span class=\"number\">20</span>px;&#125;.mb1&#123;margin-bottom:<span class=\"number\">1</span>px;&#125;.mb2&#123;margin-bottom:<span class=\"number\">2</span>px;&#125;.mb5&#123;margin-bottom:<span class=\"number\">5</span>px;&#125;.mb10&#123;margin-bottom:<span class=\"number\">10</span>px;&#125;.mb20&#123;margin-bottom:<span class=\"number\">20</span>px;&#125;.ml<span class=\"number\">-1</span>&#123;margin-left:<span class=\"number\">-1</span>px;&#125;.mt<span class=\"number\">-1</span>&#123;margin-top:<span class=\"number\">-1</span>px;&#125;</span><br><span class=\"line\">.p1&#123;padding:<span class=\"number\">1</span>px;&#125;.pl1&#123;padding-left:<span class=\"number\">1</span>px;&#125;.pt1&#123;padding-top:<span class=\"number\">1</span>px;&#125;.pr1&#123;padding-right:<span class=\"number\">1</span>px;&#125;.pb1&#123;padding-bottom:<span class=\"number\">1</span>px;&#125;.p2&#123;padding:<span class=\"number\">2</span>px;&#125;.pl2&#123;padding-left:<span class=\"number\">2</span>px;&#125;.pt2&#123;padding-top:<span class=\"number\">2</span>px;&#125;.pr2&#123;padding-right:<span class=\"number\">2</span>px;&#125;.pb2&#123;padding-bottom:<span class=\"number\">2</span>px;&#125;.pl5&#123;padding-left:<span class=\"number\">5</span>px;&#125;.p5&#123;padding:<span class=\"number\">5</span>px;&#125;.pt5&#123;padding-top:<span class=\"number\">5</span>px;&#125;.pr5&#123;padding-right:<span class=\"number\">5</span>px;&#125;.pb5&#123;padding-bottom:<span class=\"number\">5</span>px;&#125;.p10&#123;padding:<span class=\"number\">10</span>px;&#125;.pl10&#123;padding-left:<span class=\"number\">10</span>px;&#125;.pt10&#123;padding-top:<span class=\"number\">10</span>px;&#125;.pr10&#123;padding-right:<span class=\"number\">10</span>px;&#125;.pb10&#123;padding-bottom:<span class=\"number\">10</span>px;&#125;.p20&#123;padding:<span class=\"number\">20</span>px;&#125;.pl20&#123;padding-left:<span class=\"number\">20</span>px;&#125;.pt20&#123;padding-top:<span class=\"number\">20</span>px;&#125;.pr20&#123;padding-right:<span class=\"number\">20</span>px;&#125;.pb20&#123;padding-bottom:<span class=\"number\">20</span>px;&#125;</span><br><span class=\"line\">.rel&#123;position:relative;&#125;.abs&#123;position:absolute;&#125;</span><br><span class=\"line\">.dn&#123;display:none;&#125;.db&#123;display:block;&#125;.dib&#123;-moz-inline-stack:inline-block; display:inline-block;&#125;.di&#123;display:inline;&#125;</span><br><span class=\"line\">.ovh&#123;overflow:hidden;&#125;.ovs&#123;overflow:scroll;&#125;.vh&#123;visibility:hidden;&#125;.vv&#123;visibility:visible;&#125;</span><br><span class=\"line\">.lh14&#123;line-height:<span class=\"number\">14</span>px;&#125;.lh16&#123;line-height:<span class=\"number\">16</span>px;&#125;.lh18&#123;line-height:<span class=\"number\">18</span>px;&#125;.lh20&#123;line-height:<span class=\"number\">20</span>px;&#125;.lh22&#123;line-height:<span class=\"number\">22</span>px;&#125;.lh24&#123;line-height:<span class=\"number\">24</span>px;&#125;</span><br><span class=\"line\">.fix&#123;*zoom:<span class=\"number\">1</span>;&#125;.fix:after,.fix:before&#123;display:block; content:<span class=\"string\">\"clear\"</span>; height:<span class=\"number\">0</span>; clear:both; overflow:hidden; visibility:hidden;&#125;.z&#123;_zoom:<span class=\"number\">1</span>;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<p><h1>CSS reset</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body&#123;</span><br><span class=\"line\">    line-height:<span class=\"number\">1.4</span>;</span><br><span class=\"line\">    color:<span class=\"comment\">#333;</span></span><br><span class=\"line\">    font-family:arial;</span><br><span class=\"line\">    font-size: <span class=\"number\">12</span>px;</span><br><span class=\"line\">    background:white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">input,textarea,select&#123;</span><br><span class=\"line\">    font-size:<span class=\"number\">12</span>px;</span><br><span class=\"line\">    font-size:<span class=\"number\">100</span>%;</span><br><span class=\"line\">    font-family:arial;</span><br><span class=\"line\">    font-family:inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">body,h1,h2,h3,h4,h5,h6,p,ul,ol,form&#123;</span><br><span class=\"line\">    margin:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">h4,h5,h6&#123;</span><br><span class=\"line\">    font-size:<span class=\"number\">1</span>em;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul,ol&#123;</span><br><span class=\"line\">    padding-left:<span class=\"number\">0</span>;</span><br><span class=\"line\">    list-style-type:none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*image <span class=\"keyword\">with</span> no-border*/</span><br><span class=\"line\">a img&#123;border:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">img&#123;border:<span class=\"number\">0</span>;&#125;</span><br></pre></td></tr></table></figure></p>\n<p><h1>css通用样式库</h1><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.l&#123;float:left;&#125;.r&#123;float:right;&#125;.cl&#123;clear:both;&#125;</span><br><span class=\"line\">.n&#123;font-weight:normal; font-style:normal;&#125;.b&#123;font-weight:bold;&#125;.i&#123;font-style:italic;&#125;</span><br><span class=\"line\">.fa&#123;font-family:Arial;&#125;.fg&#123;font-family:Georgia;&#125;.ft&#123;font-family:Tahoma;&#125;.fl&#123;font-family:Lucida Console;&#125;.fs&#123;font-family:<span class=\"string\">'宋体'</span>;&#125;.fw&#123;font-family:<span class=\"string\">'微软雅黑'</span>;&#125;</span><br><span class=\"line\">.tc&#123;text-align:center;&#125;.tr&#123;text-align:right;&#125;.tl&#123;text-align:left;&#125;</span><br><span class=\"line\">.tdl&#123;text-decoration:underline;&#125;.tdn,.tdn:hover,a.tdl:hover&#123;text-decoration:none;&#125;</span><br><span class=\"line\">.g0&#123;color:<span class=\"comment\">#000000;&#125;.g3&#123;color:#333333;&#125;.g6&#123;color:#666666;&#125;.g9&#123;color:#999999;&#125;.red&#123;color:red;&#125;.wh&#123;color:white;&#125;</span></span><br><span class=\"line\">.f0&#123;font-size:<span class=\"number\">0</span>;&#125;.f10&#123;font-size:<span class=\"number\">10</span>px;&#125;.f12&#123;font-size:<span class=\"number\">12</span>px;&#125;.f13&#123;font-size:<span class=\"number\">13</span>px;&#125;.f14&#123;font-size:<span class=\"number\">14</span>px;&#125;.f16&#123;font-size:<span class=\"number\">16</span>px;&#125;.f20&#123;font-size:<span class=\"number\">20</span>px;&#125;.f24&#123;font-size:<span class=\"number\">24</span>px;&#125;</span><br><span class=\"line\">.vm&#123;vertical-align:middle;&#125;.vtb&#123;vertical-align:text-bottom;&#125;.vt&#123;vertical-align:top;&#125;.vn&#123;vertical-align:<span class=\"number\">-2</span>px;&#125;.vimg&#123;margin-bottom:<span class=\"number\">-3</span>px;&#125;</span><br><span class=\"line\">.m0&#123;margin:<span class=\"number\">0</span>;&#125;.ml1&#123;margin-left:<span class=\"number\">1</span>px;&#125;.ml2&#123;margin-left:<span class=\"number\">2</span>px;&#125;.ml5&#123;margin-left:<span class=\"number\">5</span>px;&#125;.ml10&#123;margin-left:<span class=\"number\">10</span>px;&#125;.ml20&#123;margin-left:<span class=\"number\">20</span>px;&#125;.mr1&#123;margin-right:<span class=\"number\">1</span>;&#125;.mr2&#123;margin-right:<span class=\"number\">2</span>px;&#125;.mr5&#123;margin-right:<span class=\"number\">5</span>px;&#125;.mr10&#123;margin-right:<span class=\"number\">10</span>px;&#125;.mr20&#123;margin-right:<span class=\"number\">20</span>px;&#125;.mt1&#123;margin-top:<span class=\"number\">1</span>;&#125;.mt2&#123;margin-top:<span class=\"number\">2</span>px;&#125;.mt5&#123;margin-top:<span class=\"number\">5</span>px;&#125;.mt10&#123;margin-top:<span class=\"number\">10</span>px;&#125;.mt20&#123;margin-top:<span class=\"number\">20</span>px;&#125;.mb1&#123;margin-bottom:<span class=\"number\">1</span>px;&#125;.mb2&#123;margin-bottom:<span class=\"number\">2</span>px;&#125;.mb5&#123;margin-bottom:<span class=\"number\">5</span>px;&#125;.mb10&#123;margin-bottom:<span class=\"number\">10</span>px;&#125;.mb20&#123;margin-bottom:<span class=\"number\">20</span>px;&#125;.ml<span class=\"number\">-1</span>&#123;margin-left:<span class=\"number\">-1</span>px;&#125;.mt<span class=\"number\">-1</span>&#123;margin-top:<span class=\"number\">-1</span>px;&#125;</span><br><span class=\"line\">.p1&#123;padding:<span class=\"number\">1</span>px;&#125;.pl1&#123;padding-left:<span class=\"number\">1</span>px;&#125;.pt1&#123;padding-top:<span class=\"number\">1</span>px;&#125;.pr1&#123;padding-right:<span class=\"number\">1</span>px;&#125;.pb1&#123;padding-bottom:<span class=\"number\">1</span>px;&#125;.p2&#123;padding:<span class=\"number\">2</span>px;&#125;.pl2&#123;padding-left:<span class=\"number\">2</span>px;&#125;.pt2&#123;padding-top:<span class=\"number\">2</span>px;&#125;.pr2&#123;padding-right:<span class=\"number\">2</span>px;&#125;.pb2&#123;padding-bottom:<span class=\"number\">2</span>px;&#125;.pl5&#123;padding-left:<span class=\"number\">5</span>px;&#125;.p5&#123;padding:<span class=\"number\">5</span>px;&#125;.pt5&#123;padding-top:<span class=\"number\">5</span>px;&#125;.pr5&#123;padding-right:<span class=\"number\">5</span>px;&#125;.pb5&#123;padding-bottom:<span class=\"number\">5</span>px;&#125;.p10&#123;padding:<span class=\"number\">10</span>px;&#125;.pl10&#123;padding-left:<span class=\"number\">10</span>px;&#125;.pt10&#123;padding-top:<span class=\"number\">10</span>px;&#125;.pr10&#123;padding-right:<span class=\"number\">10</span>px;&#125;.pb10&#123;padding-bottom:<span class=\"number\">10</span>px;&#125;.p20&#123;padding:<span class=\"number\">20</span>px;&#125;.pl20&#123;padding-left:<span class=\"number\">20</span>px;&#125;.pt20&#123;padding-top:<span class=\"number\">20</span>px;&#125;.pr20&#123;padding-right:<span class=\"number\">20</span>px;&#125;.pb20&#123;padding-bottom:<span class=\"number\">20</span>px;&#125;</span><br><span class=\"line\">.rel&#123;position:relative;&#125;.abs&#123;position:absolute;&#125;</span><br><span class=\"line\">.dn&#123;display:none;&#125;.db&#123;display:block;&#125;.dib&#123;-moz-inline-stack:inline-block; display:inline-block;&#125;.di&#123;display:inline;&#125;</span><br><span class=\"line\">.ovh&#123;overflow:hidden;&#125;.ovs&#123;overflow:scroll;&#125;.vh&#123;visibility:hidden;&#125;.vv&#123;visibility:visible;&#125;</span><br><span class=\"line\">.lh14&#123;line-height:<span class=\"number\">14</span>px;&#125;.lh16&#123;line-height:<span class=\"number\">16</span>px;&#125;.lh18&#123;line-height:<span class=\"number\">18</span>px;&#125;.lh20&#123;line-height:<span class=\"number\">20</span>px;&#125;.lh22&#123;line-height:<span class=\"number\">22</span>px;&#125;.lh24&#123;line-height:<span class=\"number\">24</span>px;&#125;</span><br><span class=\"line\">.fix&#123;*zoom:<span class=\"number\">1</span>;&#125;.fix:after,.fix:before&#123;display:block; content:<span class=\"string\">\"clear\"</span>; height:<span class=\"number\">0</span>; clear:both; overflow:hidden; visibility:hidden;&#125;.z&#123;_zoom:<span class=\"number\">1</span>;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"简单的写一个chrome扩展程序（使用vue）","date":"2020-03-17T16:00:00.000Z","_content":"哈哈哈 终于对chrome 扩展程序下手了，之前就看过这方面的资料，刚好这次公司要做一个简单的扩展\n之前愚蠢的认为这个扩展只能在chrome里使用，其实除了Chrome浏览器之外，chrome 扩展程序还可以运行在所有webkit内核的国产浏览器，比如360极速浏览器、360安全浏览器、搜狗浏览器、QQ浏览器等等\n好啦！！我们下来来学学看！\n\n[这里是我的demo地址](https://github.com/maimai123/chrome-todo)\n\n# let's start!\n<font size=1>**[转载至](https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html)**</font>\n> 开发与调试\n\n*Chrome插件没有严格的项目结构要求，只要保证本目录有一个**manifest.json**即可，也不需要专门的IDE，普通的web开发工具即可。*\n\n*从右上角菜单->更多工具->扩展程序可以进入 插件管理页面，也可以直接在地址栏输入 [chrome://extensions](chrome://extensions) 访问。*\n\n*勾选开发者模式即可以文件夹的形式直接加载插件，否则只能安装.crx格式的文件。Chrome要求插件必须从它的Chrome应用商店安装，其它任何网站下载的都无法直接安装，所以，其实我们可以把crx文件解压，然后通过开发者模式直接加载。*\n\n*开发中，代码有任何改动都必须重新加载插件，只需要在插件管理页按下Ctrl+R即可，以防万一最好还把页面刷新一下。*\n\n> manifest.json\n\n这是一个Chrome插件最重要也是必不可少的文件，用来配置所有和插件相关的配置，必须放在根目录。其中，manifest_version、name、version3个是必不可少的，description和icons是推荐的。\n\n下面是我的 manifest.json\n[文档地址](http://chrome.cenchy.com/permission_warnings.html)\n```javascript\n  // 这里就展示了一下我用到的一些配置，其他的可以查询文档哦 文档地址放在上面了\n  {\n    \"name\": \"todo\",\n    \"version\": \"1.0.0\",\n    \"manifest_version\": 2, // 必须是2\n    \"description\": \"chrome plugin demo\",\n    \"browser_action\": {\n      \"default_icon\": \"assets/icon.png\",\n      \"default_title\": \"todo\",\n      \"default_popup\": \"index.html\"\n    },\n    \"icons\":\n    {\n      \"16\": \"assets/icon.png\",\n      \"48\": \"assets/icon.png\",\n      \"128\": \"assets/icon.png\"\n    },\n    \"content_security_policy\": \"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval'; object-src 'self' ;\",\n    \"homepage_url\": \"https://maimai123.github.io\", // 插件主页，不要浪费了这个免费广告位\n    \"background\":\n    {\n      // 2种指定方式，如果指定JS，那么会自动生成一个背景页 我这边就是用的js\n      // \"page\": \"background.html\",\n      \"scripts\": [\"background.js\"]\n    },\n    \"permissions\": // 权限申请\n      [\n        \"contextMenus\",\n        \"tabs\",\n        \"notifications\",\n        \"storage\",\n        \"cookies\",\n        \"webRequest\",\n        \"webRequestBlocking\",\n        \"background\",\n        \"https://*/*\",\n        \"http://*/*\"\n      ]\n  }\n\n```\n> background:\n\n*background是一个常驻的页面，它的生命周期是插件中所有类型页面中最长的，它随着浏览器的打开而打开，随着浏览器的关闭而关闭，所以通常把需要一直运行的、启动就运行的、全局的代码放在background里面。*\n\n*background的权限非常高，几乎可以调用所有的Chrome扩展API（除了devtools），而且它可以无限制跨域，也就是可以跨域访问任何网站而无需要求对方设置CORS*\n\n*需要特别说明的是，你怎么查看你再background里面打印的东西呢，直接扩展上右击打开的可不是background哦，需要你再扩展程序页面打击背景页查看哦。\n\n```javascript\n// 这里是我的background.js 简单的获取数据\nlet url = 'http://192.168.31.194:8002';\n\nlet cookie;\n\nchrome.cookies.get({ // 获取cookie\n\turl: 'http://192.168.31.221',\n\tname: 'SESSION'\n}, function (cookie) {\n\tcookie = cookie.value;\n});\n\n  function fetchUserInfo () { // 在js上可以通过chrome.extension.getBackgroundPage().fetchUserInfo()调用到方法\n    return fetchData(url + '/api/user/getUserInfo');\n  }\n\n  function fetchData (url) {\n    return new Promise((resolve, reject) => {\n      fetch(url, {\n        method:'GET',\n        credentials: 'include',\n        headers: {\n          Authorization: 'admin',\n          Cookie: cookie\n        }\n      })\n      .then(async function(response) {\n        const { data } = await response.json();\n        resolve(data);\n      })\n      .catch(function(err){\n        console.log(\"err:\" + err);\n        reject(err);\n      });\n    })\n  }\n```\n\n> popup\n\n*popup是点击图标时打开的一个小窗口网页，焦点离开网页就立即关闭，一般用来做一些临时性的交互。*\n*在权限上和background非常类似，它们之间最大的不同是生命周期的不同，popup中可以直接通过chrome.extension.getBackgroundPage()获取background的window对象。*\n\n> 如何在扩展程序中使用vue呢?\n\n```javascript\n  // 在popup.html中直接引用 我也用了swiper 也是直接引入\n  <link rel=\"stylesheet\" href=\"css/swiper.min.css\" />\n  <script src=\"./js/vue.js\"></script>\n  <script src=\"./js/swiper.min.js\"></script>\n  <script src=\"./js/vue-awesome-swiper.js\"></script>\n\n  <div id=\"app\">\n    <swiper ref=\"mySwiper\" :options=\"swiperOption\">\n      <swiper-slide v-for=\"item in list\" :key=\"item.date\">\n        <div class=\"item\" >\n          <div class=\"week\">{{ item.week }}</div>\n          <div class=\"day\">{{ new Date(item.date).getDate() }}</div>\n        </div>\n      </swiper-slide>\n    </swiper>\n  </div>\n\n  // js文件中实例化\n  var vm = new Vue({\n    el:\"#app\",\n    data() {\n      let self = this; // 用self指向this是因为直接在里面拿不到正确的this\n      return {\n        swiperOption: { // swiper参数可以看文档哦\n          slidesPerView: 3,\n          spaceBetween: 20,\n          centeredSlides: true,\n          slideToClickedSlide:true,\n          on: {\n            click: () => {\n              let index = this.swiper.clickedIndex;\n              self.handleChangeCurrent(index)\n            }\n          }\n        },\n        list: []\n      }\n    },\n    computed: {\n      swiper() { // 在方法中直接this.swiper可以拿到swiper\n        return this.$refs.mySwiper.swiper\n      }\n    },\n    beforeDestroy () { // 离开了记得销毁哦\n      this.swiper = null;\n    },\n    methods: {\n      handleChangeCurrent(index) {\n        // 可以在滑动的之后做一些事情\n      }\n    }\n  });\n```\n\n> 在开发过程中我也需要了一点问题，如果你们也遇到了可以参考哦\n1、在文件内直接写js报错\n\n```javascript\n  <script type=\"text/javascript\">这里是你的代码</script> // 运行到此处出错 解决办法：将代码保存为独立的js文件，然后动态引用即可。\n  // 下面是参考文章\n```\n[Chrome扩展popup页面使用JavaScript脚本报错: Refused to execute inline script because....](http://www.oceancoder.cn/post/popup-invoke-js-error.html)\n\n> 2、Chrome Extension 中的 CSP（Content Security Policy）\n\n*在进行Chrome拓展程序开发的时候，我们经常会遇到需要加载第三方库的情况，常见的如Jquery/Bootstrap库等,然而Chrome Extension的开发与一般网页不同，当我们在页面中加入如下代码时*\n\n*我们看到浏览器拒绝加载这个执行语句，因为它违反了Content Security Policy(简称CSP)机制*\n\n*setTimeout 等都是不允许的*\n\n*提示拒绝 ‘evaluate a string as JavaScript’ ，我们查阅官方文档就可以发现 eval() 函数同样是被CSP所禁止,类似的还有setTimeout(String), setInterval(String) 和new Function(String)*\n\n*那要怎么解决呢，官方文档提供了一种解决办法，叫做 放宽默认策略 （关于放宽默认策略更多的介绍，可以访问Content Security Policy Reference来获取），通过添加 ‘unsafe-eval’ 来实现，即在mainfest.json中加入下面代码：*\n\n```javascript\n  \"content_security_policy\": \"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval' https://cdn.bootcss.com; object-src 'self' ;\",\n  // 下面是参考文章\n```\n[Chrome Extension 中的 CSP（Content Security Policy） 开发小记](https://blog.csdn.net/qq_21859119/article/details/78802687)\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/chrome.md","raw":"---\ntitle: 简单的写一个chrome扩展程序（使用vue）\ndate: 2020-03-18\ntags: extensions\n---\n哈哈哈 终于对chrome 扩展程序下手了，之前就看过这方面的资料，刚好这次公司要做一个简单的扩展\n之前愚蠢的认为这个扩展只能在chrome里使用，其实除了Chrome浏览器之外，chrome 扩展程序还可以运行在所有webkit内核的国产浏览器，比如360极速浏览器、360安全浏览器、搜狗浏览器、QQ浏览器等等\n好啦！！我们下来来学学看！\n\n[这里是我的demo地址](https://github.com/maimai123/chrome-todo)\n\n# let's start!\n<font size=1>**[转载至](https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html)**</font>\n> 开发与调试\n\n*Chrome插件没有严格的项目结构要求，只要保证本目录有一个**manifest.json**即可，也不需要专门的IDE，普通的web开发工具即可。*\n\n*从右上角菜单->更多工具->扩展程序可以进入 插件管理页面，也可以直接在地址栏输入 [chrome://extensions](chrome://extensions) 访问。*\n\n*勾选开发者模式即可以文件夹的形式直接加载插件，否则只能安装.crx格式的文件。Chrome要求插件必须从它的Chrome应用商店安装，其它任何网站下载的都无法直接安装，所以，其实我们可以把crx文件解压，然后通过开发者模式直接加载。*\n\n*开发中，代码有任何改动都必须重新加载插件，只需要在插件管理页按下Ctrl+R即可，以防万一最好还把页面刷新一下。*\n\n> manifest.json\n\n这是一个Chrome插件最重要也是必不可少的文件，用来配置所有和插件相关的配置，必须放在根目录。其中，manifest_version、name、version3个是必不可少的，description和icons是推荐的。\n\n下面是我的 manifest.json\n[文档地址](http://chrome.cenchy.com/permission_warnings.html)\n```javascript\n  // 这里就展示了一下我用到的一些配置，其他的可以查询文档哦 文档地址放在上面了\n  {\n    \"name\": \"todo\",\n    \"version\": \"1.0.0\",\n    \"manifest_version\": 2, // 必须是2\n    \"description\": \"chrome plugin demo\",\n    \"browser_action\": {\n      \"default_icon\": \"assets/icon.png\",\n      \"default_title\": \"todo\",\n      \"default_popup\": \"index.html\"\n    },\n    \"icons\":\n    {\n      \"16\": \"assets/icon.png\",\n      \"48\": \"assets/icon.png\",\n      \"128\": \"assets/icon.png\"\n    },\n    \"content_security_policy\": \"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval'; object-src 'self' ;\",\n    \"homepage_url\": \"https://maimai123.github.io\", // 插件主页，不要浪费了这个免费广告位\n    \"background\":\n    {\n      // 2种指定方式，如果指定JS，那么会自动生成一个背景页 我这边就是用的js\n      // \"page\": \"background.html\",\n      \"scripts\": [\"background.js\"]\n    },\n    \"permissions\": // 权限申请\n      [\n        \"contextMenus\",\n        \"tabs\",\n        \"notifications\",\n        \"storage\",\n        \"cookies\",\n        \"webRequest\",\n        \"webRequestBlocking\",\n        \"background\",\n        \"https://*/*\",\n        \"http://*/*\"\n      ]\n  }\n\n```\n> background:\n\n*background是一个常驻的页面，它的生命周期是插件中所有类型页面中最长的，它随着浏览器的打开而打开，随着浏览器的关闭而关闭，所以通常把需要一直运行的、启动就运行的、全局的代码放在background里面。*\n\n*background的权限非常高，几乎可以调用所有的Chrome扩展API（除了devtools），而且它可以无限制跨域，也就是可以跨域访问任何网站而无需要求对方设置CORS*\n\n*需要特别说明的是，你怎么查看你再background里面打印的东西呢，直接扩展上右击打开的可不是background哦，需要你再扩展程序页面打击背景页查看哦。\n\n```javascript\n// 这里是我的background.js 简单的获取数据\nlet url = 'http://192.168.31.194:8002';\n\nlet cookie;\n\nchrome.cookies.get({ // 获取cookie\n\turl: 'http://192.168.31.221',\n\tname: 'SESSION'\n}, function (cookie) {\n\tcookie = cookie.value;\n});\n\n  function fetchUserInfo () { // 在js上可以通过chrome.extension.getBackgroundPage().fetchUserInfo()调用到方法\n    return fetchData(url + '/api/user/getUserInfo');\n  }\n\n  function fetchData (url) {\n    return new Promise((resolve, reject) => {\n      fetch(url, {\n        method:'GET',\n        credentials: 'include',\n        headers: {\n          Authorization: 'admin',\n          Cookie: cookie\n        }\n      })\n      .then(async function(response) {\n        const { data } = await response.json();\n        resolve(data);\n      })\n      .catch(function(err){\n        console.log(\"err:\" + err);\n        reject(err);\n      });\n    })\n  }\n```\n\n> popup\n\n*popup是点击图标时打开的一个小窗口网页，焦点离开网页就立即关闭，一般用来做一些临时性的交互。*\n*在权限上和background非常类似，它们之间最大的不同是生命周期的不同，popup中可以直接通过chrome.extension.getBackgroundPage()获取background的window对象。*\n\n> 如何在扩展程序中使用vue呢?\n\n```javascript\n  // 在popup.html中直接引用 我也用了swiper 也是直接引入\n  <link rel=\"stylesheet\" href=\"css/swiper.min.css\" />\n  <script src=\"./js/vue.js\"></script>\n  <script src=\"./js/swiper.min.js\"></script>\n  <script src=\"./js/vue-awesome-swiper.js\"></script>\n\n  <div id=\"app\">\n    <swiper ref=\"mySwiper\" :options=\"swiperOption\">\n      <swiper-slide v-for=\"item in list\" :key=\"item.date\">\n        <div class=\"item\" >\n          <div class=\"week\">{{ item.week }}</div>\n          <div class=\"day\">{{ new Date(item.date).getDate() }}</div>\n        </div>\n      </swiper-slide>\n    </swiper>\n  </div>\n\n  // js文件中实例化\n  var vm = new Vue({\n    el:\"#app\",\n    data() {\n      let self = this; // 用self指向this是因为直接在里面拿不到正确的this\n      return {\n        swiperOption: { // swiper参数可以看文档哦\n          slidesPerView: 3,\n          spaceBetween: 20,\n          centeredSlides: true,\n          slideToClickedSlide:true,\n          on: {\n            click: () => {\n              let index = this.swiper.clickedIndex;\n              self.handleChangeCurrent(index)\n            }\n          }\n        },\n        list: []\n      }\n    },\n    computed: {\n      swiper() { // 在方法中直接this.swiper可以拿到swiper\n        return this.$refs.mySwiper.swiper\n      }\n    },\n    beforeDestroy () { // 离开了记得销毁哦\n      this.swiper = null;\n    },\n    methods: {\n      handleChangeCurrent(index) {\n        // 可以在滑动的之后做一些事情\n      }\n    }\n  });\n```\n\n> 在开发过程中我也需要了一点问题，如果你们也遇到了可以参考哦\n1、在文件内直接写js报错\n\n```javascript\n  <script type=\"text/javascript\">这里是你的代码</script> // 运行到此处出错 解决办法：将代码保存为独立的js文件，然后动态引用即可。\n  // 下面是参考文章\n```\n[Chrome扩展popup页面使用JavaScript脚本报错: Refused to execute inline script because....](http://www.oceancoder.cn/post/popup-invoke-js-error.html)\n\n> 2、Chrome Extension 中的 CSP（Content Security Policy）\n\n*在进行Chrome拓展程序开发的时候，我们经常会遇到需要加载第三方库的情况，常见的如Jquery/Bootstrap库等,然而Chrome Extension的开发与一般网页不同，当我们在页面中加入如下代码时*\n\n*我们看到浏览器拒绝加载这个执行语句，因为它违反了Content Security Policy(简称CSP)机制*\n\n*setTimeout 等都是不允许的*\n\n*提示拒绝 ‘evaluate a string as JavaScript’ ，我们查阅官方文档就可以发现 eval() 函数同样是被CSP所禁止,类似的还有setTimeout(String), setInterval(String) 和new Function(String)*\n\n*那要怎么解决呢，官方文档提供了一种解决办法，叫做 放宽默认策略 （关于放宽默认策略更多的介绍，可以访问Content Security Policy Reference来获取），通过添加 ‘unsafe-eval’ 来实现，即在mainfest.json中加入下面代码：*\n\n```javascript\n  \"content_security_policy\": \"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval' https://cdn.bootcss.com; object-src 'self' ;\",\n  // 下面是参考文章\n```\n[Chrome Extension 中的 CSP（Content Security Policy） 开发小记](https://blog.csdn.net/qq_21859119/article/details/78802687)\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"chrome","published":1,"updated":"2020-04-01T03:15:45.650Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0yz000c000m2ls8b8a3","content":"<p>哈哈哈 终于对chrome 扩展程序下手了，之前就看过这方面的资料，刚好这次公司要做一个简单的扩展<br>之前愚蠢的认为这个扩展只能在chrome里使用，其实除了Chrome浏览器之外，chrome 扩展程序还可以运行在所有webkit内核的国产浏览器，比如360极速浏览器、360安全浏览器、搜狗浏览器、QQ浏览器等等<br>好啦！！我们下来来学学看！</p>\n<p><a href=\"https://github.com/maimai123/chrome-todo\" target=\"_blank\" rel=\"noopener\">这里是我的demo地址</a></p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong><a href=\"https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html\" target=\"_blank\" rel=\"noopener\">转载至</a></strong></font></p>\n<blockquote>\n<p>开发与调试</p>\n</blockquote>\n<p><em>Chrome插件没有严格的项目结构要求，只要保证本目录有一个<strong>manifest.json</strong>即可，也不需要专门的IDE，普通的web开发工具即可。</em></p>\n<p><em>从右上角菜单-&gt;更多工具-&gt;扩展程序可以进入 插件管理页面，也可以直接在地址栏输入 <a href=\"chrome://extensions\">chrome://extensions</a> 访问。</em></p>\n<p><em>勾选开发者模式即可以文件夹的形式直接加载插件，否则只能安装.crx格式的文件。Chrome要求插件必须从它的Chrome应用商店安装，其它任何网站下载的都无法直接安装，所以，其实我们可以把crx文件解压，然后通过开发者模式直接加载。</em></p>\n<p><em>开发中，代码有任何改动都必须重新加载插件，只需要在插件管理页按下Ctrl+R即可，以防万一最好还把页面刷新一下。</em></p>\n<blockquote>\n<p>manifest.json</p>\n</blockquote>\n<p>这是一个Chrome插件最重要也是必不可少的文件，用来配置所有和插件相关的配置，必须放在根目录。其中，manifest_version、name、version3个是必不可少的，description和icons是推荐的。</p>\n<p>下面是我的 manifest.json<br><a href=\"http://chrome.cenchy.com/permission_warnings.html\" target=\"_blank\" rel=\"noopener\">文档地址</a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里就展示了一下我用到的一些配置，其他的可以查询文档哦 文档地址放在上面了</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"todo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>, <span class=\"comment\">// 必须是2</span></span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"chrome plugin demo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"browser_action\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"default_icon\"</span>: <span class=\"string\">\"assets/icon.png\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"default_title\"</span>: <span class=\"string\">\"todo\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"default_popup\"</span>: <span class=\"string\">\"index.html\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"icons\"</span>:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">\"16\"</span>: <span class=\"string\">\"assets/icon.png\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"48\"</span>: <span class=\"string\">\"assets/icon.png\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"128\"</span>: <span class=\"string\">\"assets/icon.png\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"content_security_policy\"</span>: <span class=\"string\">\"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval'; object-src 'self' ;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"homepage_url\"</span>: <span class=\"string\">\"https://maimai123.github.io\"</span>, <span class=\"comment\">// 插件主页，不要浪费了这个免费广告位</span></span><br><span class=\"line\">  <span class=\"string\">\"background\"</span>:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 2种指定方式，如果指定JS，那么会自动生成一个背景页 我这边就是用的js</span></span><br><span class=\"line\">    <span class=\"comment\">// \"page\": \"background.html\",</span></span><br><span class=\"line\">    <span class=\"string\">\"scripts\"</span>: [<span class=\"string\">\"background.js\"</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"permissions\"</span>: <span class=\"comment\">// 权限申请</span></span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">\"contextMenus\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"tabs\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"notifications\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"storage\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cookies\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"webRequest\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"webRequestBlocking\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"background\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"https://*/*\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"http://*/*\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>background:</p>\n</blockquote>\n<p><em>background是一个常驻的页面，它的生命周期是插件中所有类型页面中最长的，它随着浏览器的打开而打开，随着浏览器的关闭而关闭，所以通常把需要一直运行的、启动就运行的、全局的代码放在background里面。</em></p>\n<p><em>background的权限非常高，几乎可以调用所有的Chrome扩展API（除了devtools），而且它可以无限制跨域，也就是可以跨域访问任何网站而无需要求对方设置CORS</em></p>\n<p>*需要特别说明的是，你怎么查看你再background里面打印的东西呢，直接扩展上右击打开的可不是background哦，需要你再扩展程序页面打击背景页查看哦。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里是我的background.js 简单的获取数据</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"string\">'http://192.168.31.194:8002'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> cookie;</span><br><span class=\"line\"></span><br><span class=\"line\">chrome.cookies.get(&#123; <span class=\"comment\">// 获取cookie</span></span><br><span class=\"line\">\turl: <span class=\"string\">'http://192.168.31.221'</span>,</span><br><span class=\"line\">\tname: <span class=\"string\">'SESSION'</span></span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">cookie</span>) </span>&#123;</span><br><span class=\"line\">\tcookie = cookie.value;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchUserInfo</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 在js上可以通过chrome.extension.getBackgroundPage().fetchUserInfo()调用到方法</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fetchData(url + <span class=\"string\">'/api/user/getUserInfo'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchData</span> (<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      fetch(url, &#123;</span><br><span class=\"line\">        method:<span class=\"string\">'GET'</span>,</span><br><span class=\"line\">        credentials: <span class=\"string\">'include'</span>,</span><br><span class=\"line\">        headers: &#123;</span><br><span class=\"line\">          Authorization: <span class=\"string\">'admin'</span>,</span><br><span class=\"line\">          Cookie: cookie</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .then(<span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; data &#125; = <span class=\"keyword\">await</span> response.json();</span><br><span class=\"line\">        resolve(data);</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"err:\"</span> + err);</span><br><span class=\"line\">        reject(err);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>popup</p>\n</blockquote>\n<p><em>popup是点击图标时打开的一个小窗口网页，焦点离开网页就立即关闭，一般用来做一些临时性的交互。</em><br><em>在权限上和background非常类似，它们之间最大的不同是生命周期的不同，popup中可以直接通过chrome.extension.getBackgroundPage()获取background的window对象。</em></p>\n<blockquote>\n<p>如何在扩展程序中使用vue呢?</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在popup.html中直接引用 我也用了swiper 也是直接引入</span></span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"css/swiper.min.css\"</span> /&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"./js/vue.js\"</span>&gt;&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script src=\"./</span>js/swiper.min.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script src=\"</span>./js/vue-awesome-swiper.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;div id=\"</span>app<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;swiper ref=\"</span>mySwiper<span class=\"string\">\" :options=\"</span>swiperOption<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;swiper-slide v-for=\"</span>item <span class=\"keyword\">in</span> list<span class=\"string\">\" :key=\"</span>item.date<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;div class=\"</span>item<span class=\"string\">\" &gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;div class=\"</span>week<span class=\"string\">\"&gt;&#123;&#123; item.week &#125;&#125;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;div class=\"</span>day<span class=\"string\">\"&gt;&#123;&#123; new Date(item.date).getDate() &#125;&#125;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/swiper-slide&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/swiper&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// js文件中实例化</span></span><br><span class=\"line\"><span class=\"string\">var vm = new Vue(&#123;</span></span><br><span class=\"line\">  el:\"#app\",</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> self = <span class=\"keyword\">this</span>; <span class=\"comment\">// 用self指向this是因为直接在里面拿不到正确的this</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      swiperOption: &#123; <span class=\"comment\">// swiper参数可以看文档哦</span></span><br><span class=\"line\">        slidesPerView: <span class=\"number\">3</span>,</span><br><span class=\"line\">        spaceBetween: <span class=\"number\">20</span>,</span><br><span class=\"line\">        centeredSlides: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        slideToClickedSlide:<span class=\"literal\">true</span>,</span><br><span class=\"line\">        on: &#123;</span><br><span class=\"line\">          click: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> index = <span class=\"keyword\">this</span>.swiper.clickedIndex;</span><br><span class=\"line\">            self.handleChangeCurrent(index)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      list: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    swiper() &#123; <span class=\"comment\">// 在方法中直接this.swiper可以拿到swiper</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$refs.mySwiper.swiper</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeDestroy () &#123; <span class=\"comment\">// 离开了记得销毁哦</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.swiper = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    handleChangeCurrent(index) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 可以在滑动的之后做一些事情</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在开发过程中我也需要了一点问题，如果你们也遇到了可以参考哦<br>1、在文件内直接写js报错</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;这里是你的代码&lt;<span class=\"regexp\">/script&gt; /</span><span class=\"regexp\">/ 运行到此处出错 解决办法：将代码保存为独立的js文件，然后动态引用即可。</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 下面是参考文章</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.oceancoder.cn/post/popup-invoke-js-error.html\" target=\"_blank\" rel=\"noopener\">Chrome扩展popup页面使用JavaScript脚本报错: Refused to execute inline script because….</a></p>\n<blockquote>\n<p>2、Chrome Extension 中的 CSP（Content Security Policy）</p>\n</blockquote>\n<p><em>在进行Chrome拓展程序开发的时候，我们经常会遇到需要加载第三方库的情况，常见的如Jquery/Bootstrap库等,然而Chrome Extension的开发与一般网页不同，当我们在页面中加入如下代码时</em></p>\n<p><em>我们看到浏览器拒绝加载这个执行语句，因为它违反了Content Security Policy(简称CSP)机制</em></p>\n<p><em>setTimeout 等都是不允许的</em></p>\n<p><em>提示拒绝 ‘evaluate a string as JavaScript’ ，我们查阅官方文档就可以发现 eval() 函数同样是被CSP所禁止,类似的还有setTimeout(String), setInterval(String) 和new Function(String)</em></p>\n<p><em>那要怎么解决呢，官方文档提供了一种解决办法，叫做 放宽默认策略 （关于放宽默认策略更多的介绍，可以访问Content Security Policy Reference来获取），通过添加 ‘unsafe-eval’ 来实现，即在mainfest.json中加入下面代码：</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"content_security_policy\"</span>: <span class=\"string\">\"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval' https://cdn.bootcss.com; object-src 'self' ;\"</span>,</span><br><span class=\"line\"><span class=\"comment\">// 下面是参考文章</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/qq_21859119/article/details/78802687\" target=\"_blank\" rel=\"noopener\">Chrome Extension 中的 CSP（Content Security Policy） 开发小记</a></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>哈哈哈 终于对chrome 扩展程序下手了，之前就看过这方面的资料，刚好这次公司要做一个简单的扩展<br>之前愚蠢的认为这个扩展只能在chrome里使用，其实除了Chrome浏览器之外，chrome 扩展程序还可以运行在所有webkit内核的国产浏览器，比如360极速浏览器、360安全浏览器、搜狗浏览器、QQ浏览器等等<br>好啦！！我们下来来学学看！</p>\n<p><a href=\"https://github.com/maimai123/chrome-todo\" target=\"_blank\" rel=\"noopener\">这里是我的demo地址</a></p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong><a href=\"https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html\" target=\"_blank\" rel=\"noopener\">转载至</a></strong></font></p>\n<blockquote>\n<p>开发与调试</p>\n</blockquote>\n<p><em>Chrome插件没有严格的项目结构要求，只要保证本目录有一个<strong>manifest.json</strong>即可，也不需要专门的IDE，普通的web开发工具即可。</em></p>\n<p><em>从右上角菜单-&gt;更多工具-&gt;扩展程序可以进入 插件管理页面，也可以直接在地址栏输入 <a href=\"chrome://extensions\">chrome://extensions</a> 访问。</em></p>\n<p><em>勾选开发者模式即可以文件夹的形式直接加载插件，否则只能安装.crx格式的文件。Chrome要求插件必须从它的Chrome应用商店安装，其它任何网站下载的都无法直接安装，所以，其实我们可以把crx文件解压，然后通过开发者模式直接加载。</em></p>\n<p><em>开发中，代码有任何改动都必须重新加载插件，只需要在插件管理页按下Ctrl+R即可，以防万一最好还把页面刷新一下。</em></p>\n<blockquote>\n<p>manifest.json</p>\n</blockquote>\n<p>这是一个Chrome插件最重要也是必不可少的文件，用来配置所有和插件相关的配置，必须放在根目录。其中，manifest_version、name、version3个是必不可少的，description和icons是推荐的。</p>\n<p>下面是我的 manifest.json<br><a href=\"http://chrome.cenchy.com/permission_warnings.html\" target=\"_blank\" rel=\"noopener\">文档地址</a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里就展示了一下我用到的一些配置，其他的可以查询文档哦 文档地址放在上面了</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"todo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>, <span class=\"comment\">// 必须是2</span></span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"chrome plugin demo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"browser_action\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"default_icon\"</span>: <span class=\"string\">\"assets/icon.png\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"default_title\"</span>: <span class=\"string\">\"todo\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"default_popup\"</span>: <span class=\"string\">\"index.html\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"icons\"</span>:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">\"16\"</span>: <span class=\"string\">\"assets/icon.png\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"48\"</span>: <span class=\"string\">\"assets/icon.png\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"128\"</span>: <span class=\"string\">\"assets/icon.png\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"content_security_policy\"</span>: <span class=\"string\">\"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval'; object-src 'self' ;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"homepage_url\"</span>: <span class=\"string\">\"https://maimai123.github.io\"</span>, <span class=\"comment\">// 插件主页，不要浪费了这个免费广告位</span></span><br><span class=\"line\">  <span class=\"string\">\"background\"</span>:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 2种指定方式，如果指定JS，那么会自动生成一个背景页 我这边就是用的js</span></span><br><span class=\"line\">    <span class=\"comment\">// \"page\": \"background.html\",</span></span><br><span class=\"line\">    <span class=\"string\">\"scripts\"</span>: [<span class=\"string\">\"background.js\"</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"permissions\"</span>: <span class=\"comment\">// 权限申请</span></span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">\"contextMenus\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"tabs\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"notifications\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"storage\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cookies\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"webRequest\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"webRequestBlocking\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"background\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"https://*/*\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"http://*/*\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>background:</p>\n</blockquote>\n<p><em>background是一个常驻的页面，它的生命周期是插件中所有类型页面中最长的，它随着浏览器的打开而打开，随着浏览器的关闭而关闭，所以通常把需要一直运行的、启动就运行的、全局的代码放在background里面。</em></p>\n<p><em>background的权限非常高，几乎可以调用所有的Chrome扩展API（除了devtools），而且它可以无限制跨域，也就是可以跨域访问任何网站而无需要求对方设置CORS</em></p>\n<p>*需要特别说明的是，你怎么查看你再background里面打印的东西呢，直接扩展上右击打开的可不是background哦，需要你再扩展程序页面打击背景页查看哦。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里是我的background.js 简单的获取数据</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"string\">'http://192.168.31.194:8002'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> cookie;</span><br><span class=\"line\"></span><br><span class=\"line\">chrome.cookies.get(&#123; <span class=\"comment\">// 获取cookie</span></span><br><span class=\"line\">\turl: <span class=\"string\">'http://192.168.31.221'</span>,</span><br><span class=\"line\">\tname: <span class=\"string\">'SESSION'</span></span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">cookie</span>) </span>&#123;</span><br><span class=\"line\">\tcookie = cookie.value;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchUserInfo</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 在js上可以通过chrome.extension.getBackgroundPage().fetchUserInfo()调用到方法</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fetchData(url + <span class=\"string\">'/api/user/getUserInfo'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchData</span> (<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      fetch(url, &#123;</span><br><span class=\"line\">        method:<span class=\"string\">'GET'</span>,</span><br><span class=\"line\">        credentials: <span class=\"string\">'include'</span>,</span><br><span class=\"line\">        headers: &#123;</span><br><span class=\"line\">          Authorization: <span class=\"string\">'admin'</span>,</span><br><span class=\"line\">          Cookie: cookie</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .then(<span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; data &#125; = <span class=\"keyword\">await</span> response.json();</span><br><span class=\"line\">        resolve(data);</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"err:\"</span> + err);</span><br><span class=\"line\">        reject(err);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>popup</p>\n</blockquote>\n<p><em>popup是点击图标时打开的一个小窗口网页，焦点离开网页就立即关闭，一般用来做一些临时性的交互。</em><br><em>在权限上和background非常类似，它们之间最大的不同是生命周期的不同，popup中可以直接通过chrome.extension.getBackgroundPage()获取background的window对象。</em></p>\n<blockquote>\n<p>如何在扩展程序中使用vue呢?</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在popup.html中直接引用 我也用了swiper 也是直接引入</span></span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"css/swiper.min.css\"</span> /&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"./js/vue.js\"</span>&gt;&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script src=\"./</span>js/swiper.min.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script src=\"</span>./js/vue-awesome-swiper.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;div id=\"</span>app<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;swiper ref=\"</span>mySwiper<span class=\"string\">\" :options=\"</span>swiperOption<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;swiper-slide v-for=\"</span>item <span class=\"keyword\">in</span> list<span class=\"string\">\" :key=\"</span>item.date<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;div class=\"</span>item<span class=\"string\">\" &gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;div class=\"</span>week<span class=\"string\">\"&gt;&#123;&#123; item.week &#125;&#125;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;div class=\"</span>day<span class=\"string\">\"&gt;&#123;&#123; new Date(item.date).getDate() &#125;&#125;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/swiper-slide&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/swiper&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// js文件中实例化</span></span><br><span class=\"line\"><span class=\"string\">var vm = new Vue(&#123;</span></span><br><span class=\"line\">  el:\"#app\",</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> self = <span class=\"keyword\">this</span>; <span class=\"comment\">// 用self指向this是因为直接在里面拿不到正确的this</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      swiperOption: &#123; <span class=\"comment\">// swiper参数可以看文档哦</span></span><br><span class=\"line\">        slidesPerView: <span class=\"number\">3</span>,</span><br><span class=\"line\">        spaceBetween: <span class=\"number\">20</span>,</span><br><span class=\"line\">        centeredSlides: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        slideToClickedSlide:<span class=\"literal\">true</span>,</span><br><span class=\"line\">        on: &#123;</span><br><span class=\"line\">          click: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> index = <span class=\"keyword\">this</span>.swiper.clickedIndex;</span><br><span class=\"line\">            self.handleChangeCurrent(index)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      list: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    swiper() &#123; <span class=\"comment\">// 在方法中直接this.swiper可以拿到swiper</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$refs.mySwiper.swiper</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeDestroy () &#123; <span class=\"comment\">// 离开了记得销毁哦</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.swiper = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    handleChangeCurrent(index) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 可以在滑动的之后做一些事情</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在开发过程中我也需要了一点问题，如果你们也遇到了可以参考哦<br>1、在文件内直接写js报错</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;这里是你的代码&lt;<span class=\"regexp\">/script&gt; /</span><span class=\"regexp\">/ 运行到此处出错 解决办法：将代码保存为独立的js文件，然后动态引用即可。</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 下面是参考文章</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.oceancoder.cn/post/popup-invoke-js-error.html\" target=\"_blank\" rel=\"noopener\">Chrome扩展popup页面使用JavaScript脚本报错: Refused to execute inline script because….</a></p>\n<blockquote>\n<p>2、Chrome Extension 中的 CSP（Content Security Policy）</p>\n</blockquote>\n<p><em>在进行Chrome拓展程序开发的时候，我们经常会遇到需要加载第三方库的情况，常见的如Jquery/Bootstrap库等,然而Chrome Extension的开发与一般网页不同，当我们在页面中加入如下代码时</em></p>\n<p><em>我们看到浏览器拒绝加载这个执行语句，因为它违反了Content Security Policy(简称CSP)机制</em></p>\n<p><em>setTimeout 等都是不允许的</em></p>\n<p><em>提示拒绝 ‘evaluate a string as JavaScript’ ，我们查阅官方文档就可以发现 eval() 函数同样是被CSP所禁止,类似的还有setTimeout(String), setInterval(String) 和new Function(String)</em></p>\n<p><em>那要怎么解决呢，官方文档提供了一种解决办法，叫做 放宽默认策略 （关于放宽默认策略更多的介绍，可以访问Content Security Policy Reference来获取），通过添加 ‘unsafe-eval’ 来实现，即在mainfest.json中加入下面代码：</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"content_security_policy\"</span>: <span class=\"string\">\"style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-eval' https://cdn.bootcss.com; object-src 'self' ;\"</span>,</span><br><span class=\"line\"><span class=\"comment\">// 下面是参考文章</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/qq_21859119/article/details/78802687\" target=\"_blank\" rel=\"noopener\">Chrome Extension 中的 CSP（Content Security Policy） 开发小记</a></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"为啥 hexo d -g 成功了打开页面为空","date":"2021-05-13T16:00:00.000Z","_content":"## 问题 ##\n我的内心是崩溃的\n昨天心血来潮想写个博客\n然后部署的时候发现页面空白\n然后我去github的仓库里看了下\n所有html页面都是0kb也是就空的\n这一下子我就不淡定了\n由于本地hexo s 预览都是好的\n\n## 尝试解决问题 ##\n我以为是依赖不对 删了以后重装了，结果发现没用\n然后一顿google，一开始找出来的都是_config.yml配置不对啊之类的，发现也没用\n然后找到了 hexo GitHub repo 的 issues，其中 关键的一个[信息](https://github.com/hexojs/hexo/issues/4267)\n\nUpdate on Feb 14th, 2021: the previous reply is outdated. Hexo is compatible with Node.js 14 since version 4.2.1 released on May 14, 2020. See also #4285\n\n所以我检查了下我的 node 版本是14.x, hexo 版本是3.9.x。是node版本太高了！！！hexo 还不支持。所以我就升级了hexo的版本到 4.2.1 及以上。\n\n## 总结 ##\n还是得多翻issue，好多解决办法都藏在issue里面~~\n\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/error.md","raw":"---\ntitle: 为啥 hexo d -g 成功了打开页面为空\ndate: 2021-05-14\ntags: react\n---\n## 问题 ##\n我的内心是崩溃的\n昨天心血来潮想写个博客\n然后部署的时候发现页面空白\n然后我去github的仓库里看了下\n所有html页面都是0kb也是就空的\n这一下子我就不淡定了\n由于本地hexo s 预览都是好的\n\n## 尝试解决问题 ##\n我以为是依赖不对 删了以后重装了，结果发现没用\n然后一顿google，一开始找出来的都是_config.yml配置不对啊之类的，发现也没用\n然后找到了 hexo GitHub repo 的 issues，其中 关键的一个[信息](https://github.com/hexojs/hexo/issues/4267)\n\nUpdate on Feb 14th, 2021: the previous reply is outdated. Hexo is compatible with Node.js 14 since version 4.2.1 released on May 14, 2020. See also #4285\n\n所以我检查了下我的 node 版本是14.x, hexo 版本是3.9.x。是node版本太高了！！！hexo 还不支持。所以我就升级了hexo的版本到 4.2.1 及以上。\n\n## 总结 ##\n还是得多翻issue，好多解决办法都藏在issue里面~~\n\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"error","published":1,"updated":"2021-05-14T08:53:14.764Z","_id":"ckoo2u0z1000e000m2ox7epmg","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>我的内心是崩溃的<br>昨天心血来潮想写个博客<br>然后部署的时候发现页面空白<br>然后我去github的仓库里看了下<br>所有html页面都是0kb也是就空的<br>这一下子我就不淡定了<br>由于本地hexo s 预览都是好的</p>\n<h2 id=\"尝试解决问题\"><a href=\"#尝试解决问题\" class=\"headerlink\" title=\"尝试解决问题\"></a>尝试解决问题</h2><p>我以为是依赖不对 删了以后重装了，结果发现没用<br>然后一顿google，一开始找出来的都是_config.yml配置不对啊之类的，发现也没用<br>然后找到了 hexo GitHub repo 的 issues，其中 关键的一个<a href=\"https://github.com/hexojs/hexo/issues/4267\" target=\"_blank\" rel=\"noopener\">信息</a></p>\n<p>Update on Feb 14th, 2021: the previous reply is outdated. Hexo is compatible with Node.js 14 since version 4.2.1 released on May 14, 2020. See also #4285</p>\n<p>所以我检查了下我的 node 版本是14.x, hexo 版本是3.9.x。是node版本太高了！！！hexo 还不支持。所以我就升级了hexo的版本到 4.2.1 及以上。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>还是得多翻issue，好多解决办法都藏在issue里面~~</p>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>我的内心是崩溃的<br>昨天心血来潮想写个博客<br>然后部署的时候发现页面空白<br>然后我去github的仓库里看了下<br>所有html页面都是0kb也是就空的<br>这一下子我就不淡定了<br>由于本地hexo s 预览都是好的</p>\n<h2 id=\"尝试解决问题\"><a href=\"#尝试解决问题\" class=\"headerlink\" title=\"尝试解决问题\"></a>尝试解决问题</h2><p>我以为是依赖不对 删了以后重装了，结果发现没用<br>然后一顿google，一开始找出来的都是_config.yml配置不对啊之类的，发现也没用<br>然后找到了 hexo GitHub repo 的 issues，其中 关键的一个<a href=\"https://github.com/hexojs/hexo/issues/4267\" target=\"_blank\" rel=\"noopener\">信息</a></p>\n<p>Update on Feb 14th, 2021: the previous reply is outdated. Hexo is compatible with Node.js 14 since version 4.2.1 released on May 14, 2020. See also #4285</p>\n<p>所以我检查了下我的 node 版本是14.x, hexo 版本是3.9.x。是node版本太高了！！！hexo 还不支持。所以我就升级了hexo的版本到 4.2.1 及以上。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>还是得多翻issue，好多解决办法都藏在issue里面~~</p>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"},{"title":"日常小计:无图片处理","date":"2017-12-15T16:00:00.000Z","_content":"<h1>无图片时显示默认图片</h1>\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 第一种\n```javascript\n$(\"img“).on('error',function(){\n    this.src = '/assets/img/student/null-pic.jpg';  //默认图片\n});\n```\n\n> 第二种\n```javascript\nimgShow:function(){\n    var t_img; // 定时器\n    var isLoad = true; // 控制变量\n    // imgBlock();\n    imgReplace();\n    function imgReplace(){\n        jquery(\"img\").each(function(){\n            jquery(this).on('error',function(){\n                jquery(this).attr('src','/assets/img/student/null-pic.jpg')\n            })\n        })\n    }\n    function imgBlock(callback){\n        $('img').each(function() {\n            if (!this.complete || typeof this.naturalWidth == \"undefined\" || this.naturalWidth == 0)  {\n                this.src = '/assets/img/student/null-pic.jpg';\n                isLoad = false;\n                return false;\n            }\n        });\n        if(isLoad){\n            clearTimeout(t_img); // 清除定时器\n            // 回调函数\n            callback;\n            // 为false，因为找到了没有加载完成的图，将调用定时器递归\n        }else{\n            isLoad = true;\n            t_img = setTimeout(function(){\n                imgBlock(callback); // 递归扫描\n            },100); // 我这里设置的是500毫秒就扫描一次，可以自己调整\n        }\n    }\n}\n```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/daily.md","raw":"---\ntitle: 日常小计:无图片处理\ndate: 2017-12-16\ntags: js\n---\n<h1>无图片时显示默认图片</h1>\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 第一种\n```javascript\n$(\"img“).on('error',function(){\n    this.src = '/assets/img/student/null-pic.jpg';  //默认图片\n});\n```\n\n> 第二种\n```javascript\nimgShow:function(){\n    var t_img; // 定时器\n    var isLoad = true; // 控制变量\n    // imgBlock();\n    imgReplace();\n    function imgReplace(){\n        jquery(\"img\").each(function(){\n            jquery(this).on('error',function(){\n                jquery(this).attr('src','/assets/img/student/null-pic.jpg')\n            })\n        })\n    }\n    function imgBlock(callback){\n        $('img').each(function() {\n            if (!this.complete || typeof this.naturalWidth == \"undefined\" || this.naturalWidth == 0)  {\n                this.src = '/assets/img/student/null-pic.jpg';\n                isLoad = false;\n                return false;\n            }\n        });\n        if(isLoad){\n            clearTimeout(t_img); // 清除定时器\n            // 回调函数\n            callback;\n            // 为false，因为找到了没有加载完成的图，将调用定时器递归\n        }else{\n            isLoad = true;\n            t_img = setTimeout(function(){\n                imgBlock(callback); // 递归扫描\n            },100); // 我这里设置的是500毫秒就扫描一次，可以自己调整\n        }\n    }\n}\n```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"daily","published":1,"updated":"2020-02-26T10:29:57.640Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z2000g000m3rg9dyud","content":"<p><h1>无图片时显示默认图片</h1></p>\n<font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>第一种<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"img“).on('error',function()&#123;</span></span><br><span class=\"line\"><span class=\"string\">    this.src = '/assets/img/student/null-pic.jpg';  //默认图片</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>第二种<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imgShow:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> t_img; <span class=\"comment\">// 定时器</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isLoad = <span class=\"literal\">true</span>; <span class=\"comment\">// 控制变量</span></span><br><span class=\"line\">    <span class=\"comment\">// imgBlock();</span></span><br><span class=\"line\">    imgReplace();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">imgReplace</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        jquery(<span class=\"string\">\"img\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            jquery(<span class=\"keyword\">this</span>).on(<span class=\"string\">'error'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                jquery(<span class=\"keyword\">this</span>).attr(<span class=\"string\">'src'</span>,<span class=\"string\">'/assets/img/student/null-pic.jpg'</span>)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">imgBlock</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">        $(<span class=\"string\">'img'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.complete || <span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.naturalWidth == <span class=\"string\">\"undefined\"</span> || <span class=\"keyword\">this</span>.naturalWidth == <span class=\"number\">0</span>)  &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.src = <span class=\"string\">'/assets/img/student/null-pic.jpg'</span>;</span><br><span class=\"line\">                isLoad = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isLoad)&#123;</span><br><span class=\"line\">            clearTimeout(t_img); <span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">            <span class=\"comment\">// 回调函数</span></span><br><span class=\"line\">            callback;</span><br><span class=\"line\">            <span class=\"comment\">// 为false，因为找到了没有加载完成的图，将调用定时器递归</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            isLoad = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            t_img = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                imgBlock(callback); <span class=\"comment\">// 递归扫描</span></span><br><span class=\"line\">            &#125;,<span class=\"number\">100</span>); <span class=\"comment\">// 我这里设置的是500毫秒就扫描一次，可以自己调整</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><h1>无图片时显示默认图片</h1></p>\n<font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>第一种<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"img“).on('error',function()&#123;</span></span><br><span class=\"line\"><span class=\"string\">    this.src = '/assets/img/student/null-pic.jpg';  //默认图片</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>第二种<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imgShow:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> t_img; <span class=\"comment\">// 定时器</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isLoad = <span class=\"literal\">true</span>; <span class=\"comment\">// 控制变量</span></span><br><span class=\"line\">    <span class=\"comment\">// imgBlock();</span></span><br><span class=\"line\">    imgReplace();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">imgReplace</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        jquery(<span class=\"string\">\"img\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            jquery(<span class=\"keyword\">this</span>).on(<span class=\"string\">'error'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                jquery(<span class=\"keyword\">this</span>).attr(<span class=\"string\">'src'</span>,<span class=\"string\">'/assets/img/student/null-pic.jpg'</span>)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">imgBlock</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">        $(<span class=\"string\">'img'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.complete || <span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.naturalWidth == <span class=\"string\">\"undefined\"</span> || <span class=\"keyword\">this</span>.naturalWidth == <span class=\"number\">0</span>)  &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.src = <span class=\"string\">'/assets/img/student/null-pic.jpg'</span>;</span><br><span class=\"line\">                isLoad = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isLoad)&#123;</span><br><span class=\"line\">            clearTimeout(t_img); <span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">            <span class=\"comment\">// 回调函数</span></span><br><span class=\"line\">            callback;</span><br><span class=\"line\">            <span class=\"comment\">// 为false，因为找到了没有加载完成的图，将调用定时器递归</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            isLoad = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            t_img = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                imgBlock(callback); <span class=\"comment\">// 递归扫描</span></span><br><span class=\"line\">            &#125;,<span class=\"number\">100</span>); <span class=\"comment\">// 我这里设置的是500毫秒就扫描一次，可以自己调整</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"React中父组件通过ref调用子组件方法时报错","date":"2020-02-25T16:00:00.000Z","_content":"<font size=1>**转载至[风吹过的夏夜](https://segmentfault.com/a/1190000015172005?utm_source=channel-hottest)**</font>\n\n在项目中用了dva，导致了在用Ref方式取子组件的方法时，用常用的方法报错\n寻寻觅觅找到了解决方法\n\n接下来我会用一个简单的demo来演示这个问题是如何发生以及如何解决的：\n\n```javascript\n// 这里是子组件\nclass Child extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0\n        }\n    }\n\n    handleAdd = () => {\n        this.setState({\n            value: this.state.value + 1\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <p>{this.state.value}</p>\n            </div>\n        )\n    }\n}\n\nexport default Child\n\n// 这里是父组件\nclass Father extends Component {\n    clickHandler = () => {\n        this.child.addHandler();\n    };\n\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Child ref={ref => this.child = ref} />\n                    <button onClick={this.clickHandler}>+1</button>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default Father;\n\n```\n这样是没有问题了，但当子组件需要在Redux/dva（dva基于 redux 和 redux-saga）中读取的一个数据，那么就需要connect一下了\n\n```javascript\nexport default connect(mapStateToProps, mapDispatchToProps)(Child)\n```\n\n嗯，看起来很完美，点击，然后....boom( ⊙ o ⊙ )报错了！\n\n不科学啊，说到这里相信大家都能猜出来事connect过后导致的问题，所以去官方文档翻箱倒柜一下connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])，\n果不其然，原来connect参数有4个，所以可能是遗漏了某个参数吧，所以继续翻...\n然后看到这样一段话：\n> [withRef] (Boolean): If true, stores a ref to the wrapped component instance and makes it available via getWrappedInstance() method. Default value: false\n\n> 简单理解下，就是说connect过后export出去的不是组件本身，而是经过包装处理的组件，官方称之为wrapped component，所以默认是不将ref存储到这个包装对象里的(Default value: false)，因此只有将withRef这个参数置为true，那么Redux就会将ref存储到这个包装对象里以供使用了，并且请注意下via getWrappedInstance() method这段话，即便我们将withRef置为true但没有通过getWrappedInstance()获得原对象的ref(reference)也是不行的。所以说道这里大家也知道解决方案是什么了：\n\n> 1）connect导出Addition组件时候添加withRef参数：\n```javascript\nexport default connect(mapStateToProps, mapDispatchToProps, null, {withRef: true})(Addition)\n```\n> 2）调用addHandler方法前使用getWrappedInstance()获得原对象的ref：\n```javascript\nthis.refs.addition.getWrappedInstance().addHandler()\n```\n\n啦啦啦~ 这样就好啦\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/daily2020.md","raw":"---\ntitle: React中父组件通过ref调用子组件方法时报错\ndate: 2020-02-26\ntags: React\n---\n<font size=1>**转载至[风吹过的夏夜](https://segmentfault.com/a/1190000015172005?utm_source=channel-hottest)**</font>\n\n在项目中用了dva，导致了在用Ref方式取子组件的方法时，用常用的方法报错\n寻寻觅觅找到了解决方法\n\n接下来我会用一个简单的demo来演示这个问题是如何发生以及如何解决的：\n\n```javascript\n// 这里是子组件\nclass Child extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0\n        }\n    }\n\n    handleAdd = () => {\n        this.setState({\n            value: this.state.value + 1\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <p>{this.state.value}</p>\n            </div>\n        )\n    }\n}\n\nexport default Child\n\n// 这里是父组件\nclass Father extends Component {\n    clickHandler = () => {\n        this.child.addHandler();\n    };\n\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Child ref={ref => this.child = ref} />\n                    <button onClick={this.clickHandler}>+1</button>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default Father;\n\n```\n这样是没有问题了，但当子组件需要在Redux/dva（dva基于 redux 和 redux-saga）中读取的一个数据，那么就需要connect一下了\n\n```javascript\nexport default connect(mapStateToProps, mapDispatchToProps)(Child)\n```\n\n嗯，看起来很完美，点击，然后....boom( ⊙ o ⊙ )报错了！\n\n不科学啊，说到这里相信大家都能猜出来事connect过后导致的问题，所以去官方文档翻箱倒柜一下connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])，\n果不其然，原来connect参数有4个，所以可能是遗漏了某个参数吧，所以继续翻...\n然后看到这样一段话：\n> [withRef] (Boolean): If true, stores a ref to the wrapped component instance and makes it available via getWrappedInstance() method. Default value: false\n\n> 简单理解下，就是说connect过后export出去的不是组件本身，而是经过包装处理的组件，官方称之为wrapped component，所以默认是不将ref存储到这个包装对象里的(Default value: false)，因此只有将withRef这个参数置为true，那么Redux就会将ref存储到这个包装对象里以供使用了，并且请注意下via getWrappedInstance() method这段话，即便我们将withRef置为true但没有通过getWrappedInstance()获得原对象的ref(reference)也是不行的。所以说道这里大家也知道解决方案是什么了：\n\n> 1）connect导出Addition组件时候添加withRef参数：\n```javascript\nexport default connect(mapStateToProps, mapDispatchToProps, null, {withRef: true})(Addition)\n```\n> 2）调用addHandler方法前使用getWrappedInstance()获得原对象的ref：\n```javascript\nthis.refs.addition.getWrappedInstance().addHandler()\n```\n\n啦啦啦~ 这样就好啦\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"daily2020","published":1,"updated":"2020-02-26T10:23:19.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z4000i000m6agwc05h","content":"<font size=1><strong>转载至<a href=\"https://segmentfault.com/a/1190000015172005?utm_source=channel-hottest\" target=\"_blank\" rel=\"noopener\">风吹过的夏夜</a></strong></font>\n\n<p>在项目中用了dva，导致了在用Ref方式取子组件的方法时，用常用的方法报错<br>寻寻觅觅找到了解决方法</p>\n<p>接下来我会用一个简单的demo来演示这个问题是如何发生以及如何解决的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里是子组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">            value: <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    handleAdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">            value: <span class=\"keyword\">this</span>.state.value + <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    render() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div&gt;</span><br><span class=\"line\">                &lt;p&gt;&#123;<span class=\"keyword\">this</span>.state.value&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;/</span>div&gt;</span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Child</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里是父组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    clickHandler = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.child.addHandler();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    render() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;Provider store=&#123;store&#125;&gt;</span><br><span class=\"line\">                &lt;div className=<span class=\"string\">\"App\"</span>&gt;</span><br><span class=\"line\">                    &lt;Child ref=&#123;ref =&gt; <span class=\"keyword\">this</span>.child = ref&#125; /&gt;</span><br><span class=\"line\">                    &lt;button onClick=&#123;<span class=\"keyword\">this</span>.clickHandler&#125;&gt;+<span class=\"number\">1</span>&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;/</span>div&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/Provider&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        );</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Father;</span></span><br></pre></td></tr></table></figure>\n<p>这样是没有问题了，但当子组件需要在Redux/dva（dva基于 redux 和 redux-saga）中读取的一个数据，那么就需要connect一下了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(mapStateToProps, mapDispatchToProps)(Child)</span><br></pre></td></tr></table></figure>\n<p>嗯，看起来很完美，点击，然后….boom( ⊙ o ⊙ )报错了！</p>\n<p>不科学啊，说到这里相信大家都能猜出来事connect过后导致的问题，所以去官方文档翻箱倒柜一下connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])，<br>果不其然，原来connect参数有4个，所以可能是遗漏了某个参数吧，所以继续翻…<br>然后看到这样一段话：</p>\n<blockquote>\n<p>[withRef] (Boolean): If true, stores a ref to the wrapped component instance and makes it available via getWrappedInstance() method. Default value: false</p>\n</blockquote>\n<blockquote>\n<p>简单理解下，就是说connect过后export出去的不是组件本身，而是经过包装处理的组件，官方称之为wrapped component，所以默认是不将ref存储到这个包装对象里的(Default value: false)，因此只有将withRef这个参数置为true，那么Redux就会将ref存储到这个包装对象里以供使用了，并且请注意下via getWrappedInstance() method这段话，即便我们将withRef置为true但没有通过getWrappedInstance()获得原对象的ref(reference)也是不行的。所以说道这里大家也知道解决方案是什么了：</p>\n</blockquote>\n<blockquote>\n<p>1）connect导出Addition组件时候添加withRef参数：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(mapStateToProps, mapDispatchToProps, <span class=\"literal\">null</span>, &#123;<span class=\"attr\">withRef</span>: <span class=\"literal\">true</span>&#125;)(Addition)</span><br></pre></td></tr></table></figure><br>2）调用addHandler方法前使用getWrappedInstance()获得原对象的ref：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.refs.addition.getWrappedInstance().addHandler()</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>啦啦啦~ 这样就好啦</p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<font size=1><strong>转载至<a href=\"https://segmentfault.com/a/1190000015172005?utm_source=channel-hottest\" target=\"_blank\" rel=\"noopener\">风吹过的夏夜</a></strong></font>\n\n<p>在项目中用了dva，导致了在用Ref方式取子组件的方法时，用常用的方法报错<br>寻寻觅觅找到了解决方法</p>\n<p>接下来我会用一个简单的demo来演示这个问题是如何发生以及如何解决的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里是子组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">            value: <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    handleAdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">            value: <span class=\"keyword\">this</span>.state.value + <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    render() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div&gt;</span><br><span class=\"line\">                &lt;p&gt;&#123;<span class=\"keyword\">this</span>.state.value&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;/</span>div&gt;</span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Child</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里是父组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Father</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    clickHandler = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.child.addHandler();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    render() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;Provider store=&#123;store&#125;&gt;</span><br><span class=\"line\">                &lt;div className=<span class=\"string\">\"App\"</span>&gt;</span><br><span class=\"line\">                    &lt;Child ref=&#123;ref =&gt; <span class=\"keyword\">this</span>.child = ref&#125; /&gt;</span><br><span class=\"line\">                    &lt;button onClick=&#123;<span class=\"keyword\">this</span>.clickHandler&#125;&gt;+<span class=\"number\">1</span>&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;/</span>div&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/Provider&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        );</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Father;</span></span><br></pre></td></tr></table></figure>\n<p>这样是没有问题了，但当子组件需要在Redux/dva（dva基于 redux 和 redux-saga）中读取的一个数据，那么就需要connect一下了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(mapStateToProps, mapDispatchToProps)(Child)</span><br></pre></td></tr></table></figure>\n<p>嗯，看起来很完美，点击，然后….boom( ⊙ o ⊙ )报错了！</p>\n<p>不科学啊，说到这里相信大家都能猜出来事connect过后导致的问题，所以去官方文档翻箱倒柜一下connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])，<br>果不其然，原来connect参数有4个，所以可能是遗漏了某个参数吧，所以继续翻…<br>然后看到这样一段话：</p>\n<blockquote>\n<p>[withRef] (Boolean): If true, stores a ref to the wrapped component instance and makes it available via getWrappedInstance() method. Default value: false</p>\n</blockquote>\n<blockquote>\n<p>简单理解下，就是说connect过后export出去的不是组件本身，而是经过包装处理的组件，官方称之为wrapped component，所以默认是不将ref存储到这个包装对象里的(Default value: false)，因此只有将withRef这个参数置为true，那么Redux就会将ref存储到这个包装对象里以供使用了，并且请注意下via getWrappedInstance() method这段话，即便我们将withRef置为true但没有通过getWrappedInstance()获得原对象的ref(reference)也是不行的。所以说道这里大家也知道解决方案是什么了：</p>\n</blockquote>\n<blockquote>\n<p>1）connect导出Addition组件时候添加withRef参数：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(mapStateToProps, mapDispatchToProps, <span class=\"literal\">null</span>, &#123;<span class=\"attr\">withRef</span>: <span class=\"literal\">true</span>&#125;)(Addition)</span><br></pre></td></tr></table></figure><br>2）调用addHandler方法前使用getWrappedInstance()获得原对象的ref：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.refs.addition.getWrappedInstance().addHandler()</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>啦啦啦~ 这样就好啦</p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"网页实现excel下载","date":"2019-02-02T16:00:00.000Z","_content":"在现在项目中遇到一个把表格作为excel下载的需求，之前一直绕到一个死胡同里，搜关键词都搜vue excel下载或json转excel下载,经大神提点，跟用什么框架等没有半毛钱关系，用下面的方法轻松实现啦！\n<font size=1>**如有转载，请注明出处。**</font>\n## excel\n> 不喜勿喷~ 据大神说还有一种方法是用\"/t\"分割，我这里使用半角\",\"分割的。\n\n```javascript\n  JSONToExcelConvertor() { // 导出Excel\n    const json = this.countData.stat.prize;\n    const fileName = this.countData.title;\n    const arrData = typeof json !== 'object' ? JSON.parse(json) : json;\n    /* eslint-disable */\n    let excel = \"奖品,收件人,手机号,省,市,区,收货地址\\n\";\n    for (let i = 0; i < arrData.length; i += 1) {\n      for (let j = 0; j < arrData[i].users.length; j += 1) {\n        excel += `${arrData[i].name},\n                  ${arrData[i].users[j].user.address.name},\n                  ${arrData[i].users[j].user.address.phone},\n                  ${arrData[i].users[j].user.address.city.split(\"-\").join(\",\")},\n                  ${arrData[i].users[j].user.address.address}\\n`;\n      }\n    }\n    excel = encodeURIComponent(excel);\n    const link = document.createElement('a');\n    link.href = `data:text/csv;charset=utf-8,\\ufeff${excel}`;\n    link.charset = 'gbk';\n    link.download = `${fileName}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  },\n```\n\n## 请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/excel.md","raw":"---\ntitle: 网页实现excel下载\ndate: 2019-02-03\ntags: js\n---\n在现在项目中遇到一个把表格作为excel下载的需求，之前一直绕到一个死胡同里，搜关键词都搜vue excel下载或json转excel下载,经大神提点，跟用什么框架等没有半毛钱关系，用下面的方法轻松实现啦！\n<font size=1>**如有转载，请注明出处。**</font>\n## excel\n> 不喜勿喷~ 据大神说还有一种方法是用\"/t\"分割，我这里使用半角\",\"分割的。\n\n```javascript\n  JSONToExcelConvertor() { // 导出Excel\n    const json = this.countData.stat.prize;\n    const fileName = this.countData.title;\n    const arrData = typeof json !== 'object' ? JSON.parse(json) : json;\n    /* eslint-disable */\n    let excel = \"奖品,收件人,手机号,省,市,区,收货地址\\n\";\n    for (let i = 0; i < arrData.length; i += 1) {\n      for (let j = 0; j < arrData[i].users.length; j += 1) {\n        excel += `${arrData[i].name},\n                  ${arrData[i].users[j].user.address.name},\n                  ${arrData[i].users[j].user.address.phone},\n                  ${arrData[i].users[j].user.address.city.split(\"-\").join(\",\")},\n                  ${arrData[i].users[j].user.address.address}\\n`;\n      }\n    }\n    excel = encodeURIComponent(excel);\n    const link = document.createElement('a');\n    link.href = `data:text/csv;charset=utf-8,\\ufeff${excel}`;\n    link.charset = 'gbk';\n    link.download = `${fileName}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  },\n```\n\n## 请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"excel","published":1,"updated":"2020-02-26T10:30:36.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z5000l000m4tslbygg","content":"<p>在现在项目中遇到一个把表格作为excel下载的需求，之前一直绕到一个死胡同里，搜关键词都搜vue excel下载或json转excel下载,经大神提点，跟用什么框架等没有半毛钱关系，用下面的方法轻松实现啦！</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"excel\"><a href=\"#excel\" class=\"headerlink\" title=\"excel\"></a>excel</h2><blockquote>\n<p>不喜勿喷~ 据大神说还有一种方法是用”/t”分割，我这里使用半角”,”分割的。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JSONToExcelConvertor() &#123; <span class=\"comment\">// 导出Excel</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> json = <span class=\"keyword\">this</span>.countData.stat.prize;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fileName = <span class=\"keyword\">this</span>.countData.title;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> arrData = <span class=\"keyword\">typeof</span> json !== <span class=\"string\">'object'</span> ? <span class=\"built_in\">JSON</span>.parse(json) : json;</span><br><span class=\"line\">  <span class=\"comment\">/* eslint-disable */</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> excel = <span class=\"string\">\"奖品,收件人,手机号,省,市,区,收货地址\\n\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arrData.length; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arrData[i].users.length; j += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      excel += <span class=\"string\">`<span class=\"subst\">$&#123;arrData[i].name&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.name&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.phone&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.city.split(<span class=\"string\">\"-\"</span>).join(<span class=\"string\">\",\"</span>)&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.address&#125;</span>\\n`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  excel = <span class=\"built_in\">encodeURIComponent</span>(excel);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">  link.href = <span class=\"string\">`data:text/csv;charset=utf-8,\\ufeff<span class=\"subst\">$&#123;excel&#125;</span>`</span>;</span><br><span class=\"line\">  link.charset = <span class=\"string\">'gbk'</span>;</span><br><span class=\"line\">  link.download = <span class=\"string\">`<span class=\"subst\">$&#123;fileName&#125;</span>.csv`</span>;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(link);</span><br><span class=\"line\">  link.click();</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.removeChild(link);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"请耐心等待，麦麦会不定期更新哒\"><a href=\"#请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"请耐心等待，麦麦会不定期更新哒~\"></a>请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在现在项目中遇到一个把表格作为excel下载的需求，之前一直绕到一个死胡同里，搜关键词都搜vue excel下载或json转excel下载,经大神提点，跟用什么框架等没有半毛钱关系，用下面的方法轻松实现啦！</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"excel\"><a href=\"#excel\" class=\"headerlink\" title=\"excel\"></a>excel</h2><blockquote>\n<p>不喜勿喷~ 据大神说还有一种方法是用”/t”分割，我这里使用半角”,”分割的。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JSONToExcelConvertor() &#123; <span class=\"comment\">// 导出Excel</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> json = <span class=\"keyword\">this</span>.countData.stat.prize;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fileName = <span class=\"keyword\">this</span>.countData.title;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> arrData = <span class=\"keyword\">typeof</span> json !== <span class=\"string\">'object'</span> ? <span class=\"built_in\">JSON</span>.parse(json) : json;</span><br><span class=\"line\">  <span class=\"comment\">/* eslint-disable */</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> excel = <span class=\"string\">\"奖品,收件人,手机号,省,市,区,收货地址\\n\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arrData.length; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arrData[i].users.length; j += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      excel += <span class=\"string\">`<span class=\"subst\">$&#123;arrData[i].name&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.name&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.phone&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.city.split(<span class=\"string\">\"-\"</span>).join(<span class=\"string\">\",\"</span>)&#125;</span>,</span></span><br><span class=\"line\"><span class=\"string\">                <span class=\"subst\">$&#123;arrData[i].users[j].user.address.address&#125;</span>\\n`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  excel = <span class=\"built_in\">encodeURIComponent</span>(excel);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">  link.href = <span class=\"string\">`data:text/csv;charset=utf-8,\\ufeff<span class=\"subst\">$&#123;excel&#125;</span>`</span>;</span><br><span class=\"line\">  link.charset = <span class=\"string\">'gbk'</span>;</span><br><span class=\"line\">  link.download = <span class=\"string\">`<span class=\"subst\">$&#123;fileName&#125;</span>.csv`</span>;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(link);</span><br><span class=\"line\">  link.click();</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.removeChild(link);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"请耐心等待，麦麦会不定期更新哒\"><a href=\"#请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"请耐心等待，麦麦会不定期更新哒~\"></a>请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"},{"title":"React Hooks","date":"2020-02-26T16:00:00.000Z","_content":"<font size=1>**转载至[伐樱大魔](https://juejin.im/post/5e53d9116fb9a07c9070da44)**</font>\n\n# useState\n**为什么要使用useState？**\nuseState 的出现是 ： 在函数组件里面使用 class的setState，刺激!!!\n解决了的问题是：当我们一个函数组件想要有自己维护的state的时候，不得已只能转换成class。这样很麻烦！\n\n**如何使用useState？**\n\n```javascript\nconst [visible, setVisible] = useState(false)\n```\n**useState踩坑知识点**\n\n👁重点： **useState的初始值，只在第一次有效**\n\n我当时反正没有当回事，直到遇到了坑...\n\n举个🌰：\n\n```javascript\nconst Child = memo(({data}) =>{\n    const [name, setName] = useState(data)\n    return (\n        <div>\n            <div>child</div>\n            <div>{name} --- {data}</div>\n        </div>\n    );\n})\n\nconst Hook =()=>{\n    const [count, setCount] = useState(0)\n    const [name, setName] = useState('rose')\n\n    return(\n        <div>\n            <div>\n                {count}\n            </div>\n            <button onClick={()=>setCount(count+1)}>update count </button>\n            <button onClick={()=>setName('jack')}>update name </button>\n            <Child data={name}/>\n        </div>\n    )\n}\n```\n> 结论： 实践检验知识点！😭\n\n# useEffect\n**为什么要使用useEffect？**\nuseEffect 的出现是 ： 在函数组件里面使用 class的生命周期函数，还是所以函数的合体！刺激！！！\n\n**如何使用useEffect?**\n\n```javascript\nuseEffect(()=>{\n    // 你的代码...\n})\n```\n\n**useEffect知识点合集**\n\n1.只在第一次使用的componentDidMount，可以用来请求异步数据...、\n\nuseEffect最后，加了 **[]** 就表示只第一次执行\n\n```javascript\nuseEffect(()=>{\n    const users = 获取你喜欢的人的信息()\n},[])\n```\n2.用来替代willUpdate等每次渲染都会执行的生命函数\n\nuseEffect最后，不加 **[]** 就表示每一次渲染都执行\n```javascript\nuseEffect(()=>{\n    const users = 每次渲染都获取你喜欢的人的信息()\n})\n```\n3.每次渲染都执行感觉有点费，所以：\n\nuseEffect最后加 **[]** ，并且 **[]** 里面加的字段就表示，这个字段更改了，我这个effect才执行\n```javascript\nuseEffect(() => {\n    const users = （name改变了我才获取你喜欢的人的信息()）\n},[name])\n```\n4.如果我们之前订阅了什么，最后在willUnmount这个生命周期里面要取消订阅，这可咋用useEffect实现啊：\n\n在effect的return里面可以做取消订阅的事\n```javascript\n    useEffect(() => {\n        const subscription = 获取你喜欢的人的信息()\n        return () => {\n            我不要在喜欢你了()\n        }\n    },[])\n```\n**为什么要取消订阅？**\n大家都知道，render了之后会执行重新useEffect，如果useEffect里面有一个每setInterval...那么每次render了，再次执行useEffect就会再创建一个setInterval，然后就混乱了...可以把下面案例return的内容删掉感受下\n```javascript\n    useEffect(() => {\n        console.log('use effect...',count)\n        const timer = setInterval(() => setCount(count + 1), 1000)\n        return ()=> clearInterval(timer)\n    })\n```\n\n5.useEffect 里面使用到的state的值, 固定在了useEffect内部， 不会被改变，除非useEffect刷新，重新固定state的值\n```javascript\n const [count, setCount] = useState(0)\n    useEffect(() => {\n        console.log('use effect...',count)\n        const timer = setInterval(() => {\n            console.log('timer...count:', count)\n            setCount(count + 1)\n        }, 1000)\n        return ()=> clearInterval(timer)\n    },[])\n```\n\n6.useEffect不能被判断包裹\n\n```javascript\n const [count, setCount] = useState(0)\n    if(2 < 5){\n    useEffect(() => {\n            console.log('use effect...',count)\n            const timer = setInterval(() => setCount(count +1), 1000)\n            return ()=> clearInterval(timer)\n        })\n    }\n```\n\n7.useEffect不能被打断\n```javascript\nconst [count, setCount] = useState(0)\nuseEffect(...)\n\nreturn // 函数提前结束了\n\nuseEffect(...)\n}\n```\n还有**useMemo** **useRef**等等... 搬的太辛苦了，大家直接点击[文章地址](https://juejin.im/post/5e53d9116fb9a07c9070da44)去看吧 😭\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/daily2020_1.md","raw":"---\ntitle: React Hooks\ndate: 2020-02-27\ntags: React\n---\n<font size=1>**转载至[伐樱大魔](https://juejin.im/post/5e53d9116fb9a07c9070da44)**</font>\n\n# useState\n**为什么要使用useState？**\nuseState 的出现是 ： 在函数组件里面使用 class的setState，刺激!!!\n解决了的问题是：当我们一个函数组件想要有自己维护的state的时候，不得已只能转换成class。这样很麻烦！\n\n**如何使用useState？**\n\n```javascript\nconst [visible, setVisible] = useState(false)\n```\n**useState踩坑知识点**\n\n👁重点： **useState的初始值，只在第一次有效**\n\n我当时反正没有当回事，直到遇到了坑...\n\n举个🌰：\n\n```javascript\nconst Child = memo(({data}) =>{\n    const [name, setName] = useState(data)\n    return (\n        <div>\n            <div>child</div>\n            <div>{name} --- {data}</div>\n        </div>\n    );\n})\n\nconst Hook =()=>{\n    const [count, setCount] = useState(0)\n    const [name, setName] = useState('rose')\n\n    return(\n        <div>\n            <div>\n                {count}\n            </div>\n            <button onClick={()=>setCount(count+1)}>update count </button>\n            <button onClick={()=>setName('jack')}>update name </button>\n            <Child data={name}/>\n        </div>\n    )\n}\n```\n> 结论： 实践检验知识点！😭\n\n# useEffect\n**为什么要使用useEffect？**\nuseEffect 的出现是 ： 在函数组件里面使用 class的生命周期函数，还是所以函数的合体！刺激！！！\n\n**如何使用useEffect?**\n\n```javascript\nuseEffect(()=>{\n    // 你的代码...\n})\n```\n\n**useEffect知识点合集**\n\n1.只在第一次使用的componentDidMount，可以用来请求异步数据...、\n\nuseEffect最后，加了 **[]** 就表示只第一次执行\n\n```javascript\nuseEffect(()=>{\n    const users = 获取你喜欢的人的信息()\n},[])\n```\n2.用来替代willUpdate等每次渲染都会执行的生命函数\n\nuseEffect最后，不加 **[]** 就表示每一次渲染都执行\n```javascript\nuseEffect(()=>{\n    const users = 每次渲染都获取你喜欢的人的信息()\n})\n```\n3.每次渲染都执行感觉有点费，所以：\n\nuseEffect最后加 **[]** ，并且 **[]** 里面加的字段就表示，这个字段更改了，我这个effect才执行\n```javascript\nuseEffect(() => {\n    const users = （name改变了我才获取你喜欢的人的信息()）\n},[name])\n```\n4.如果我们之前订阅了什么，最后在willUnmount这个生命周期里面要取消订阅，这可咋用useEffect实现啊：\n\n在effect的return里面可以做取消订阅的事\n```javascript\n    useEffect(() => {\n        const subscription = 获取你喜欢的人的信息()\n        return () => {\n            我不要在喜欢你了()\n        }\n    },[])\n```\n**为什么要取消订阅？**\n大家都知道，render了之后会执行重新useEffect，如果useEffect里面有一个每setInterval...那么每次render了，再次执行useEffect就会再创建一个setInterval，然后就混乱了...可以把下面案例return的内容删掉感受下\n```javascript\n    useEffect(() => {\n        console.log('use effect...',count)\n        const timer = setInterval(() => setCount(count + 1), 1000)\n        return ()=> clearInterval(timer)\n    })\n```\n\n5.useEffect 里面使用到的state的值, 固定在了useEffect内部， 不会被改变，除非useEffect刷新，重新固定state的值\n```javascript\n const [count, setCount] = useState(0)\n    useEffect(() => {\n        console.log('use effect...',count)\n        const timer = setInterval(() => {\n            console.log('timer...count:', count)\n            setCount(count + 1)\n        }, 1000)\n        return ()=> clearInterval(timer)\n    },[])\n```\n\n6.useEffect不能被判断包裹\n\n```javascript\n const [count, setCount] = useState(0)\n    if(2 < 5){\n    useEffect(() => {\n            console.log('use effect...',count)\n            const timer = setInterval(() => setCount(count +1), 1000)\n            return ()=> clearInterval(timer)\n        })\n    }\n```\n\n7.useEffect不能被打断\n```javascript\nconst [count, setCount] = useState(0)\nuseEffect(...)\n\nreturn // 函数提前结束了\n\nuseEffect(...)\n}\n```\n还有**useMemo** **useRef**等等... 搬的太辛苦了，大家直接点击[文章地址](https://juejin.im/post/5e53d9116fb9a07c9070da44)去看吧 😭\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"daily2020_1","published":1,"updated":"2020-02-26T10:22:51.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z6000n000mdoit9tlx","content":"<font size=1><strong>转载至<a href=\"https://juejin.im/post/5e53d9116fb9a07c9070da44\" target=\"_blank\" rel=\"noopener\">伐樱大魔</a></strong></font>\n\n<h1 id=\"useState\"><a href=\"#useState\" class=\"headerlink\" title=\"useState\"></a>useState</h1><p><strong>为什么要使用useState？</strong><br>useState 的出现是 ： 在函数组件里面使用 class的setState，刺激!!!<br>解决了的问题是：当我们一个函数组件想要有自己维护的state的时候，不得已只能转换成class。这样很麻烦！</p>\n<p><strong>如何使用useState？</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [visible, setVisible] = useState(<span class=\"literal\">false</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>useState踩坑知识点</strong></p>\n<p>👁重点： <strong>useState的初始值，只在第一次有效</strong></p>\n<p>我当时反正没有当回事，直到遇到了坑…</p>\n<p>举个🌰：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Child = memo(<span class=\"function\">(<span class=\"params\">&#123;data&#125;</span>) =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [name, setName] = useState(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">            &lt;div&gt;child&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;div&gt;&#123;name&#125; --- &#123;data&#125;&lt;/</span>div&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">const Hook =()=&gt;&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    const [count, setCount] = useState(0)</span></span><br><span class=\"line\"><span class=\"regexp\">    const [name, setName] = useState('rose')</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    return(</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &#123;count&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;/</span>div&gt;</span><br><span class=\"line\">            &lt;button onClick=&#123;()=&gt;setCount(count+<span class=\"number\">1</span>)&#125;&gt;update count &lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;button onClick=&#123;()=&gt;setName('jack')&#125;&gt;update name &lt;/</span>button&gt;</span><br><span class=\"line\">            &lt;Child data=&#123;name&#125;/&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>结论： 实践检验知识点！😭</p>\n</blockquote>\n<h1 id=\"useEffect\"><a href=\"#useEffect\" class=\"headerlink\" title=\"useEffect\"></a>useEffect</h1><p><strong>为什么要使用useEffect？</strong><br>useEffect 的出现是 ： 在函数组件里面使用 class的生命周期函数，还是所以函数的合体！刺激！！！</p>\n<p><strong>如何使用useEffect?</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 你的代码...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>useEffect知识点合集</strong></p>\n<p>1.只在第一次使用的componentDidMount，可以用来请求异步数据…、</p>\n<p>useEffect最后，加了 <strong>[]</strong> 就表示只第一次执行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = 获取你喜欢的人的信息()</span><br><span class=\"line\">&#125;,[])</span><br></pre></td></tr></table></figure>\n<p>2.用来替代willUpdate等每次渲染都会执行的生命函数</p>\n<p>useEffect最后，不加 <strong>[]</strong> 就表示每一次渲染都执行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = 每次渲染都获取你喜欢的人的信息()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>3.每次渲染都执行感觉有点费，所以：</p>\n<p>useEffect最后加 <strong>[]</strong> ，并且 <strong>[]</strong> 里面加的字段就表示，这个字段更改了，我这个effect才执行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = （name改变了我才获取你喜欢的人的信息()）</span><br><span class=\"line\">&#125;,[name])</span><br></pre></td></tr></table></figure><br>4.如果我们之前订阅了什么，最后在willUnmount这个生命周期里面要取消订阅，这可咋用useEffect实现啊：</p>\n<p>在effect的return里面可以做取消订阅的事<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> subscription = 获取你喜欢的人的信息()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        我不要在喜欢你了()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,[])</span><br></pre></td></tr></table></figure><br><strong>为什么要取消订阅？</strong><br>大家都知道，render了之后会执行重新useEffect，如果useEffect里面有一个每setInterval…那么每次render了，再次执行useEffect就会再创建一个setInterval，然后就混乱了…可以把下面案例return的内容删掉感受下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'use effect...'</span>,count)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> timer = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> setCount(count + <span class=\"number\">1</span>), <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> clearInterval(timer)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>5.useEffect 里面使用到的state的值, 固定在了useEffect内部， 不会被改变，除非useEffect刷新，重新固定state的值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count, setCount] = useState(<span class=\"number\">0</span>)</span><br><span class=\"line\">   useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"built_in\">console</span>.log(<span class=\"string\">'use effect...'</span>,count)</span><br><span class=\"line\">       <span class=\"keyword\">const</span> timer = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">'timer...count:'</span>, count)</span><br><span class=\"line\">           setCount(count + <span class=\"number\">1</span>)</span><br><span class=\"line\">       &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> clearInterval(timer)</span><br><span class=\"line\">   &#125;,[])</span><br></pre></td></tr></table></figure></p>\n<p>6.useEffect不能被判断包裹</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count, setCount] = useState(<span class=\"number\">0</span>)</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(<span class=\"number\">2</span> &lt; <span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">   useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">'use effect...'</span>,count)</span><br><span class=\"line\">           <span class=\"keyword\">const</span> timer = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> setCount(count +<span class=\"number\">1</span>), <span class=\"number\">1000</span>)</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> clearInterval(timer)</span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>7.useEffect不能被打断<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count, setCount] = useState(<span class=\"number\">0</span>)</span><br><span class=\"line\">useEffect(...)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"comment\">// 函数提前结束了</span></span><br><span class=\"line\"></span><br><span class=\"line\">useEffect(...)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>还有<strong>useMemo</strong> <strong>useRef</strong>等等… 搬的太辛苦了，大家直接点击<a href=\"https://juejin.im/post/5e53d9116fb9a07c9070da44\" target=\"_blank\" rel=\"noopener\">文章地址</a>去看吧 😭</p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<font size=1><strong>转载至<a href=\"https://juejin.im/post/5e53d9116fb9a07c9070da44\" target=\"_blank\" rel=\"noopener\">伐樱大魔</a></strong></font>\n\n<h1 id=\"useState\"><a href=\"#useState\" class=\"headerlink\" title=\"useState\"></a>useState</h1><p><strong>为什么要使用useState？</strong><br>useState 的出现是 ： 在函数组件里面使用 class的setState，刺激!!!<br>解决了的问题是：当我们一个函数组件想要有自己维护的state的时候，不得已只能转换成class。这样很麻烦！</p>\n<p><strong>如何使用useState？</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [visible, setVisible] = useState(<span class=\"literal\">false</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>useState踩坑知识点</strong></p>\n<p>👁重点： <strong>useState的初始值，只在第一次有效</strong></p>\n<p>我当时反正没有当回事，直到遇到了坑…</p>\n<p>举个🌰：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Child = memo(<span class=\"function\">(<span class=\"params\">&#123;data&#125;</span>) =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [name, setName] = useState(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">            &lt;div&gt;child&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;div&gt;&#123;name&#125; --- &#123;data&#125;&lt;/</span>div&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">const Hook =()=&gt;&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    const [count, setCount] = useState(0)</span></span><br><span class=\"line\"><span class=\"regexp\">    const [name, setName] = useState('rose')</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    return(</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &#123;count&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;/</span>div&gt;</span><br><span class=\"line\">            &lt;button onClick=&#123;()=&gt;setCount(count+<span class=\"number\">1</span>)&#125;&gt;update count &lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;button onClick=&#123;()=&gt;setName('jack')&#125;&gt;update name &lt;/</span>button&gt;</span><br><span class=\"line\">            &lt;Child data=&#123;name&#125;/&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>结论： 实践检验知识点！😭</p>\n</blockquote>\n<h1 id=\"useEffect\"><a href=\"#useEffect\" class=\"headerlink\" title=\"useEffect\"></a>useEffect</h1><p><strong>为什么要使用useEffect？</strong><br>useEffect 的出现是 ： 在函数组件里面使用 class的生命周期函数，还是所以函数的合体！刺激！！！</p>\n<p><strong>如何使用useEffect?</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 你的代码...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>useEffect知识点合集</strong></p>\n<p>1.只在第一次使用的componentDidMount，可以用来请求异步数据…、</p>\n<p>useEffect最后，加了 <strong>[]</strong> 就表示只第一次执行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = 获取你喜欢的人的信息()</span><br><span class=\"line\">&#125;,[])</span><br></pre></td></tr></table></figure>\n<p>2.用来替代willUpdate等每次渲染都会执行的生命函数</p>\n<p>useEffect最后，不加 <strong>[]</strong> 就表示每一次渲染都执行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = 每次渲染都获取你喜欢的人的信息()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>3.每次渲染都执行感觉有点费，所以：</p>\n<p>useEffect最后加 <strong>[]</strong> ，并且 <strong>[]</strong> 里面加的字段就表示，这个字段更改了，我这个effect才执行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = （name改变了我才获取你喜欢的人的信息()）</span><br><span class=\"line\">&#125;,[name])</span><br></pre></td></tr></table></figure><br>4.如果我们之前订阅了什么，最后在willUnmount这个生命周期里面要取消订阅，这可咋用useEffect实现啊：</p>\n<p>在effect的return里面可以做取消订阅的事<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> subscription = 获取你喜欢的人的信息()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        我不要在喜欢你了()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,[])</span><br></pre></td></tr></table></figure><br><strong>为什么要取消订阅？</strong><br>大家都知道，render了之后会执行重新useEffect，如果useEffect里面有一个每setInterval…那么每次render了，再次执行useEffect就会再创建一个setInterval，然后就混乱了…可以把下面案例return的内容删掉感受下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'use effect...'</span>,count)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> timer = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> setCount(count + <span class=\"number\">1</span>), <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> clearInterval(timer)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>5.useEffect 里面使用到的state的值, 固定在了useEffect内部， 不会被改变，除非useEffect刷新，重新固定state的值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count, setCount] = useState(<span class=\"number\">0</span>)</span><br><span class=\"line\">   useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"built_in\">console</span>.log(<span class=\"string\">'use effect...'</span>,count)</span><br><span class=\"line\">       <span class=\"keyword\">const</span> timer = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">'timer...count:'</span>, count)</span><br><span class=\"line\">           setCount(count + <span class=\"number\">1</span>)</span><br><span class=\"line\">       &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> clearInterval(timer)</span><br><span class=\"line\">   &#125;,[])</span><br></pre></td></tr></table></figure></p>\n<p>6.useEffect不能被判断包裹</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count, setCount] = useState(<span class=\"number\">0</span>)</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(<span class=\"number\">2</span> &lt; <span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">   useEffect(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">'use effect...'</span>,count)</span><br><span class=\"line\">           <span class=\"keyword\">const</span> timer = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> setCount(count +<span class=\"number\">1</span>), <span class=\"number\">1000</span>)</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> clearInterval(timer)</span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>7.useEffect不能被打断<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count, setCount] = useState(<span class=\"number\">0</span>)</span><br><span class=\"line\">useEffect(...)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"comment\">// 函数提前结束了</span></span><br><span class=\"line\"></span><br><span class=\"line\">useEffect(...)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>还有<strong>useMemo</strong> <strong>useRef</strong>等等… 搬的太辛苦了，大家直接点击<a href=\"https://juejin.im/post/5e53d9116fb9a07c9070da44\" target=\"_blank\" rel=\"noopener\">文章地址</a>去看吧 😭</p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"Vuex学习小计","date":"2018-12-24T16:00:00.000Z","_content":"<i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。\n<font size=2>vuex是什么？ 下面是官网给出的说法。\nVuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，\n并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，\n提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。\n总而言之，言而总之。就是用来管理你的state的！！！</font>\n<font size=1>**如有转载，请注明出处。**</font>\n\n**我们从零开始。**\n<font size=1>可以参考官网 [vuex](https://github.com/vuejs/vuex) 以及vuex文档 [vuex-文档](https://vuex.vuejs.org/zh-cn/intro.html) 也可以直接clone我的代码 [麦麦的github](https://github.com/maimai123/maimai-vuex-Test.git)</font>\n<!--more-->\n> <font size=2>打开一个空的文件夹 dua~ 打开了吧？</font>\n> <font size=2>安装 vue-cli。(确保你有node和npm)</font>\n> <font size=2>npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n> <font size=2>然后创建一个webpack项目并且下载依赖</font>\n> <font size=2>vue init webpack Test</font>\n\n> <font size=2>进入 你创建的文件夹下 安装依赖</font>\n> <font size=2>npm install</font>\n\n> <font size=2>这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font>\n> <font size=2>npm i vue-resource vue-router vuex --save</font>\n\n> <font size=2>如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader\n> <font size=2>npm install less less-loader --save-dev</font>\n\n> <font size=2>接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n>\n> <font size=2>打开浏览器应该可以看到我们的vue应用啦~</font>\n>\n>*  <font size=2>我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n>\n>*  <font size=2>然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n>\n>*  <font size=2>**App.vue**是一个类似于layout的文件。路由配置在**router**文件夹下</font>\n>\n>*  <font size=2>**components**文件夹下用来放你的组件</font>\n>\n>*  <font size=2>**assets**文件夹下存放你的静态资源</font>\n>\n>*  <font size=2>我们新建一个**vuex**文件夹，这就开始学习状态管理啦~</font>\n>\n>* <font size=2>先新建 **store.js** 用来存放我们的状态</font>\n>\n>* <font size=2>再新建 **getters** 文件夹 用来处理state数据</font>\n>\n>* <font size=2>再新建 **mutations** 文件夹 用来注册我们各种数据变化的方法</font>\n>\n>* <font size=2>再新建 **mutations-types.js** 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n>\n>* <font size=2>再新建 **actions** 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n>\n>* <font size=2>文件建好就开始开始写代码了</font>\n>\n>* <font size=2> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹\n>* 当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</font>\n>* <font size=2> 代码如下：(必须要写 Vue.use(Vuex) )</font>\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport actions from './actions'\nimport * as getters from './getters'\nimport mutations from './mutations'\n\nVue.use(Vuex)\n\nconst state = {\n    total:2,\n    lists: [\n      {\n        id:0,\n        articleName : '如何学好vue',\n        avatar : 'http://cn.vuejs.org/images/logo.png',\n        date : '2016-12-25',\n        comment : 'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。',\n        likes: 113,\n        liked:true\n      },\n      {\n        id:1,\n        articleName : '如何完全读懂javascript高级程序设计',\n        avatar : 'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256',\n        date : '2017-12-25',\n        comment : '从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。',\n        likes: 564,\n        liked:false\n      }\n    ]\n};\n\nexport default new Vuex.Store({\n  state, //状态\n  getters, //处理state数据\n  mutations, // 注册我们各种数据变化的方法\n  actions, //可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件\n})\n\n```\n\n>* <font size=2> state中是你的数据 </font>\n>\n>* <font size=2> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或...反正就是当没有这些数据也不至于让你的项目报错！</font>\n>\n>* <font size=2> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n>\n>* <font size=2> 然后在 **mutations-types.js** 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n>\n>* <font size=2> 再在mutations文件夹中写你的方法</font>\n>\n>* <font size=2> actions commit你的事件</font>\n>\n>* <font size=2> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/learning-vuex.md","raw":"---\ntitle: Vuex学习小计\ndate: 2018-12-25\ntags: vuex\n---\n<i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。\n<font size=2>vuex是什么？ 下面是官网给出的说法。\nVuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，\n并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，\n提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。\n总而言之，言而总之。就是用来管理你的state的！！！</font>\n<font size=1>**如有转载，请注明出处。**</font>\n\n**我们从零开始。**\n<font size=1>可以参考官网 [vuex](https://github.com/vuejs/vuex) 以及vuex文档 [vuex-文档](https://vuex.vuejs.org/zh-cn/intro.html) 也可以直接clone我的代码 [麦麦的github](https://github.com/maimai123/maimai-vuex-Test.git)</font>\n<!--more-->\n> <font size=2>打开一个空的文件夹 dua~ 打开了吧？</font>\n> <font size=2>安装 vue-cli。(确保你有node和npm)</font>\n> <font size=2>npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n> <font size=2>然后创建一个webpack项目并且下载依赖</font>\n> <font size=2>vue init webpack Test</font>\n\n> <font size=2>进入 你创建的文件夹下 安装依赖</font>\n> <font size=2>npm install</font>\n\n> <font size=2>这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font>\n> <font size=2>npm i vue-resource vue-router vuex --save</font>\n\n> <font size=2>如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader\n> <font size=2>npm install less less-loader --save-dev</font>\n\n> <font size=2>接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n>\n> <font size=2>打开浏览器应该可以看到我们的vue应用啦~</font>\n>\n>*  <font size=2>我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n>\n>*  <font size=2>然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n>\n>*  <font size=2>**App.vue**是一个类似于layout的文件。路由配置在**router**文件夹下</font>\n>\n>*  <font size=2>**components**文件夹下用来放你的组件</font>\n>\n>*  <font size=2>**assets**文件夹下存放你的静态资源</font>\n>\n>*  <font size=2>我们新建一个**vuex**文件夹，这就开始学习状态管理啦~</font>\n>\n>* <font size=2>先新建 **store.js** 用来存放我们的状态</font>\n>\n>* <font size=2>再新建 **getters** 文件夹 用来处理state数据</font>\n>\n>* <font size=2>再新建 **mutations** 文件夹 用来注册我们各种数据变化的方法</font>\n>\n>* <font size=2>再新建 **mutations-types.js** 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n>\n>* <font size=2>再新建 **actions** 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n>\n>* <font size=2>文件建好就开始开始写代码了</font>\n>\n>* <font size=2> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹\n>* 当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</font>\n>* <font size=2> 代码如下：(必须要写 Vue.use(Vuex) )</font>\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport actions from './actions'\nimport * as getters from './getters'\nimport mutations from './mutations'\n\nVue.use(Vuex)\n\nconst state = {\n    total:2,\n    lists: [\n      {\n        id:0,\n        articleName : '如何学好vue',\n        avatar : 'http://cn.vuejs.org/images/logo.png',\n        date : '2016-12-25',\n        comment : 'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。',\n        likes: 113,\n        liked:true\n      },\n      {\n        id:1,\n        articleName : '如何完全读懂javascript高级程序设计',\n        avatar : 'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256',\n        date : '2017-12-25',\n        comment : '从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。',\n        likes: 564,\n        liked:false\n      }\n    ]\n};\n\nexport default new Vuex.Store({\n  state, //状态\n  getters, //处理state数据\n  mutations, // 注册我们各种数据变化的方法\n  actions, //可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件\n})\n\n```\n\n>* <font size=2> state中是你的数据 </font>\n>\n>* <font size=2> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或...反正就是当没有这些数据也不至于让你的项目报错！</font>\n>\n>* <font size=2> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n>\n>* <font size=2> 然后在 **mutations-types.js** 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n>\n>* <font size=2> 再在mutations文件夹中写你的方法</font>\n>\n>* <font size=2> actions commit你的事件</font>\n>\n>* <font size=2> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"learning-vuex","published":1,"updated":"2020-02-26T10:26:08.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z7000q000m81oi06pr","content":"<p><i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。</p>\n<font size=2>vuex是什么？ 下面是官网给出的说法。<br>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，<br>并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，<br>提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。<br>总而言之，言而总之。就是用来管理你的state的！！！</font><br><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<p><strong>我们从零开始。</strong></p>\n<font size=1>可以参考官网 <a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener\">vuex</a> 以及vuex文档 <a href=\"https://vuex.vuejs.org/zh-cn/intro.html\" target=\"_blank\" rel=\"noopener\">vuex-文档</a> 也可以直接clone我的代码 <a href=\"https://github.com/maimai123/maimai-vuex-Test.git\" target=\"_blank\" rel=\"noopener\">麦麦的github</a></font><br><a id=\"more\"></a><br>&gt; <font size=2>打开一个空的文件夹 dua~ 打开了吧？</font><br>&gt; <font size=2>安装 vue-cli。(确保你有node和npm)</font><br>&gt; <font size=2>npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n<blockquote>\n<font size=2>然后创建一个webpack项目并且下载依赖</font><br><font size=2>vue init webpack Test</font>\n</blockquote>\n<blockquote>\n<font size=2>进入 你创建的文件夹下 安装依赖</font><br><font size=2>npm install</font>\n</blockquote>\n<blockquote>\n<font size=2>这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font><br><font size=2>npm i vue-resource vue-router vuex –save</font>\n</blockquote>\n<blockquote>\n<font size=2>如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader<br><font size=2>npm install less less-loader –save-dev</font>\n</blockquote>\n<blockquote>\n<font size=2>接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n\n<font size=2>打开浏览器应该可以看到我们的vue应用啦~</font>\n\n<ul>\n<li><font size=2>我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n</li>\n<li><font size=2>然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n</li>\n<li><font size=2><strong>App.vue</strong>是一个类似于layout的文件。路由配置在<strong>router</strong>文件夹下</font>\n</li>\n<li><font size=2><strong>components</strong>文件夹下用来放你的组件</font>\n</li>\n<li><font size=2><strong>assets</strong>文件夹下存放你的静态资源</font>\n</li>\n<li><font size=2>我们新建一个<strong>vuex</strong>文件夹，这就开始学习状态管理啦~</font>\n</li>\n<li><font size=2>先新建 <strong>store.js</strong> 用来存放我们的状态</font>\n</li>\n<li><font size=2>再新建 <strong>getters</strong> 文件夹 用来处理state数据</font>\n</li>\n<li><font size=2>再新建 <strong>mutations</strong> 文件夹 用来注册我们各种数据变化的方法</font>\n</li>\n<li><font size=2>再新建 <strong>mutations-types.js</strong> 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n</li>\n<li><font size=2>再新建 <strong>actions</strong> 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n</li>\n<li><font size=2>文件建好就开始开始写代码了</font>\n</li>\n<li><p><font size=2> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹</p>\n</li>\n<li>当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</font></li>\n<li><font size=2> 代码如下：(必须要写 Vue.use(Vuex) )</font><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> actions <span class=\"keyword\">from</span> <span class=\"string\">'./actions'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> getters <span class=\"keyword\">from</span> <span class=\"string\">'./getters'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> mutations <span class=\"keyword\">from</span> <span class=\"string\">'./mutations'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">    total:<span class=\"number\">2</span>,</span><br><span class=\"line\">    lists: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        id:<span class=\"number\">0</span>,</span><br><span class=\"line\">        articleName : <span class=\"string\">'如何学好vue'</span>,</span><br><span class=\"line\">        avatar : <span class=\"string\">'http://cn.vuejs.org/images/logo.png'</span>,</span><br><span class=\"line\">        date : <span class=\"string\">'2016-12-25'</span>,</span><br><span class=\"line\">        comment : <span class=\"string\">'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。'</span>,</span><br><span class=\"line\">        likes: <span class=\"number\">113</span>,</span><br><span class=\"line\">        liked:<span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        id:<span class=\"number\">1</span>,</span><br><span class=\"line\">        articleName : <span class=\"string\">'如何完全读懂javascript高级程序设计'</span>,</span><br><span class=\"line\">        avatar : <span class=\"string\">'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256'</span>,</span><br><span class=\"line\">        date : <span class=\"string\">'2017-12-25'</span>,</span><br><span class=\"line\">        comment : <span class=\"string\">'从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。'</span>,</span><br><span class=\"line\">        likes: <span class=\"number\">564</span>,</span><br><span class=\"line\">        liked:<span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state, <span class=\"comment\">//状态</span></span><br><span class=\"line\">  getters, <span class=\"comment\">//处理state数据</span></span><br><span class=\"line\">  mutations, <span class=\"comment\">// 注册我们各种数据变化的方法</span></span><br><span class=\"line\">  actions, <span class=\"comment\">//可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li><font size=2> state中是你的数据 </font>\n</li>\n<li><font size=2> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或…反正就是当没有这些数据也不至于让你的项目报错！</font>\n</li>\n<li><font size=2> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n</li>\n<li><font size=2> 然后在 <strong>mutations-types.js</strong> 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n</li>\n<li><font size=2> 再在mutations文件夹中写你的方法</font>\n</li>\n<li><font size=2> actions commit你的事件</font>\n</li>\n<li><font size=2> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n\n</li>\n</ul>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<p><i class=\"icon-adjust\"></i> 初学vuex，总得弄懂他的思想。</p>\n<font size=2>vuex是什么？ 下面是官网给出的说法。<br>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，<br>并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，<br>提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。<br>总而言之，言而总之。就是用来管理你的state的！！！</font><br><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<p><strong>我们从零开始。</strong></p>\n<font size=1>可以参考官网 <a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener\">vuex</a> 以及vuex文档 <a href=\"https://vuex.vuejs.org/zh-cn/intro.html\" target=\"_blank\" rel=\"noopener\">vuex-文档</a> 也可以直接clone我的代码 <a href=\"https://github.com/maimai123/maimai-vuex-Test.git\" target=\"_blank\" rel=\"noopener\">麦麦的github</a></font><br>","more":"<br>&gt; <font size=2>打开一个空的文件夹 dua~ 打开了吧？</font><br>&gt; <font size=2>安装 vue-cli。(确保你有node和npm)</font><br>&gt; <font size=2>npm i -g vue-cli （只需安装一次，日后可省略这步）</font>\n\n<blockquote>\n<font size=2>然后创建一个webpack项目并且下载依赖</font><br><font size=2>vue init webpack Test</font>\n</blockquote>\n<blockquote>\n<font size=2>进入 你创建的文件夹下 安装依赖</font><br><font size=2>npm install</font>\n</blockquote>\n<blockquote>\n<font size=2>这些都准备好后，我们需要为我们的路由、vuex和XHR请求下载几个库，我们可以从vue的官网中找到他们。</font><br><font size=2>npm i vue-resource vue-router vuex –save</font>\n</blockquote>\n<blockquote>\n<font size=2>如果你需要一个css编译器 你可以安装less-loader, vuejs-templates模板默认不安装less</font> less-loader<br><font size=2>npm install less less-loader –save-dev</font>\n</blockquote>\n<blockquote>\n<font size=2>接着使用 npm run dev 在热加载中运行我们的应用！！！</font>\n\n<font size=2>打开浏览器应该可以看到我们的vue应用啦~</font>\n\n<ul>\n<li><font size=2>我之前启动包了一个错 原因是 vue 的版本和 vue-template-compiler 的版本不一致 ，你可以在 package.json中 修改成相同的版本</font>\n</li>\n<li><font size=2>然后我们就可以开始修改文件啦~ 鸡冻不？</font>\n</li>\n<li><font size=2><strong>App.vue</strong>是一个类似于layout的文件。路由配置在<strong>router</strong>文件夹下</font>\n</li>\n<li><font size=2><strong>components</strong>文件夹下用来放你的组件</font>\n</li>\n<li><font size=2><strong>assets</strong>文件夹下存放你的静态资源</font>\n</li>\n<li><font size=2>我们新建一个<strong>vuex</strong>文件夹，这就开始学习状态管理啦~</font>\n</li>\n<li><font size=2>先新建 <strong>store.js</strong> 用来存放我们的状态</font>\n</li>\n<li><font size=2>再新建 <strong>getters</strong> 文件夹 用来处理state数据</font>\n</li>\n<li><font size=2>再新建 <strong>mutations</strong> 文件夹 用来注册我们各种数据变化的方法</font>\n</li>\n<li><font size=2>再新建 <strong>mutations-types.js</strong> 文件 用来记录我们所有的事件名(要写上备注哦 代码可不只是你一个人看的)</font>\n</li>\n<li><font size=2>再新建 <strong>actions</strong> 文件夹 可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</font>\n</li>\n<li><font size=2>文件建好就开始开始写代码了</font>\n</li>\n<li><p><font size=2> 先在store.js文件中引入 vue 和 vuex 。并写一些state。引入各个文件夹</p>\n</li>\n<li>当然 你得在你新建的文件夹下面新建点什么，不然可会报错的哦~</font></li>\n<li><font size=2> 代码如下：(必须要写 Vue.use(Vuex) )</font><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> actions <span class=\"keyword\">from</span> <span class=\"string\">'./actions'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> getters <span class=\"keyword\">from</span> <span class=\"string\">'./getters'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> mutations <span class=\"keyword\">from</span> <span class=\"string\">'./mutations'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">    total:<span class=\"number\">2</span>,</span><br><span class=\"line\">    lists: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        id:<span class=\"number\">0</span>,</span><br><span class=\"line\">        articleName : <span class=\"string\">'如何学好vue'</span>,</span><br><span class=\"line\">        avatar : <span class=\"string\">'http://cn.vuejs.org/images/logo.png'</span>,</span><br><span class=\"line\">        date : <span class=\"string\">'2016-12-25'</span>,</span><br><span class=\"line\">        comment : <span class=\"string\">'vue是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层， 并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。'</span>,</span><br><span class=\"line\">        likes: <span class=\"number\">113</span>,</span><br><span class=\"line\">        liked:<span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        id:<span class=\"number\">1</span>,</span><br><span class=\"line\">        articleName : <span class=\"string\">'如何完全读懂javascript高级程序设计'</span>,</span><br><span class=\"line\">        avatar : <span class=\"string\">'https://sfault-avatar.b0.upaiyun.com/147/223/147223148-573297d0913c5_huge256'</span>,</span><br><span class=\"line\">        date : <span class=\"string\">'2017-12-25'</span>,</span><br><span class=\"line\">        comment : <span class=\"string\">'从最早期Netscape浏览器中的JavaScript开始讲起，直到当前它对XML和Web服务的具体支持，内容主要涉及JavaScript的语言特点、 JavaScript与浏览器的交互、更高级的JavaScript技巧，以及与在Web应用程序中部署JavaScript解决方案有关的问题，如错误处理、调试、安全性、优化/混淆化、XML和Web服务，最后介绍应用所有这些知识来创建动态用户界面。'</span>,</span><br><span class=\"line\">        likes: <span class=\"number\">564</span>,</span><br><span class=\"line\">        liked:<span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state, <span class=\"comment\">//状态</span></span><br><span class=\"line\">  getters, <span class=\"comment\">//处理state数据</span></span><br><span class=\"line\">  mutations, <span class=\"comment\">// 注册我们各种数据变化的方法</span></span><br><span class=\"line\">  actions, <span class=\"comment\">//可以编写异步的逻辑或者是一些逻辑，再去commit 我们的事件</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li><font size=2> state中是你的数据 </font>\n</li>\n<li><font size=2> 打开你在各个文件夹下新建的js文件。首先我们先处理数据，即对state进行处理，筛选或过滤或…反正就是当没有这些数据也不至于让你的项目报错！</font>\n</li>\n<li><font size=2> 怎么做就不用我告诉你了吧~ 你要导出你写的方法哦 不然 在 store 中挂载不上去~</font>\n</li>\n<li><font size=2> 然后在 <strong>mutations-types.js</strong> 文件中写上你创建的应用需要的事件 可以慢慢写 毕竟都是一步一步来的嘛！</font>\n</li>\n<li><font size=2> 再在mutations文件夹中写你的方法</font>\n</li>\n<li><font size=2> actions commit你的事件</font>\n</li>\n<li><font size=2> 流程清楚了嘛？ 不懂点击上面的链接参考代码~</font>\n\n</li>\n</ul>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"Mac调试真机","date":"2018-09-08T16:00:00.000Z","_content":"当\u001d我们的页面遇到在某些机型（iphone（不同ios版本））中报错导致页面点不了等情况时可以用这种方法来进行调试。\n<font size=1>**如有转载，请注明出处。**</font>\n## 真机调试\n## 1、手机数据线连接mac\n> mac打开safari，选择偏好设置 -> 高级，勾选\"在菜单中显示开发\"菜单。\n> 手机\b打开设置，设置Safari -> 高级 -> web检查器。\n> 在Mac中\b打开Safari，在菜单中选择开发 -> 你的iPhone -> 你的手机在Safari\b中打开的网页。\n> 打开调试器，你就可以开始调试啦~\n> 这样就ok啦~\n\n\n## 请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/mac.md","raw":"---\ntitle: Mac调试真机\ndate: 2018-09-09\ntags: mac\n---\n当\u001d我们的页面遇到在某些机型（iphone（不同ios版本））中报错导致页面点不了等情况时可以用这种方法来进行调试。\n<font size=1>**如有转载，请注明出处。**</font>\n## 真机调试\n## 1、手机数据线连接mac\n> mac打开safari，选择偏好设置 -> 高级，勾选\"在菜单中显示开发\"菜单。\n> 手机\b打开设置，设置Safari -> 高级 -> web检查器。\n> 在Mac中\b打开Safari，在菜单中选择开发 -> 你的iPhone -> 你的手机在Safari\b中打开的网页。\n> 打开调试器，你就可以开始调试啦~\n> 这样就ok啦~\n\n\n## 请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"mac","published":1,"updated":"2020-02-26T10:26:32.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z7000s000m85yad3wv","content":"<p>当\u001d我们的页面遇到在某些机型（iphone（不同ios版本））中报错导致页面点不了等情况时可以用这种方法来进行调试。</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"真机调试\"><a href=\"#真机调试\" class=\"headerlink\" title=\"真机调试\"></a>真机调试</h2><h2 id=\"1、手机数据线连接mac\"><a href=\"#1、手机数据线连接mac\" class=\"headerlink\" title=\"1、手机数据线连接mac\"></a>1、手机数据线连接mac</h2><blockquote>\n<p>mac打开safari，选择偏好设置 -&gt; 高级，勾选”在菜单中显示开发”菜单。<br>手机\b打开设置，设置Safari -&gt; 高级 -&gt; web检查器。<br>在Mac中\b打开Safari，在菜单中选择开发 -&gt; 你的iPhone -&gt; 你的手机在Safari\b中打开的网页。<br>打开调试器，你就可以开始调试啦~<br>这样就ok啦~</p>\n</blockquote>\n<h2 id=\"请耐心等待，麦麦会不定期更新哒\"><a href=\"#请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"请耐心等待，麦麦会不定期更新哒~\"></a>请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>当\u001d我们的页面遇到在某些机型（iphone（不同ios版本））中报错导致页面点不了等情况时可以用这种方法来进行调试。</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"真机调试\"><a href=\"#真机调试\" class=\"headerlink\" title=\"真机调试\"></a>真机调试</h2><h2 id=\"1、手机数据线连接mac\"><a href=\"#1、手机数据线连接mac\" class=\"headerlink\" title=\"1、手机数据线连接mac\"></a>1、手机数据线连接mac</h2><blockquote>\n<p>mac打开safari，选择偏好设置 -&gt; 高级，勾选”在菜单中显示开发”菜单。<br>手机\b打开设置，设置Safari -&gt; 高级 -&gt; web检查器。<br>在Mac中\b打开Safari，在菜单中选择开发 -&gt; 你的iPhone -&gt; 你的手机在Safari\b中打开的网页。<br>打开调试器，你就可以开始调试啦~<br>这样就ok啦~</p>\n</blockquote>\n<h2 id=\"请耐心等待，麦麦会不定期更新哒\"><a href=\"#请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"请耐心等待，麦麦会不定期更新哒~\"></a>请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"},{"title":"jquery 简单弹出框插件教程","date":"2017-06-24T16:00:00.000Z","_content":"简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>弹出框htm部分\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\" />\n ```python\n <!DOCTYPE html>\n <html lang=\"en\">\n <head>\n   <meta charset=\"UTF-8\">\n   <title>dialog弹出框</title>\n   <link rel=\"stylesheet\" href=\"../build/css/a.css\"/>\n   <script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"></script>\n   <script type=\"text/javascript\" src=\"../build/js/a.js\"></script>\n\n </head>\n <body>\n   <button id=\"btn\">弹出框</button><button id=\"btn1\">弹出框</button>\n   <form id=\"formAdd\" class=\"hide\">\n     <div class=\"form-group\">\n       <label for=\"exampleInputEmail1\">Email address</label>\n       <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputPassword1\">Password</label>\n       <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputFile\">File input</label>\n       <input type=\"file\" id=\"exampleInputFile\">\n       <p class=\"help-block\">Example block-level help text here.</p>\n     </div>\n     <div class=\"checkbox\">\n       <label>\n         <input type=\"checkbox\"> Check me out\n       </label>\n     </div>\n     <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n   </form>\n   <script type=\"text/javascript\">\n     $(document).ready(function(){\n       $(\"#btn\").dialog({\n         width :500,\n         // height:120,\n         title : \"提示信息\",\n         //content :\"我在测试哦\",\n         contentDom :\"#formAdd\"\n       });\n     });\n   </script>\n </body>\n </html>\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>弹出框插件\n> css部分\n.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:'微软雅黑'}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}\n> js部分\n ```python\n!function(t){t.fn.dialog=function(n){function i(){t(\".diaBox\").parent(\"div\").remove(),e=0}var e=0,d={title:\"标题\",content:\"\",contentDom:\"\",btns:[{elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function(){alert(\"确定\"),i()}},{elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function(){alert(\"取消\"),i()}}],width:500,height:\"auto\"},s=t.extend(d,n),o=this;o.on(\"click\",function(){if(\"0\"==e){var n=document.createElement(\"div\");t(n).css({width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"});var i=[];s.btns.length>0&&t.each(s.btns,function(t,n){i.push(\"<button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'>\"+s.btns[t].text+\"</button>\")}),i=i.join(\"\");var d=\"\";d=t(s.content.length>0?\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+s.content+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\":\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+t(s.contentDom).html()+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1}t(\".y_close\").on(\"click\",function(){t(n).remove(),e=0})}),s.btns.length>0&&t.each(s.btns,function(n,i){t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)})}}(jQuery);\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/popup.md","raw":"---\ntitle: jquery 简单弹出框插件教程\ndate: 2017-06-25\ntags: jq\n---\n简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>弹出框htm部分\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\" />\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\" />\n ```python\n <!DOCTYPE html>\n <html lang=\"en\">\n <head>\n   <meta charset=\"UTF-8\">\n   <title>dialog弹出框</title>\n   <link rel=\"stylesheet\" href=\"../build/css/a.css\"/>\n   <script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"></script>\n   <script type=\"text/javascript\" src=\"../build/js/a.js\"></script>\n\n </head>\n <body>\n   <button id=\"btn\">弹出框</button><button id=\"btn1\">弹出框</button>\n   <form id=\"formAdd\" class=\"hide\">\n     <div class=\"form-group\">\n       <label for=\"exampleInputEmail1\">Email address</label>\n       <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputPassword1\">Password</label>\n       <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n     </div>\n     <div class=\"form-group\">\n       <label for=\"exampleInputFile\">File input</label>\n       <input type=\"file\" id=\"exampleInputFile\">\n       <p class=\"help-block\">Example block-level help text here.</p>\n     </div>\n     <div class=\"checkbox\">\n       <label>\n         <input type=\"checkbox\"> Check me out\n       </label>\n     </div>\n     <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n   </form>\n   <script type=\"text/javascript\">\n     $(document).ready(function(){\n       $(\"#btn\").dialog({\n         width :500,\n         // height:120,\n         title : \"提示信息\",\n         //content :\"我在测试哦\",\n         contentDom :\"#formAdd\"\n       });\n     });\n   </script>\n </body>\n </html>\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>弹出框插件\n> css部分\n.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:'微软雅黑'}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}\n> js部分\n ```python\n!function(t){t.fn.dialog=function(n){function i(){t(\".diaBox\").parent(\"div\").remove(),e=0}var e=0,d={title:\"标题\",content:\"\",contentDom:\"\",btns:[{elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function(){alert(\"确定\"),i()}},{elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function(){alert(\"取消\"),i()}}],width:500,height:\"auto\"},s=t.extend(d,n),o=this;o.on(\"click\",function(){if(\"0\"==e){var n=document.createElement(\"div\");t(n).css({width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"});var i=[];s.btns.length>0&&t.each(s.btns,function(t,n){i.push(\"<button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'>\"+s.btns[t].text+\"</button>\")}),i=i.join(\"\");var d=\"\";d=t(s.content.length>0?\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+s.content+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\":\"<div class='diaBox'><div class='y-top'><div class='l pl10'>\"+s.title+\"</div><div class='r mr10 y_close cso'> × </div></div><div class='pd10 y_center'>\"+t(s.contentDom).html()+\"</div><div class='pd10 y_bottom'><div class='r btnposi'>\"+i+\"</div></div></div>\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1}t(\".y_close\").on(\"click\",function(){t(n).remove(),e=0})}),s.btns.length>0&&t.each(s.btns,function(n,i){t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)})}}(jQuery);\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"popup","published":1,"updated":"2020-02-26T10:26:28.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z8000t000m91z656d9","content":"<p>简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>弹出框htm部分<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\" /><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\" /><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\" /><br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">  &lt;title&gt;dialog弹出框&lt;/title&gt;</span><br><span class=\"line\">  &lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"../build/css/a.css\"</span>/&gt;</span><br><span class=\"line\">  &lt;script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script type=\"text/javascript\" src=\"../build/js/a.js\"&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;button id=\"btn\"&gt;弹出框&lt;/button&gt;&lt;button id=\"btn1\"&gt;弹出框&lt;/button&gt;</span><br><span class=\"line\">  &lt;form id=\"formAdd\" class=\"hide\"&gt;</span><br><span class=\"line\">    &lt;div class=\"form-group\"&gt;</span><br><span class=\"line\">      &lt;label for=\"exampleInputEmail1\"&gt;Email address&lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\"&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=\"form-group\"&gt;</span><br><span class=\"line\">      &lt;label for=\"exampleInputPassword1\"&gt;Password&lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=\"form-group\"&gt;</span><br><span class=\"line\">      &lt;label for=\"exampleInputFile\"&gt;File input&lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"exampleInputFile\"</span>&gt;</span><br><span class=\"line\">      &lt;p class=\"help-block\"&gt;Example block-level help text here.&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=\"checkbox\"&gt;</span><br><span class=\"line\">      &lt;label&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">\"checkbox\"</span>&gt; Check me out</span><br><span class=\"line\">      &lt;/label&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;button type=\"submit\" class=\"btn btn-default\"&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">  &lt;/form&gt;</span><br><span class=\"line\">  &lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    $(document).ready(function()&#123;</span><br><span class=\"line\">      $(<span class=\"string\">\"#btn\"</span>).dialog(&#123;</span><br><span class=\"line\">        width :<span class=\"number\">500</span>,</span><br><span class=\"line\">        // height:<span class=\"number\">120</span>,</span><br><span class=\"line\">        title : <span class=\"string\">\"提示信息\"</span>,</span><br><span class=\"line\">        //content :<span class=\"string\">\"我在测试哦\"</span>,</span><br><span class=\"line\">        contentDom :<span class=\"string\">\"#formAdd\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br><i class=\"icon-cloud\"></i>弹出框插件<br>css部分<br>.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:’微软雅黑’}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}<br>js部分<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(t)&#123;t.fn.dialog=function(n)&#123;function i()&#123;t(\".diaBox\").parent(\"div\").remove(),e=0&#125;var e=0,d=&#123;title:\"标题\",content:\"\",contentDom:\"\",btns:[&#123;elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function()&#123;alert(\"确定\"),i()&#125;&#125;,&#123;elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function()&#123;alert(\"取消\"),i()&#125;&#125;],width:500,height:\"auto\"&#125;,s=t.extend(d,n),o=this;o.on(\"click\",function()&#123;if(\"0\"==e)&#123;var n=document.createElement(\"div\");t(n).css(&#123;width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"&#125;);var i=[];s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(t,n)&#123;i.push(\"&lt;button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'&gt;\"+s.btns[t].text+\"&lt;/button&gt;\")&#125;),i=i.join(\"\");var d=\"\";d=t(s.content.length&gt;0?\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+s.content+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\":\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+t(s.contentDom).html()+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1&#125;t(\".y_close\").on(\"click\",function()&#123;t(n).remove(),e=0&#125;)&#125;),s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(n,i)&#123;t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)&#125;)&#125;&#125;(jQuery);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<p>简单的弹出框~(目前一个页面只允许有一个弹出框，多个dom会影响，以后多多改进)</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>弹出框htm部分<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/5.png?raw=true\" /><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/65.png?raw=true\" /><br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/36.png?raw=true\" /><br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">  &lt;title&gt;dialog弹出框&lt;/title&gt;</span><br><span class=\"line\">  &lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"../build/css/a.css\"</span>/&gt;</span><br><span class=\"line\">  &lt;script src=\"http://www.lanrenzhijia.com/ajaxjs/jquery.min.js\"&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script type=\"text/javascript\" src=\"../build/js/a.js\"&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;button id=\"btn\"&gt;弹出框&lt;/button&gt;&lt;button id=\"btn1\"&gt;弹出框&lt;/button&gt;</span><br><span class=\"line\">  &lt;form id=\"formAdd\" class=\"hide\"&gt;</span><br><span class=\"line\">    &lt;div class=\"form-group\"&gt;</span><br><span class=\"line\">      &lt;label for=\"exampleInputEmail1\"&gt;Email address&lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\"&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=\"form-group\"&gt;</span><br><span class=\"line\">      &lt;label for=\"exampleInputPassword1\"&gt;Password&lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=\"form-group\"&gt;</span><br><span class=\"line\">      &lt;label for=\"exampleInputFile\"&gt;File input&lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"exampleInputFile\"</span>&gt;</span><br><span class=\"line\">      &lt;p class=\"help-block\"&gt;Example block-level help text here.&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=\"checkbox\"&gt;</span><br><span class=\"line\">      &lt;label&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">\"checkbox\"</span>&gt; Check me out</span><br><span class=\"line\">      &lt;/label&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;button type=\"submit\" class=\"btn btn-default\"&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">  &lt;/form&gt;</span><br><span class=\"line\">  &lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    $(document).ready(function()&#123;</span><br><span class=\"line\">      $(<span class=\"string\">\"#btn\"</span>).dialog(&#123;</span><br><span class=\"line\">        width :<span class=\"number\">500</span>,</span><br><span class=\"line\">        // height:<span class=\"number\">120</span>,</span><br><span class=\"line\">        title : <span class=\"string\">\"提示信息\"</span>,</span><br><span class=\"line\">        //content :<span class=\"string\">\"我在测试哦\"</span>,</span><br><span class=\"line\">        contentDom :<span class=\"string\">\"#formAdd\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>","more":"<br><i class=\"icon-cloud\"></i>弹出框插件<br>css部分<br>.l{float:left}.r{float:right}.cl{clear:both}.n{font-weight:normal;font-style:normal}.b{font-weight:bold}.i{font-style:italic}.fw{font-family:’微软雅黑’}.tc{text-align:center}.tr{text-align:right}.tl{text-align:left}.tdl{text-decoration:underline}.tdn,.tdn:hover,a.tdl:hover{text-decoration:none}.f0{font-size:0}.f10{font-size:10px}.f12{font-size:12px}.f13{font-size:13px}.f14{font-size:14px}.f16{font-size:16px}.f20{font-size:20px}.f24{font-size:24px}.vm{vertical-align:middle}.vtb{vertical-align:text-bottom}.vt{vertical-align:top}.vn{vertical-align:-2px}.vimg{margin-bottom:-3px}.pl10{padding-left:10px}.mr10{margin-right:10px}.cso{cursor:pointer}.pd10{padding:10px}.dn{display:none}*{box-sizing:border-box}body{background:#f8f8f8;font-size:16px}body .hide{display:none}body .form-group{margin-bottom:15px}body label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}body .form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}body .diaBox{width:100%;height:100%;box-shadow:0 0 7px #aaa;border:1px solid #aaa;border-radius:5px}body .diaBox .y-top{height:30px;line-height:30px;background:rgba(219,235,230,0.2)}body .diaBox .y_center{width:100%;box-sizing:border-box}body .diaBox .y_bottom .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px;margin-left:5px}body .diaBox .y_bottom .btn-defalut{color:#333;background-color:#fff;border-color:#ccc}body .diaBox .y_bottom .btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}body .diaBox .y_bottom .btnposi{position:absolute;bottom:10px;right:10px}<br>js部分<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(t)&#123;t.fn.dialog=function(n)&#123;function i()&#123;t(\".diaBox\").parent(\"div\").remove(),e=0&#125;var e=0,d=&#123;title:\"标题\",content:\"\",contentDom:\"\",btns:[&#123;elId:\"ok\",els:\"btn btn-primary\",text:\"确定\",handler:function()&#123;alert(\"确定\"),i()&#125;&#125;,&#123;elId:\"cancel\",els:\"btn btn-defalut\",text:\"取消\",handler:function()&#123;alert(\"取消\"),i()&#125;&#125;],width:500,height:\"auto\"&#125;,s=t.extend(d,n),o=this;o.on(\"click\",function()&#123;if(\"0\"==e)&#123;var n=document.createElement(\"div\");t(n).css(&#123;width:s.width,height:s.height,position:\"absolute\",top:\"10%\",left:\"30%\"&#125;);var i=[];s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(t,n)&#123;i.push(\"&lt;button id='\"+s.btns[t].elId+\"' class='\"+s.btns[t].els+\"'&gt;\"+s.btns[t].text+\"&lt;/button&gt;\")&#125;),i=i.join(\"\");var d=\"\";d=t(s.content.length&gt;0?\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+s.content+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\":\"&lt;div class='diaBox'&gt;&lt;div class='y-top'&gt;&lt;div class='l pl10'&gt;\"+s.title+\"&lt;/div&gt;&lt;div class='r mr10 y_close cso'&gt; × &lt;/div&gt;&lt;/div&gt;&lt;div class='pd10 y_center'&gt;\"+t(s.contentDom).html()+\"&lt;/div&gt;&lt;div class='pd10 y_bottom'&gt;&lt;div class='r btnposi'&gt;\"+i+\"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\"),d.appendTo(n),t(n).appendTo(t(\"body\")),e=1&#125;t(\".y_close\").on(\"click\",function()&#123;t(n).remove(),e=0&#125;)&#125;),s.btns.length&gt;0&amp;&amp;t.each(s.btns,function(n,i)&#123;t(\"body\").on(\"click\",\"#\"+s.btns[n].elId,s.btns[n].handler)&#125;)&#125;&#125;(jQuery);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"React-Quill插入视频bug 以及 图片上传oss","date":"2021-05-12T16:00:00.000Z","_content":"hello~ 我好像真的好久好久没写博客了，对不起父老乡亲们，人越来越懒了\n最近项目里用到了react-quill，这个编辑器，是react对quill的封装\n但是发现了在插入视频的时候 插入的元素不是video标签，而是一个iframe\n且每插入一遍后悔下载一次想要插入的视频，就去找了下解决办法\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 正常用 React-Quill\n\n```javascript\n  import ReactQuill from 'react-quill';\n\n  const [text, setText] = useState('');\n\n  // 配置toolbar\n  const toolbarContainer = [\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ font: [] }],\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    [{ align: [] }],\n    [{ color: [] }, { background: [] }],\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n    ['blockquote', 'code-block'],\n\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    ['image', 'video', 'link'],\n\n    ['clean'],\n  ];\n\n  // 重新上传图片\n  const modules = {\n    toolbar: {\n      container: toolbarContainer,\n      handlers: {\n        image: showImageUI,\n      },\n    },\n  };\n\n  const showImageUI = () => {\n    const quillEditor = quillRef.current.getEditor();\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n    input.onchange = async () => {\n      try {\n        // 获取 signature\n        const res = await fetchSignature();\n        if (!res.success) return;\n        const oss = res.data;\n        const file = input.files[0];\n        let formData = new FormData();\n        const fileName = file.name;\n        formData.append('key', `website/${oss['dir']}/${fileName}`);\n        formData.append('dir', oss['dir']);\n        formData.append('policy', oss['policy']);\n        formData.append('OSSAccessKeyId', oss['accessid']);\n        formData.append('success_action_status', '200');\n        formData.append('signature', oss['signature']);\n        formData.append('file', file, fileName);\n        const host = oss.host.replace('http', 'https');\n        // 上传 oss\n        await axios.post(host, formData);\n        const url = `${host}/website/${oss['dir']}/${fileName}`;\n        const range = quillEditor.getSelection();\n        quillEditor.insertEmbed(range.index, 'image', url);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n  };\n\n  // 为啥这边要价格setTimeout呢？因为不加的话会有抖动效果\n  const handleTextChange = (textTyped: any) => {\n    setTimeout(() => {\n      setText(textTyped);\n    }, 10);\n  };\n\n  <ReactQuill\n    ref={quillRef}\n    theme=\"snow\"\n    modules={modules}\n    value={text}\n    onChange={() => handleTextChange}\n  />\n\n```\n> 修改 video 按钮\n\n```javascript\n  // 引入 Quill\n  import ReactQuill, { Quill } from 'react-quill';\n\n  // 放在组件前\n  const Video = Quill.import('formats/video');\n  const Link = Quill.import('formats/link');\n\n  class CoustomVideo extends Video {\n    static create(value) {\n      const node = super.create(value);\n\n      const video = document.createElement('video');\n      video.setAttribute('controls', true);\n      video.setAttribute('type', 'video/mp4');\n      video.setAttribute('style', 'width: 100%');\n      video.setAttribute('src', this.sanitize(value));\n      node.appendChild(video);\n\n      return node;\n    }\n\n    static sanitize(url) {\n      return Link.sanitize(url);\n    }\n  }\n  CoustomVideo.blotName = 'video';\n  CoustomVideo.className = 'ql-video';\n  CoustomVideo.tagName = 'DIV';\n\n  Quill.register('formats/video', CoustomVideo);\n```\n\n顺带说一下，用到富文本内容展示的时候 需要引入他的css\n```javascript\nimport 'react-quill/dist/quill.snow.css';\n```\n\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/quill.md","raw":"---\ntitle: React-Quill插入视频bug 以及 图片上传oss\ndate: 2021-05-13\ntags: react\n---\nhello~ 我好像真的好久好久没写博客了，对不起父老乡亲们，人越来越懒了\n最近项目里用到了react-quill，这个编辑器，是react对quill的封装\n但是发现了在插入视频的时候 插入的元素不是video标签，而是一个iframe\n且每插入一遍后悔下载一次想要插入的视频，就去找了下解决办法\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 正常用 React-Quill\n\n```javascript\n  import ReactQuill from 'react-quill';\n\n  const [text, setText] = useState('');\n\n  // 配置toolbar\n  const toolbarContainer = [\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ font: [] }],\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    [{ align: [] }],\n    [{ color: [] }, { background: [] }],\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n    ['blockquote', 'code-block'],\n\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    ['image', 'video', 'link'],\n\n    ['clean'],\n  ];\n\n  // 重新上传图片\n  const modules = {\n    toolbar: {\n      container: toolbarContainer,\n      handlers: {\n        image: showImageUI,\n      },\n    },\n  };\n\n  const showImageUI = () => {\n    const quillEditor = quillRef.current.getEditor();\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n    input.onchange = async () => {\n      try {\n        // 获取 signature\n        const res = await fetchSignature();\n        if (!res.success) return;\n        const oss = res.data;\n        const file = input.files[0];\n        let formData = new FormData();\n        const fileName = file.name;\n        formData.append('key', `website/${oss['dir']}/${fileName}`);\n        formData.append('dir', oss['dir']);\n        formData.append('policy', oss['policy']);\n        formData.append('OSSAccessKeyId', oss['accessid']);\n        formData.append('success_action_status', '200');\n        formData.append('signature', oss['signature']);\n        formData.append('file', file, fileName);\n        const host = oss.host.replace('http', 'https');\n        // 上传 oss\n        await axios.post(host, formData);\n        const url = `${host}/website/${oss['dir']}/${fileName}`;\n        const range = quillEditor.getSelection();\n        quillEditor.insertEmbed(range.index, 'image', url);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n  };\n\n  // 为啥这边要价格setTimeout呢？因为不加的话会有抖动效果\n  const handleTextChange = (textTyped: any) => {\n    setTimeout(() => {\n      setText(textTyped);\n    }, 10);\n  };\n\n  <ReactQuill\n    ref={quillRef}\n    theme=\"snow\"\n    modules={modules}\n    value={text}\n    onChange={() => handleTextChange}\n  />\n\n```\n> 修改 video 按钮\n\n```javascript\n  // 引入 Quill\n  import ReactQuill, { Quill } from 'react-quill';\n\n  // 放在组件前\n  const Video = Quill.import('formats/video');\n  const Link = Quill.import('formats/link');\n\n  class CoustomVideo extends Video {\n    static create(value) {\n      const node = super.create(value);\n\n      const video = document.createElement('video');\n      video.setAttribute('controls', true);\n      video.setAttribute('type', 'video/mp4');\n      video.setAttribute('style', 'width: 100%');\n      video.setAttribute('src', this.sanitize(value));\n      node.appendChild(video);\n\n      return node;\n    }\n\n    static sanitize(url) {\n      return Link.sanitize(url);\n    }\n  }\n  CoustomVideo.blotName = 'video';\n  CoustomVideo.className = 'ql-video';\n  CoustomVideo.tagName = 'DIV';\n\n  Quill.register('formats/video', CoustomVideo);\n```\n\n顺带说一下，用到富文本内容展示的时候 需要引入他的css\n```javascript\nimport 'react-quill/dist/quill.snow.css';\n```\n\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"quill","published":1,"updated":"2021-05-13T08:07:47.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z9000w000m9sal1xem","content":"<p>hello~ 我好像真的好久好久没写博客了，对不起父老乡亲们，人越来越懒了<br>最近项目里用到了react-quill，这个编辑器，是react对quill的封装<br>但是发现了在插入视频的时候 插入的元素不是video标签，而是一个iframe<br>且每插入一遍后悔下载一次想要插入的视频，就去找了下解决办法</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>正常用 React-Quill</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ReactQuill <span class=\"keyword\">from</span> <span class=\"string\">'react-quill'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> [text, setText] = useState(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置toolbar</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> toolbarContainer = [</span><br><span class=\"line\">  [&#123; <span class=\"attr\">size</span>: [<span class=\"string\">'small'</span>, <span class=\"literal\">false</span>, <span class=\"string\">'large'</span>, <span class=\"string\">'huge'</span>] &#125;], <span class=\"comment\">// custom dropdown</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">font</span>: [] &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">header</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"attr\">header</span>: <span class=\"number\">2</span> &#125;], <span class=\"comment\">// custom button values</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">header</span>: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"literal\">false</span>] &#125;],</span><br><span class=\"line\">  [<span class=\"string\">'bold'</span>, <span class=\"string\">'italic'</span>, <span class=\"string\">'underline'</span>, <span class=\"string\">'strike'</span>], <span class=\"comment\">// toggled buttons</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">align</span>: [] &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">color</span>: [] &#125;, &#123; <span class=\"attr\">background</span>: [] &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">indent</span>: <span class=\"string\">'-1'</span> &#125;, &#123; <span class=\"attr\">indent</span>: <span class=\"string\">'+1'</span> &#125;], <span class=\"comment\">// outdent/indent</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">direction</span>: <span class=\"string\">'rtl'</span> &#125;], <span class=\"comment\">// text direction</span></span><br><span class=\"line\">  [<span class=\"string\">'blockquote'</span>, <span class=\"string\">'code-block'</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">  [&#123; <span class=\"attr\">list</span>: <span class=\"string\">'ordered'</span> &#125;, &#123; <span class=\"attr\">list</span>: <span class=\"string\">'bullet'</span> &#125;],</span><br><span class=\"line\">  [<span class=\"string\">'image'</span>, <span class=\"string\">'video'</span>, <span class=\"string\">'link'</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">  [<span class=\"string\">'clean'</span>],</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重新上传图片</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> modules = &#123;</span><br><span class=\"line\">  toolbar: &#123;</span><br><span class=\"line\">    container: toolbarContainer,</span><br><span class=\"line\">    handlers: &#123;</span><br><span class=\"line\">      image: showImageUI,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> showImageUI = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> quillEditor = quillRef.current.getEditor();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> input = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'input'</span>);</span><br><span class=\"line\">  input.setAttribute(<span class=\"string\">'type'</span>, <span class=\"string\">'file'</span>);</span><br><span class=\"line\">  input.setAttribute(<span class=\"string\">'accept'</span>, <span class=\"string\">'image/*'</span>);</span><br><span class=\"line\">  input.click();</span><br><span class=\"line\">  input.onchange = <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 获取 signature</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> fetchSignature();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!res.success) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> oss = res.data;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> file = input.files[<span class=\"number\">0</span>];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> formData = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\">      <span class=\"keyword\">const</span> fileName = file.name;</span><br><span class=\"line\">      formData.append(<span class=\"string\">'key'</span>, <span class=\"string\">`website/<span class=\"subst\">$&#123;oss[<span class=\"string\">'dir'</span>]&#125;</span>/<span class=\"subst\">$&#123;fileName&#125;</span>`</span>);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'dir'</span>, oss[<span class=\"string\">'dir'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'policy'</span>, oss[<span class=\"string\">'policy'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'OSSAccessKeyId'</span>, oss[<span class=\"string\">'accessid'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'success_action_status'</span>, <span class=\"string\">'200'</span>);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'signature'</span>, oss[<span class=\"string\">'signature'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'file'</span>, file, fileName);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> host = oss.host.replace(<span class=\"string\">'http'</span>, <span class=\"string\">'https'</span>);</span><br><span class=\"line\">      <span class=\"comment\">// 上传 oss</span></span><br><span class=\"line\">      <span class=\"keyword\">await</span> axios.post(host, formData);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> url = <span class=\"string\">`<span class=\"subst\">$&#123;host&#125;</span>/website/<span class=\"subst\">$&#123;oss[<span class=\"string\">'dir'</span>]&#125;</span>/<span class=\"subst\">$&#123;fileName&#125;</span>`</span>;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> range = quillEditor.getSelection();</span><br><span class=\"line\">      quillEditor.insertEmbed(range.index, <span class=\"string\">'image'</span>, url);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.error(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 为啥这边要价格setTimeout呢？因为不加的话会有抖动效果</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> handleTextChange = <span class=\"function\">(<span class=\"params\">textTyped: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    setText(textTyped);</span><br><span class=\"line\">  &#125;, <span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ReactQuill</span><br><span class=\"line\">  ref=&#123;quillRef&#125;</span><br><span class=\"line\">  theme=<span class=\"string\">\"snow\"</span></span><br><span class=\"line\">  modules=&#123;modules&#125;</span><br><span class=\"line\">  value=&#123;text&#125;</span><br><span class=\"line\">  onChange=&#123;() =&gt; handleTextChange&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改 video 按钮</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入 Quill</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactQuill, &#123; Quill &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-quill'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 放在组件前</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Video = Quill.import(<span class=\"string\">'formats/video'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> Link = Quill.import(<span class=\"string\">'formats/link'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CoustomVideo</span> <span class=\"keyword\">extends</span> <span class=\"title\">Video</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> create(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> node = <span class=\"keyword\">super</span>.create(value);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> video = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'video'</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'controls'</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'type'</span>, <span class=\"string\">'video/mp4'</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'style'</span>, <span class=\"string\">'width: 100%'</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'src'</span>, <span class=\"keyword\">this</span>.sanitize(value));</span><br><span class=\"line\">    node.appendChild(video);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> node;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> sanitize(url) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Link.sanitize(url);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">CoustomVideo.blotName = <span class=\"string\">'video'</span>;</span><br><span class=\"line\">CoustomVideo.className = <span class=\"string\">'ql-video'</span>;</span><br><span class=\"line\">CoustomVideo.tagName = <span class=\"string\">'DIV'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Quill.register(<span class=\"string\">'formats/video'</span>, CoustomVideo);</span><br></pre></td></tr></table></figure>\n<p>顺带说一下，用到富文本内容展示的时候 需要引入他的css<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'react-quill/dist/quill.snow.css'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>hello~ 我好像真的好久好久没写博客了，对不起父老乡亲们，人越来越懒了<br>最近项目里用到了react-quill，这个编辑器，是react对quill的封装<br>但是发现了在插入视频的时候 插入的元素不是video标签，而是一个iframe<br>且每插入一遍后悔下载一次想要插入的视频，就去找了下解决办法</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>正常用 React-Quill</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ReactQuill <span class=\"keyword\">from</span> <span class=\"string\">'react-quill'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> [text, setText] = useState(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置toolbar</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> toolbarContainer = [</span><br><span class=\"line\">  [&#123; <span class=\"attr\">size</span>: [<span class=\"string\">'small'</span>, <span class=\"literal\">false</span>, <span class=\"string\">'large'</span>, <span class=\"string\">'huge'</span>] &#125;], <span class=\"comment\">// custom dropdown</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">font</span>: [] &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">header</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"attr\">header</span>: <span class=\"number\">2</span> &#125;], <span class=\"comment\">// custom button values</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">header</span>: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"literal\">false</span>] &#125;],</span><br><span class=\"line\">  [<span class=\"string\">'bold'</span>, <span class=\"string\">'italic'</span>, <span class=\"string\">'underline'</span>, <span class=\"string\">'strike'</span>], <span class=\"comment\">// toggled buttons</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">align</span>: [] &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">color</span>: [] &#125;, &#123; <span class=\"attr\">background</span>: [] &#125;],</span><br><span class=\"line\">  [&#123; <span class=\"attr\">indent</span>: <span class=\"string\">'-1'</span> &#125;, &#123; <span class=\"attr\">indent</span>: <span class=\"string\">'+1'</span> &#125;], <span class=\"comment\">// outdent/indent</span></span><br><span class=\"line\">  [&#123; <span class=\"attr\">direction</span>: <span class=\"string\">'rtl'</span> &#125;], <span class=\"comment\">// text direction</span></span><br><span class=\"line\">  [<span class=\"string\">'blockquote'</span>, <span class=\"string\">'code-block'</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">  [&#123; <span class=\"attr\">list</span>: <span class=\"string\">'ordered'</span> &#125;, &#123; <span class=\"attr\">list</span>: <span class=\"string\">'bullet'</span> &#125;],</span><br><span class=\"line\">  [<span class=\"string\">'image'</span>, <span class=\"string\">'video'</span>, <span class=\"string\">'link'</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">  [<span class=\"string\">'clean'</span>],</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重新上传图片</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> modules = &#123;</span><br><span class=\"line\">  toolbar: &#123;</span><br><span class=\"line\">    container: toolbarContainer,</span><br><span class=\"line\">    handlers: &#123;</span><br><span class=\"line\">      image: showImageUI,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> showImageUI = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> quillEditor = quillRef.current.getEditor();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> input = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'input'</span>);</span><br><span class=\"line\">  input.setAttribute(<span class=\"string\">'type'</span>, <span class=\"string\">'file'</span>);</span><br><span class=\"line\">  input.setAttribute(<span class=\"string\">'accept'</span>, <span class=\"string\">'image/*'</span>);</span><br><span class=\"line\">  input.click();</span><br><span class=\"line\">  input.onchange = <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 获取 signature</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> fetchSignature();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!res.success) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> oss = res.data;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> file = input.files[<span class=\"number\">0</span>];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> formData = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\">      <span class=\"keyword\">const</span> fileName = file.name;</span><br><span class=\"line\">      formData.append(<span class=\"string\">'key'</span>, <span class=\"string\">`website/<span class=\"subst\">$&#123;oss[<span class=\"string\">'dir'</span>]&#125;</span>/<span class=\"subst\">$&#123;fileName&#125;</span>`</span>);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'dir'</span>, oss[<span class=\"string\">'dir'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'policy'</span>, oss[<span class=\"string\">'policy'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'OSSAccessKeyId'</span>, oss[<span class=\"string\">'accessid'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'success_action_status'</span>, <span class=\"string\">'200'</span>);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'signature'</span>, oss[<span class=\"string\">'signature'</span>]);</span><br><span class=\"line\">      formData.append(<span class=\"string\">'file'</span>, file, fileName);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> host = oss.host.replace(<span class=\"string\">'http'</span>, <span class=\"string\">'https'</span>);</span><br><span class=\"line\">      <span class=\"comment\">// 上传 oss</span></span><br><span class=\"line\">      <span class=\"keyword\">await</span> axios.post(host, formData);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> url = <span class=\"string\">`<span class=\"subst\">$&#123;host&#125;</span>/website/<span class=\"subst\">$&#123;oss[<span class=\"string\">'dir'</span>]&#125;</span>/<span class=\"subst\">$&#123;fileName&#125;</span>`</span>;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> range = quillEditor.getSelection();</span><br><span class=\"line\">      quillEditor.insertEmbed(range.index, <span class=\"string\">'image'</span>, url);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.error(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 为啥这边要价格setTimeout呢？因为不加的话会有抖动效果</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> handleTextChange = <span class=\"function\">(<span class=\"params\">textTyped: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    setText(textTyped);</span><br><span class=\"line\">  &#125;, <span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ReactQuill</span><br><span class=\"line\">  ref=&#123;quillRef&#125;</span><br><span class=\"line\">  theme=<span class=\"string\">\"snow\"</span></span><br><span class=\"line\">  modules=&#123;modules&#125;</span><br><span class=\"line\">  value=&#123;text&#125;</span><br><span class=\"line\">  onChange=&#123;() =&gt; handleTextChange&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改 video 按钮</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入 Quill</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactQuill, &#123; Quill &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-quill'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 放在组件前</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Video = Quill.import(<span class=\"string\">'formats/video'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> Link = Quill.import(<span class=\"string\">'formats/link'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CoustomVideo</span> <span class=\"keyword\">extends</span> <span class=\"title\">Video</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> create(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> node = <span class=\"keyword\">super</span>.create(value);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> video = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'video'</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'controls'</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'type'</span>, <span class=\"string\">'video/mp4'</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'style'</span>, <span class=\"string\">'width: 100%'</span>);</span><br><span class=\"line\">    video.setAttribute(<span class=\"string\">'src'</span>, <span class=\"keyword\">this</span>.sanitize(value));</span><br><span class=\"line\">    node.appendChild(video);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> node;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> sanitize(url) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Link.sanitize(url);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">CoustomVideo.blotName = <span class=\"string\">'video'</span>;</span><br><span class=\"line\">CoustomVideo.className = <span class=\"string\">'ql-video'</span>;</span><br><span class=\"line\">CoustomVideo.tagName = <span class=\"string\">'DIV'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Quill.register(<span class=\"string\">'formats/video'</span>, CoustomVideo);</span><br></pre></td></tr></table></figure>\n<p>顺带说一下，用到富文本内容展示的时候 需要引入他的css<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'react-quill/dist/quill.snow.css'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"},{"title":"react日常小难题整理","date":"2017-12-29T16:00:00.000Z","_content":"初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## React\n## 1、style问题在react中\n> 大兄弟~ 你是否想在react中使用行内样式\n> 如： style=\"height:30px\"\n> 然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~\n> 看！写成这样就没错列~\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\" />\n\n## 2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\n> 在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏\n> 一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\" />\n> 后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)\n```javascript\nreturn files.map((file,index)=>{\n  return <a key={index} href=\"\"><Icon type=\"paper-clip\" /> {file} </a>\n})\n```\n\n<!--more-->\n## 3、value 和 defaultValue 表格中回显问题---组件使用的是[ant design](https://ant.design/)\n> 对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。\n> 如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。\n> 目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：\n>新建一个form的组件，如\n```javascript\n const FromModel =React.createClass({\n  render(){\n    var self = this;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return(\n      <Form horizontal>\n        <Row gutter={24}>\n          <Col sm={12}>\n            <FormItem\n              label=\"人才姓名\"\n              {...formItemLayout}\n            >\n              <Input size=\"default\" defaultValue={this.props.record.name} />\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n})\n引用model的情况如下，亲测没有任何问题：\n<Modal title=\"修改\" visible={this.state.visible}\n       onOk={this.handleOk} onCancel={this.handleCancel}\n >\n   {\n      self.state.visible ?  //判断visible为true还是false false的话设为null\n      <FromModel ref=\"modelform\" record={self.state.record}/>\n       :null\n    }\n</Modal>\n```\n\n## 4、url地址栏中一直有/#/xxx的问题\n> 这是一个你会获取到的默认 history ，如果你不指定某个 history 。\n> 它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。\n> browserHistory 是由 React Router 创建浏览器应用推荐的 history。\n> 它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。\n> 使用 **browserHistory** 代替 **hashHistory**就可以解决这个问题啦~\n\n## 5、es5和es6写法对比\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\" />\n\n## 6、jsx语法中不允许判断的问题\n> 在jsx语法内部是不允许if判断的，即如下代码是会报错的：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\" />\n> 对于判断条件简单的用三目运算符 如：\n```javascript\nReact.render(\n  return(\n      <div id={condition ? 'true的情况' : 'false的情况'}>\n          Hello World!\n      </div>\n    )\n, mountNode);\n```\n> 对于判断条件复杂的用变量 如：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\" />\n\n## 7、父组件与子组件之间的传值问题\n> 对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考[阮一峰---React 入门实例教程](http://www.ruanyifeng.com/blog/2015/03/react.html)\n\n## 8、关于在react中想要使用jquery操作dom的问题\n> 虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~\n> 直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=>self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D\n\n## 9、数组嵌套深层拷贝问题\n> 近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，\n> 第二次才显示完整，用到了concat()拷贝深度数组并不起效果，\n> 最后。。。终于给我找出来了 记录一下\n```javascript\n\nfunction clone(source)\n{\n  var result;\n  (source instanceof Array) ? (result = []) : (result = {});\n\n  for (var key in source) {\n  result[key] = (typeof source[key]==='object') ? clone(source[key]) : source[key];\n  }\n  return result;\n}\n\n```\n## 10、对于在react中字符拼接的问题\n> 不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的\n```javascript\n <a href=\"xxxxx.html?code=\"+usercode>我要传参数跳转的啦~</a>\n```\n> 我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出\n> 改为\n```javascript\n <a href={\"xxxxx.html?code=\"+usercode}>我要传参数跳转的啦~</a>\n```\n\n## 11、ant design中的图片轮播报错问题\n```javascript\nlet imgTpl = (IMAGE_DATA || []).map((item, index) => {\n   return (\n   <div key={index} >\n      <a href={item.bannerUrl == '' ? \"javascript:;\" : item.bannerUrl}><img src={item.url} alt={item.bannerName}/></a>\n   </div>\n   );\n});\nif (!IMAGE_DATA.length) imgTpl = <div></div>;\n```\n\n## 12、请耐心等待，麦麦会不定期更新哒~\n\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/react-daily.md","raw":"---\ntitle: react日常小难题整理\ndate: 2017-12-30\ntags: React\n---\n初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~\n<font size=1>**如有转载，请注明出处。**</font>\n## React\n## 1、style问题在react中\n> 大兄弟~ 你是否想在react中使用行内样式\n> 如： style=\"height:30px\"\n> 然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~\n> 看！写成这样就没错列~\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\" />\n\n## 2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\n> 在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏\n> 一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\" />\n> 后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)\n```javascript\nreturn files.map((file,index)=>{\n  return <a key={index} href=\"\"><Icon type=\"paper-clip\" /> {file} </a>\n})\n```\n\n<!--more-->\n## 3、value 和 defaultValue 表格中回显问题---组件使用的是[ant design](https://ant.design/)\n> 对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。\n> 如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。\n> 目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：\n>新建一个form的组件，如\n```javascript\n const FromModel =React.createClass({\n  render(){\n    var self = this;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return(\n      <Form horizontal>\n        <Row gutter={24}>\n          <Col sm={12}>\n            <FormItem\n              label=\"人才姓名\"\n              {...formItemLayout}\n            >\n              <Input size=\"default\" defaultValue={this.props.record.name} />\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n})\n引用model的情况如下，亲测没有任何问题：\n<Modal title=\"修改\" visible={this.state.visible}\n       onOk={this.handleOk} onCancel={this.handleCancel}\n >\n   {\n      self.state.visible ?  //判断visible为true还是false false的话设为null\n      <FromModel ref=\"modelform\" record={self.state.record}/>\n       :null\n    }\n</Modal>\n```\n\n## 4、url地址栏中一直有/#/xxx的问题\n> 这是一个你会获取到的默认 history ，如果你不指定某个 history 。\n> 它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。\n> browserHistory 是由 React Router 创建浏览器应用推荐的 history。\n> 它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。\n> 使用 **browserHistory** 代替 **hashHistory**就可以解决这个问题啦~\n\n## 5、es5和es6写法对比\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\" />\n\n## 6、jsx语法中不允许判断的问题\n> 在jsx语法内部是不允许if判断的，即如下代码是会报错的：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\" />\n> 对于判断条件简单的用三目运算符 如：\n```javascript\nReact.render(\n  return(\n      <div id={condition ? 'true的情况' : 'false的情况'}>\n          Hello World!\n      </div>\n    )\n, mountNode);\n```\n> 对于判断条件复杂的用变量 如：\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\" />\n\n## 7、父组件与子组件之间的传值问题\n> 对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考[阮一峰---React 入门实例教程](http://www.ruanyifeng.com/blog/2015/03/react.html)\n\n## 8、关于在react中想要使用jquery操作dom的问题\n> 虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~\n> 直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=>self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D\n\n## 9、数组嵌套深层拷贝问题\n> 近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，\n> 第二次才显示完整，用到了concat()拷贝深度数组并不起效果，\n> 最后。。。终于给我找出来了 记录一下\n```javascript\n\nfunction clone(source)\n{\n  var result;\n  (source instanceof Array) ? (result = []) : (result = {});\n\n  for (var key in source) {\n  result[key] = (typeof source[key]==='object') ? clone(source[key]) : source[key];\n  }\n  return result;\n}\n\n```\n## 10、对于在react中字符拼接的问题\n> 不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的\n```javascript\n <a href=\"xxxxx.html?code=\"+usercode>我要传参数跳转的啦~</a>\n```\n> 我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出\n> 改为\n```javascript\n <a href={\"xxxxx.html?code=\"+usercode}>我要传参数跳转的啦~</a>\n```\n\n## 11、ant design中的图片轮播报错问题\n```javascript\nlet imgTpl = (IMAGE_DATA || []).map((item, index) => {\n   return (\n   <div key={index} >\n      <a href={item.bannerUrl == '' ? \"javascript:;\" : item.bannerUrl}><img src={item.url} alt={item.bannerName}/></a>\n   </div>\n   );\n});\nif (!IMAGE_DATA.length) imgTpl = <div></div>;\n```\n\n## 12、请耐心等待，麦麦会不定期更新哒~\n\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"react-daily","published":1,"updated":"2020-02-26T10:24:25.045Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0z9000y000mfs3dggy9","content":"<p>初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><h2 id=\"1、style问题在react中\"><a href=\"#1、style问题在react中\" class=\"headerlink\" title=\"1、style问题在react中\"></a>1、style问题在react中</h2><blockquote>\n<p>大兄弟~ 你是否想在react中使用行内样式<br>如： style=”height:30px”<br>然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~<br>看！写成这样就没错列~<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\" /></p>\n</blockquote>\n<h2 id=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"><a href=\"#2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\" class=\"headerlink\" title=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"></a>2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别</h2><blockquote>\n<p>在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏<br>一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\" /><br>后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> files.map(<span class=\"function\">(<span class=\"params\">file,index</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;index&#125;</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Icon</span> <span class=\"attr\">type</span>=<span class=\"string\">\"paper-clip\"</span> /&gt;</span> &#123;file&#125; <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\"><a href=\"#3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\" class=\"headerlink\" title=\"3、value 和 defaultValue 表格中回显问题—组件使用的是ant design\"></a>3、value 和 defaultValue 表格中回显问题—组件使用的是<a href=\"https://ant.design/\" target=\"_blank\" rel=\"noopener\">ant design</a></h2><blockquote>\n<p>对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。<br>如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。<br>目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：<br>新建一个form的组件，如<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> FromModel =React.createClass(&#123;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> formItemLayout = &#123;</span><br><span class=\"line\">      labelCol: &#123; <span class=\"attr\">span</span>: <span class=\"number\">6</span> &#125;,</span><br><span class=\"line\">      wrapperCol: &#123; <span class=\"attr\">span</span>: <span class=\"number\">14</span> &#125;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;Form horizontal&gt;</span><br><span class=\"line\">        &lt;Row gutter=&#123;<span class=\"number\">24</span>&#125;&gt;</span><br><span class=\"line\">          &lt;Col sm=&#123;<span class=\"number\">12</span>&#125;&gt;</span><br><span class=\"line\">            &lt;FormItem</span><br><span class=\"line\">              label=<span class=\"string\">\"人才姓名\"</span></span><br><span class=\"line\">              &#123;...formItemLayout&#125;</span><br><span class=\"line\">            &gt;</span><br><span class=\"line\">              &lt;Input size=<span class=\"string\">\"default\"</span> defaultValue=&#123;<span class=\"keyword\">this</span>.props.record.name&#125; /&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/FormItem&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>Col&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Row&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>Form&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">引用model的情况如下，亲测没有任何问题：</span><br><span class=\"line\">&lt;Modal title=<span class=\"string\">\"修改\"</span> visible=&#123;<span class=\"keyword\">this</span>.state.visible&#125;</span><br><span class=\"line\">       onOk=&#123;<span class=\"keyword\">this</span>.handleOk&#125; onCancel=&#123;<span class=\"keyword\">this</span>.handleCancel&#125;</span><br><span class=\"line\"> &gt;</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      self.state.visible ?  <span class=\"comment\">//判断visible为true还是false false的话设为null</span></span><br><span class=\"line\">      &lt;FromModel ref=<span class=\"string\">\"modelform\"</span> record=&#123;self.state.record&#125;/&gt;</span><br><span class=\"line\">       :<span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Modal&gt;</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"4、url地址栏中一直有-xxx的问题\"><a href=\"#4、url地址栏中一直有-xxx的问题\" class=\"headerlink\" title=\"4、url地址栏中一直有/#/xxx的问题\"></a>4、url地址栏中一直有/#/xxx的问题</h2><blockquote>\n<p>这是一个你会获取到的默认 history ，如果你不指定某个 history 。<br>它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。<br>browserHistory 是由 React Router 创建浏览器应用推荐的 history。<br>它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。<br>使用 <strong>browserHistory</strong> 代替 <strong>hashHistory</strong>就可以解决这个问题啦~</p>\n</blockquote>\n<h2 id=\"5、es5和es6写法对比\"><a href=\"#5、es5和es6写法对比\" class=\"headerlink\" title=\"5、es5和es6写法对比\"></a>5、es5和es6写法对比</h2><p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\" /></p>\n<h2 id=\"6、jsx语法中不允许判断的问题\"><a href=\"#6、jsx语法中不允许判断的问题\" class=\"headerlink\" title=\"6、jsx语法中不允许判断的问题\"></a>6、jsx语法中不允许判断的问题</h2><blockquote>\n<p>在jsx语法内部是不允许if判断的，即如下代码是会报错的：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\" /><br>对于判断条件简单的用三目运算符 如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">React.render(</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;div id=&#123;condition ? <span class=\"string\">'true的情况'</span> : <span class=\"string\">'false的情况'</span>&#125;&gt;</span><br><span class=\"line\">          Hello World!</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    )</span></span><br><span class=\"line\"><span class=\"regexp\">, mountNode);</span></span><br></pre></td></tr></table></figure><br>对于判断条件复杂的用变量 如：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\" /></p>\n</blockquote>\n<h2 id=\"7、父组件与子组件之间的传值问题\"><a href=\"#7、父组件与子组件之间的传值问题\" class=\"headerlink\" title=\"7、父组件与子组件之间的传值问题\"></a>7、父组件与子组件之间的传值问题</h2><blockquote>\n<p>对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考<a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\" target=\"_blank\" rel=\"noopener\">阮一峰—React 入门实例教程</a></p>\n</blockquote>\n<h2 id=\"8、关于在react中想要使用jquery操作dom的问题\"><a href=\"#8、关于在react中想要使用jquery操作dom的问题\" class=\"headerlink\" title=\"8、关于在react中想要使用jquery操作dom的问题\"></a>8、关于在react中想要使用jquery操作dom的问题</h2><blockquote>\n<p>虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~<br>直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=&gt;self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D</p>\n</blockquote>\n<h2 id=\"9、数组嵌套深层拷贝问题\"><a href=\"#9、数组嵌套深层拷贝问题\" class=\"headerlink\" title=\"9、数组嵌套深层拷贝问题\"></a>9、数组嵌套深层拷贝问题</h2><blockquote>\n<p>近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，<br>第二次才显示完整，用到了concat()拷贝深度数组并不起效果，<br>最后。。。终于给我找出来了 记录一下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clone</span>(<span class=\"params\">source</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result;</span><br><span class=\"line\">  (source <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>) ? (result = []) : (result = &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">  result[key] = (<span class=\"keyword\">typeof</span> source[key]===<span class=\"string\">'object'</span>) ? clone(source[key]) : source[key];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"10、对于在react中字符拼接的问题\"><a href=\"#10、对于在react中字符拼接的问题\" class=\"headerlink\" title=\"10、对于在react中字符拼接的问题\"></a>10、对于在react中字符拼接的问题</h2><blockquote>\n<p>不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&gt;我要传参数跳转的啦~&lt;<span class=\"regexp\">/a&gt;</span></span><br></pre></td></tr></table></figure><br>我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出<br>改为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&#123;<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&#125;&gt;我要传参数跳转的啦~&lt;<span class=\"regexp\">/a&gt;</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"11、ant-design中的图片轮播报错问题\"><a href=\"#11、ant-design中的图片轮播报错问题\" class=\"headerlink\" title=\"11、ant design中的图片轮播报错问题\"></a>11、ant design中的图片轮播报错问题</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> imgTpl = <span class=\"function\">(<span class=\"params\">IMAGE_DATA || []</span>).<span class=\"params\">map</span>(<span class=\"params\">(item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> (</span><br><span class=\"line\">   &lt;div key=&#123;index&#125; &gt;</span><br><span class=\"line\">      &lt;a href=&#123;item.bannerUrl == <span class=\"string\">''</span> ? <span class=\"string\">\"javascript:;\"</span> : item.bannerUrl&#125;&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;item.url&#125;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&#123;item.bannerName&#125;/</span>&gt;</span></span>&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;/</span>div&gt;</span><br><span class=\"line\">   );</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!IMAGE_DATA.length) imgTpl = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"12、请耐心等待，麦麦会不定期更新哒\"><a href=\"#12、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"12、请耐心等待，麦麦会不定期更新哒~\"></a>12、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<p>初学react，在码代码过程中会遇到对大牛来说听起来愚蠢的问题。没错！这篇文章就是来整理这些愚蠢的问题的~ （嘿嘿嘿）下次可不要再丢人啦~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><h2 id=\"1、style问题在react中\"><a href=\"#1、style问题在react中\" class=\"headerlink\" title=\"1、style问题在react中\"></a>1、style问题在react中</h2><blockquote>\n<p>大兄弟~ 你是否想在react中使用行内样式<br>如： style=”height:30px”<br>然后你仰望星空 然后你开始怀疑自己，难道是我写错了？哈哈 其实是在react中的写法不太一样而已~~~<br>看！写成这样就没错列~<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/style.png?raw=true\" /></p>\n</blockquote>\n<h2 id=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"><a href=\"#2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\" class=\"headerlink\" title=\"2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别\"></a>2、从后台拿到数组遍历成字符串类型的标签，如何被浏览器识别</h2><blockquote>\n<p>在用antd表格的时候，我曾遇到过这个问题。后台传过来的是数组，遍历成n个带url的a标签 显示在表格的操作栏<br>一开始我先将数组遍历加入字符串a标签放入一个新数组 最后将此数组转成字符串 return出去变成了字符串 没有被浏览器识别 看下图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/return.png?raw=true\" /><br>后来找到了解决方法 如下 (ps:千万不要忘了给数组加上key，否则控制台会提示哦)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> files.map(<span class=\"function\">(<span class=\"params\">file,index</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;index&#125;</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Icon</span> <span class=\"attr\">type</span>=<span class=\"string\">\"paper-clip\"</span> /&gt;</span> &#123;file&#125; <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>","more":"<h2 id=\"3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\"><a href=\"#3、value-和-defaultValue-表格中回显问题—组件使用的是ant-design\" class=\"headerlink\" title=\"3、value 和 defaultValue 表格中回显问题—组件使用的是ant design\"></a>3、value 和 defaultValue 表格中回显问题—组件使用的是<a href=\"https://ant.design/\" target=\"_blank\" rel=\"noopener\">ant design</a></h2><blockquote>\n<p>对于表格回显问题 拿到数据以后（暂且用暂存state的方法）显示到表单中，如果用defaultValue的话，只在第一次有效，点击其他详情出现的永远是第一个详情。<br>如果用value的话，回显正常，但当要修改的时候是不能修改的。因为value是受限的。<br>目前的解决方法，每次关闭model以后都销毁里面的form，再次打开的时候新引一遍model。传值的话用props传，再用defaultValue就没有问题了。做法如下：<br>新建一个form的组件，如<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> FromModel =React.createClass(&#123;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> formItemLayout = &#123;</span><br><span class=\"line\">      labelCol: &#123; <span class=\"attr\">span</span>: <span class=\"number\">6</span> &#125;,</span><br><span class=\"line\">      wrapperCol: &#123; <span class=\"attr\">span</span>: <span class=\"number\">14</span> &#125;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;Form horizontal&gt;</span><br><span class=\"line\">        &lt;Row gutter=&#123;<span class=\"number\">24</span>&#125;&gt;</span><br><span class=\"line\">          &lt;Col sm=&#123;<span class=\"number\">12</span>&#125;&gt;</span><br><span class=\"line\">            &lt;FormItem</span><br><span class=\"line\">              label=<span class=\"string\">\"人才姓名\"</span></span><br><span class=\"line\">              &#123;...formItemLayout&#125;</span><br><span class=\"line\">            &gt;</span><br><span class=\"line\">              &lt;Input size=<span class=\"string\">\"default\"</span> defaultValue=&#123;<span class=\"keyword\">this</span>.props.record.name&#125; /&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/FormItem&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>Col&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Row&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>Form&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">引用model的情况如下，亲测没有任何问题：</span><br><span class=\"line\">&lt;Modal title=<span class=\"string\">\"修改\"</span> visible=&#123;<span class=\"keyword\">this</span>.state.visible&#125;</span><br><span class=\"line\">       onOk=&#123;<span class=\"keyword\">this</span>.handleOk&#125; onCancel=&#123;<span class=\"keyword\">this</span>.handleCancel&#125;</span><br><span class=\"line\"> &gt;</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      self.state.visible ?  <span class=\"comment\">//判断visible为true还是false false的话设为null</span></span><br><span class=\"line\">      &lt;FromModel ref=<span class=\"string\">\"modelform\"</span> record=&#123;self.state.record&#125;/&gt;</span><br><span class=\"line\">       :<span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Modal&gt;</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"4、url地址栏中一直有-xxx的问题\"><a href=\"#4、url地址栏中一直有-xxx的问题\" class=\"headerlink\" title=\"4、url地址栏中一直有/#/xxx的问题\"></a>4、url地址栏中一直有/#/xxx的问题</h2><blockquote>\n<p>这是一个你会获取到的默认 history ，如果你不指定某个 history 。<br>它用到的是 URL 中的 hash（#）部分去创建形如 example.com/#/some/path 的路由。这个 支持 ie8＋ 的浏览器，但是因为是 hash 值，所以不推荐使用。<br>browserHistory 是由 React Router 创建浏览器应用推荐的 history。<br>它使用 History API 在浏览器中被创建用于处理 URL，新建一个像这样真实的 URL example.com/some/path。<br>使用 <strong>browserHistory</strong> 代替 <strong>hashHistory</strong>就可以解决这个问题啦~</p>\n</blockquote>\n<h2 id=\"5、es5和es6写法对比\"><a href=\"#5、es5和es6写法对比\" class=\"headerlink\" title=\"5、es5和es6写法对比\"></a>5、es5和es6写法对比</h2><p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/es6.png?raw=true\" /></p>\n<h2 id=\"6、jsx语法中不允许判断的问题\"><a href=\"#6、jsx语法中不允许判断的问题\" class=\"headerlink\" title=\"6、jsx语法中不允许判断的问题\"></a>6、jsx语法中不允许判断的问题</h2><blockquote>\n<p>在jsx语法内部是不允许if判断的，即如下代码是会报错的：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx.png?raw=true\" /><br>对于判断条件简单的用三目运算符 如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">React.render(</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;div id=&#123;condition ? <span class=\"string\">'true的情况'</span> : <span class=\"string\">'false的情况'</span>&#125;&gt;</span><br><span class=\"line\">          Hello World!</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    )</span></span><br><span class=\"line\"><span class=\"regexp\">, mountNode);</span></span><br></pre></td></tr></table></figure><br>对于判断条件复杂的用变量 如：<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/jsx2.png?raw=true\" /></p>\n</blockquote>\n<h2 id=\"7、父组件与子组件之间的传值问题\"><a href=\"#7、父组件与子组件之间的传值问题\" class=\"headerlink\" title=\"7、父组件与子组件之间的传值问题\"></a>7、父组件与子组件之间的传值问题</h2><blockquote>\n<p>对于不会redux的童鞋，请乖乖的用props来传值吧~ 具体教程参考<a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\" target=\"_blank\" rel=\"noopener\">阮一峰—React 入门实例教程</a></p>\n</blockquote>\n<h2 id=\"8、关于在react中想要使用jquery操作dom的问题\"><a href=\"#8、关于在react中想要使用jquery操作dom的问题\" class=\"headerlink\" title=\"8、关于在react中想要使用jquery操作dom的问题\"></a>8、关于在react中想要使用jquery操作dom的问题</h2><blockquote>\n<p>虽然react很好用是吧，但在jquery中一行代码实现切换class的工作量在react中却要考虑很多，所以我就比较喜欢引入jquery解决这种问题啦~<br>直接用$(this)并不能获取到你想要的东西，你必须在onclick={(ev)=&gt;self.doSomething(ev)}中将事件传递过去，然后在方法中你就可以使用$(ev.target)获取到啦 :-D</p>\n</blockquote>\n<h2 id=\"9、数组嵌套深层拷贝问题\"><a href=\"#9、数组嵌套深层拷贝问题\" class=\"headerlink\" title=\"9、数组嵌套深层拷贝问题\"></a>9、数组嵌套深层拷贝问题</h2><blockquote>\n<p>近期遇到的一个头疼的问题，后台返回数据（数组嵌套对象再嵌套数组）一次性给我，我得去处理第一次显示一部分，<br>第二次才显示完整，用到了concat()拷贝深度数组并不起效果，<br>最后。。。终于给我找出来了 记录一下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clone</span>(<span class=\"params\">source</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result;</span><br><span class=\"line\">  (source <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>) ? (result = []) : (result = &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">  result[key] = (<span class=\"keyword\">typeof</span> source[key]===<span class=\"string\">'object'</span>) ? clone(source[key]) : source[key];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"10、对于在react中字符拼接的问题\"><a href=\"#10、对于在react中字符拼接的问题\" class=\"headerlink\" title=\"10、对于在react中字符拼接的问题\"></a>10、对于在react中字符拼接的问题</h2><blockquote>\n<p>不知道大家发现没有，在react中在遍历中想要字符拼接变量用以下的方法是行不通的<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&gt;我要传参数跳转的啦~&lt;<span class=\"regexp\">/a&gt;</span></span><br></pre></td></tr></table></figure><br>我之前一直深受其扰，只能先定义一个变量，将跳转链接放入变量再拼接方可成功，后来查阅得出<br>改为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&#123;<span class=\"string\">\"xxxxx.html?code=\"</span>+usercode&#125;&gt;我要传参数跳转的啦~&lt;<span class=\"regexp\">/a&gt;</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"11、ant-design中的图片轮播报错问题\"><a href=\"#11、ant-design中的图片轮播报错问题\" class=\"headerlink\" title=\"11、ant design中的图片轮播报错问题\"></a>11、ant design中的图片轮播报错问题</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> imgTpl = <span class=\"function\">(<span class=\"params\">IMAGE_DATA || []</span>).<span class=\"params\">map</span>(<span class=\"params\">(item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> (</span><br><span class=\"line\">   &lt;div key=&#123;index&#125; &gt;</span><br><span class=\"line\">      &lt;a href=&#123;item.bannerUrl == <span class=\"string\">''</span> ? <span class=\"string\">\"javascript:;\"</span> : item.bannerUrl&#125;&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;item.url&#125;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&#123;item.bannerName&#125;/</span>&gt;</span></span>&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;/</span>div&gt;</span><br><span class=\"line\">   );</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!IMAGE_DATA.length) imgTpl = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"12、请耐心等待，麦麦会不定期更新哒\"><a href=\"#12、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"12、请耐心等待，麦麦会不定期更新哒~\"></a>12、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>"},{"title":"react+ts初体验","date":"2020-03-17T16:00:00.000Z","_content":"哈哈哈 终于对react+ts下手了，其实本身也是挺反感那么严重的规范性的。但是想想这样子虽然时间花的久一点，但是好处多多啊。最后还是接受了ts！！！（小声BB：其实是因为公司要用没办法才接受的）\nanyway！！我们下来来学学看！\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n> 在react中创建组件的形式有三种\n\n> 纯函数式定义的无状态组件\n> React.createClass 定义的组件（不做解释）\n> Extends React.Component 定义的组件\n\n纯函数式定义的无状态组件及类组件的到底有什么不同呢？\n\n```javascript\n  // React.Component是以ES6的形式来创建react的组件的，是React目前极为推荐的创建有状态组件的方式，最终会取代React.createClass形式\n\n  export interface IProps { // 可以导出interface 以供其他地方也可以使用\n    onChange: Function;\n  }\n\n  interface IState {\n    visible: boolean;\n  }\n\n  export default class Example extends Component<IProps, IState> {\n    static defaultProps = {\n      onChange: () => {}\n    };\n\n    constructor(props: IProps) {\n      super(props);\n      this.state = {\n        visible: true,\n      };\n    }\n\n    handleChange () { // 推荐所有方法名都以handle或者on开头\n      const { visible } = this.state;\n      this.setState({\n        visible: !visible\n      });\n    }\n\n    render() {\n      const { visible } = this.state;\n      return (\n        <div className={styles.example}>\n          { visible ? '这里是React.Component创建组件的demo呀！' : '现在看不见了吧~' }\n          <button onClick={this.handleChange}>开关</button>\n        </div>\n      );\n    }\n  }\n```\n> 纯函数组件的特点:\n\n> 1、组件不会被实例化,整体渲染性能得到提升\n> 2、组件不能访问this对象\n> 3、组件无法访问生命周期的方法 （可以借助hooks拿到哦）\n> 4、无状态组件只能访问输入的props,无副作用\n\n```javascript\n// 简单的，一般在页面内部会定义一些\n  function DemoComponent(props) {\n    return <div>Hello {props.name}</div>\n  }\n// 稍复杂的\n  interface IProps {\n    name: string;\n  }\n\n  const Example: React.FC<IProps> = props => {\n    const [visible, setVisible] = useState(true);\n    const { name } = props;\n\n\n    useEffect (\n      () => {\n        setVisible(true)\n      },\n      [] // 空数组代表只渲染一次，同componentDidMount，有兴趣的朋友可以去看下react Hooks哦 我之前的文章里也有写\n    )\n\n    handleToggle () { // 尽量不要使用箭头函数，会导致某些参数获取不到\n      setVisible(!visible)\n    }\n\n    return (\n      <div className={styles.example}>\n        { name }\n        { visible ? '这里是React.Component创建组件的demo呀！' : '现在看不见了吧~' }\n        <button onClick={handleToggle}>开关</button>\n      </div>\n    )\n  };\n```\n\n> react中使用富文本\n我用的是[wangEditor](http://www.wangeditor.com/)\n\n```javascript\n  import Editor from 'wangeditor';\n\n  componentDidMount() { // 先注册一个编辑器\n    const { content } = this.state;\n    const elem = this.editorElem;\n    this.editor = new Editor(elem);\n    this.editor.customConfig.menus = [ // 设置编辑器上面的配置项\n      'head',\n      'bold',\n      'fontSize',\n      'foreColor',\n    ];\n    this.editor.customConfig.onchange = (html: any) => {\n      this.setState({\n        content: html\n      });\n    }\n    this.editor.create();\n  }\n\n  // 在需要填入数据的地方用一下方法就可以实现回填拉 亲测好用哦\n  this.editor.txt.html(content);\n\n  <div ref={ref => { this.editorElem = ref }}></div>\n```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/react-ts.md","raw":"---\ntitle: react+ts初体验\ndate: 2020-03-18\ntags: react\n---\n哈哈哈 终于对react+ts下手了，其实本身也是挺反感那么严重的规范性的。但是想想这样子虽然时间花的久一点，但是好处多多啊。最后还是接受了ts！！！（小声BB：其实是因为公司要用没办法才接受的）\nanyway！！我们下来来学学看！\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n> 在react中创建组件的形式有三种\n\n> 纯函数式定义的无状态组件\n> React.createClass 定义的组件（不做解释）\n> Extends React.Component 定义的组件\n\n纯函数式定义的无状态组件及类组件的到底有什么不同呢？\n\n```javascript\n  // React.Component是以ES6的形式来创建react的组件的，是React目前极为推荐的创建有状态组件的方式，最终会取代React.createClass形式\n\n  export interface IProps { // 可以导出interface 以供其他地方也可以使用\n    onChange: Function;\n  }\n\n  interface IState {\n    visible: boolean;\n  }\n\n  export default class Example extends Component<IProps, IState> {\n    static defaultProps = {\n      onChange: () => {}\n    };\n\n    constructor(props: IProps) {\n      super(props);\n      this.state = {\n        visible: true,\n      };\n    }\n\n    handleChange () { // 推荐所有方法名都以handle或者on开头\n      const { visible } = this.state;\n      this.setState({\n        visible: !visible\n      });\n    }\n\n    render() {\n      const { visible } = this.state;\n      return (\n        <div className={styles.example}>\n          { visible ? '这里是React.Component创建组件的demo呀！' : '现在看不见了吧~' }\n          <button onClick={this.handleChange}>开关</button>\n        </div>\n      );\n    }\n  }\n```\n> 纯函数组件的特点:\n\n> 1、组件不会被实例化,整体渲染性能得到提升\n> 2、组件不能访问this对象\n> 3、组件无法访问生命周期的方法 （可以借助hooks拿到哦）\n> 4、无状态组件只能访问输入的props,无副作用\n\n```javascript\n// 简单的，一般在页面内部会定义一些\n  function DemoComponent(props) {\n    return <div>Hello {props.name}</div>\n  }\n// 稍复杂的\n  interface IProps {\n    name: string;\n  }\n\n  const Example: React.FC<IProps> = props => {\n    const [visible, setVisible] = useState(true);\n    const { name } = props;\n\n\n    useEffect (\n      () => {\n        setVisible(true)\n      },\n      [] // 空数组代表只渲染一次，同componentDidMount，有兴趣的朋友可以去看下react Hooks哦 我之前的文章里也有写\n    )\n\n    handleToggle () { // 尽量不要使用箭头函数，会导致某些参数获取不到\n      setVisible(!visible)\n    }\n\n    return (\n      <div className={styles.example}>\n        { name }\n        { visible ? '这里是React.Component创建组件的demo呀！' : '现在看不见了吧~' }\n        <button onClick={handleToggle}>开关</button>\n      </div>\n    )\n  };\n```\n\n> react中使用富文本\n我用的是[wangEditor](http://www.wangeditor.com/)\n\n```javascript\n  import Editor from 'wangeditor';\n\n  componentDidMount() { // 先注册一个编辑器\n    const { content } = this.state;\n    const elem = this.editorElem;\n    this.editor = new Editor(elem);\n    this.editor.customConfig.menus = [ // 设置编辑器上面的配置项\n      'head',\n      'bold',\n      'fontSize',\n      'foreColor',\n    ];\n    this.editor.customConfig.onchange = (html: any) => {\n      this.setState({\n        content: html\n      });\n    }\n    this.editor.create();\n  }\n\n  // 在需要填入数据的地方用一下方法就可以实现回填拉 亲测好用哦\n  this.editor.txt.html(content);\n\n  <div ref={ref => { this.editorElem = ref }}></div>\n```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"react-ts","published":1,"updated":"2020-03-18T07:48:59.038Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0za0011000m3p6g1lz3","content":"<p>哈哈哈 终于对react+ts下手了，其实本身也是挺反感那么严重的规范性的。但是想想这样子虽然时间花的久一点，但是好处多多啊。最后还是接受了ts！！！（小声BB：其实是因为公司要用没办法才接受的）<br>anyway！！我们下来来学学看！</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p>在react中创建组件的形式有三种</p>\n</blockquote>\n<blockquote>\n<p>纯函数式定义的无状态组件<br>React.createClass 定义的组件（不做解释）<br>Extends React.Component 定义的组件</p>\n</blockquote>\n<p>纯函数式定义的无状态组件及类组件的到底有什么不同呢？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// React.Component是以ES6的形式来创建react的组件的，是React目前极为推荐的创建有状态组件的方式，最终会取代React.createClass形式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> interface IProps &#123; <span class=\"comment\">// 可以导出interface 以供其他地方也可以使用</span></span><br><span class=\"line\">  onChange: <span class=\"built_in\">Function</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">interface IState &#123;</span><br><span class=\"line\">  visible: boolean;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span>&lt;<span class=\"title\">IProps</span>, <span class=\"title\">IState</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> defaultProps = &#123;</span><br><span class=\"line\">    onChange: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props: IProps) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      visible: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleChange () &#123; <span class=\"comment\">// 推荐所有方法名都以handle或者on开头</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; visible &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      visible: !visible</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; visible &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=&#123;styles.example&#125;&gt;</span><br><span class=\"line\">        &#123; visible ? <span class=\"string\">'这里是React.Component创建组件的demo呀！'</span> : <span class=\"string\">'现在看不见了吧~'</span> &#125;</span><br><span class=\"line\">        &lt;button onClick=&#123;<span class=\"keyword\">this</span>.handleChange&#125;&gt;开关&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>纯函数组件的特点:</p>\n</blockquote>\n<blockquote>\n<p>1、组件不会被实例化,整体渲染性能得到提升<br>2、组件不能访问this对象<br>3、组件无法访问生命周期的方法 （可以借助hooks拿到哦）<br>4、无状态组件只能访问输入的props,无副作用</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简单的，一般在页面内部会定义一些</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">DemoComponent</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Hello &#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// 稍复杂的</span></span><br><span class=\"line\">  interface IProps &#123;</span><br><span class=\"line\">    name: string;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> Example: React.FC&lt;IProps&gt; = <span class=\"function\"><span class=\"params\">props</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [visible, setVisible] = useState(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; name &#125; = props;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    useEffect (</span><br><span class=\"line\">      () =&gt; &#123;</span><br><span class=\"line\">        setVisible(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      [] <span class=\"comment\">// 空数组代表只渲染一次，同componentDidMount，有兴趣的朋友可以去看下react Hooks哦 我之前的文章里也有写</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    handleToggle () &#123; <span class=\"comment\">// 尽量不要使用箭头函数，会导致某些参数获取不到</span></span><br><span class=\"line\">      setVisible(!visible)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=&#123;styles.example&#125;&gt;</span><br><span class=\"line\">        &#123; name &#125;</span><br><span class=\"line\">        &#123; visible ? <span class=\"string\">'这里是React.Component创建组件的demo呀！'</span> : <span class=\"string\">'现在看不见了吧~'</span> &#125;</span><br><span class=\"line\">        &lt;button onClick=&#123;handleToggle&#125;&gt;开关&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>react中使用富文本<br>我用的是<a href=\"http://www.wangeditor.com/\" target=\"_blank\" rel=\"noopener\">wangEditor</a></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Editor <span class=\"keyword\">from</span> <span class=\"string\">'wangeditor'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">componentDidMount() &#123; <span class=\"comment\">// 先注册一个编辑器</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; content &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> elem = <span class=\"keyword\">this</span>.editorElem;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor = <span class=\"keyword\">new</span> Editor(elem);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.menus = [ <span class=\"comment\">// 设置编辑器上面的配置项</span></span><br><span class=\"line\">    <span class=\"string\">'head'</span>,</span><br><span class=\"line\">    <span class=\"string\">'bold'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fontSize'</span>,</span><br><span class=\"line\">    <span class=\"string\">'foreColor'</span>,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.onchange = <span class=\"function\">(<span class=\"params\">html: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      content: html</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.create();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在需要填入数据的地方用一下方法就可以实现回填拉 亲测好用哦</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.editor.txt.html(content);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div ref=&#123;ref =&gt; &#123; <span class=\"keyword\">this</span>.editorElem = ref &#125;&#125;&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>哈哈哈 终于对react+ts下手了，其实本身也是挺反感那么严重的规范性的。但是想想这样子虽然时间花的久一点，但是好处多多啊。最后还是接受了ts！！！（小声BB：其实是因为公司要用没办法才接受的）<br>anyway！！我们下来来学学看！</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p>在react中创建组件的形式有三种</p>\n</blockquote>\n<blockquote>\n<p>纯函数式定义的无状态组件<br>React.createClass 定义的组件（不做解释）<br>Extends React.Component 定义的组件</p>\n</blockquote>\n<p>纯函数式定义的无状态组件及类组件的到底有什么不同呢？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// React.Component是以ES6的形式来创建react的组件的，是React目前极为推荐的创建有状态组件的方式，最终会取代React.createClass形式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> interface IProps &#123; <span class=\"comment\">// 可以导出interface 以供其他地方也可以使用</span></span><br><span class=\"line\">  onChange: <span class=\"built_in\">Function</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">interface IState &#123;</span><br><span class=\"line\">  visible: boolean;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span>&lt;<span class=\"title\">IProps</span>, <span class=\"title\">IState</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> defaultProps = &#123;</span><br><span class=\"line\">    onChange: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props: IProps) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      visible: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleChange () &#123; <span class=\"comment\">// 推荐所有方法名都以handle或者on开头</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; visible &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      visible: !visible</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; visible &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=&#123;styles.example&#125;&gt;</span><br><span class=\"line\">        &#123; visible ? <span class=\"string\">'这里是React.Component创建组件的demo呀！'</span> : <span class=\"string\">'现在看不见了吧~'</span> &#125;</span><br><span class=\"line\">        &lt;button onClick=&#123;<span class=\"keyword\">this</span>.handleChange&#125;&gt;开关&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>纯函数组件的特点:</p>\n</blockquote>\n<blockquote>\n<p>1、组件不会被实例化,整体渲染性能得到提升<br>2、组件不能访问this对象<br>3、组件无法访问生命周期的方法 （可以借助hooks拿到哦）<br>4、无状态组件只能访问输入的props,无副作用</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简单的，一般在页面内部会定义一些</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">DemoComponent</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Hello &#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// 稍复杂的</span></span><br><span class=\"line\">  interface IProps &#123;</span><br><span class=\"line\">    name: string;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> Example: React.FC&lt;IProps&gt; = <span class=\"function\"><span class=\"params\">props</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [visible, setVisible] = useState(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; name &#125; = props;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    useEffect (</span><br><span class=\"line\">      () =&gt; &#123;</span><br><span class=\"line\">        setVisible(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      [] <span class=\"comment\">// 空数组代表只渲染一次，同componentDidMount，有兴趣的朋友可以去看下react Hooks哦 我之前的文章里也有写</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    handleToggle () &#123; <span class=\"comment\">// 尽量不要使用箭头函数，会导致某些参数获取不到</span></span><br><span class=\"line\">      setVisible(!visible)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=&#123;styles.example&#125;&gt;</span><br><span class=\"line\">        &#123; name &#125;</span><br><span class=\"line\">        &#123; visible ? <span class=\"string\">'这里是React.Component创建组件的demo呀！'</span> : <span class=\"string\">'现在看不见了吧~'</span> &#125;</span><br><span class=\"line\">        &lt;button onClick=&#123;handleToggle&#125;&gt;开关&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>react中使用富文本<br>我用的是<a href=\"http://www.wangeditor.com/\" target=\"_blank\" rel=\"noopener\">wangEditor</a></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Editor <span class=\"keyword\">from</span> <span class=\"string\">'wangeditor'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">componentDidMount() &#123; <span class=\"comment\">// 先注册一个编辑器</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; content &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> elem = <span class=\"keyword\">this</span>.editorElem;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor = <span class=\"keyword\">new</span> Editor(elem);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.menus = [ <span class=\"comment\">// 设置编辑器上面的配置项</span></span><br><span class=\"line\">    <span class=\"string\">'head'</span>,</span><br><span class=\"line\">    <span class=\"string\">'bold'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fontSize'</span>,</span><br><span class=\"line\">    <span class=\"string\">'foreColor'</span>,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.onchange = <span class=\"function\">(<span class=\"params\">html: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      content: html</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.create();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在需要填入数据的地方用一下方法就可以实现回填拉 亲测好用哦</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.editor.txt.html(content);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div ref=&#123;ref =&gt; &#123; <span class=\"keyword\">this</span>.editorElem = ref &#125;&#125;&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"jquery 简单插件教程","date":"2017-06-23T16:00:00.000Z","_content":"插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的alert\n ```python\n//弹出alert弹框\n$.fn.alert = function(options){\n  var dets = {\n    Event : \"click\",  //默认使用click事件\n    msg : \"hello world!\" //默认弹出内容为hello，world\n  }\n  var opts = $.extend(dets,options);\n  var $this = $(this);\n  $this.on( opts.Event ,function(e){\n    alert(opts.msg);\n  });\n}\n\n//调用alert插件\n$(\"div\").alert({\n  Event :　\"mouseover\",\n  msg : \"我改变了默认弹出内容\"\n});\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>输入自动完成插件\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.autocomplete = function(options){\n     var defaults ={\n       borderColor : \"#C7F4EE\"\n     };\n     var opts = $.extend(defaults,options);\n     var self = $(this);\n     flag = '0'; //没有下拉框\n     record =\"\";\n     // 发起ajax请求拿数据\n     $.ajax({\n       url : '/autocomplete/json.htm',\n       type : 'GET',\n       dataType : 'json',\n       success : function(data){\n         record = data; //取到json数据\n       }\n     });\n     function getFocus(){\n       var len = self.val().length;\n       var str = self.val().toLowerCase();\n       if(len > 0){ //输入框中有数据\n           if(flag == '0'){\n             $(\"<div class='down'></div>\").css({\n                 'width':self.outerWidth()-2,\n                 'border': '1px solid',\n                 'border-color':opts.borderColor,\n                 'border-top':'none',\n                 'overflow' : 'hidden'\n               }).insertAfter(self);\n               flag = '1'; //容器已显示\n               // 遍历 data 取数据放入容器\n               $.each( record ,function(i,v){\n                 $.each(v,function(j,k){\n                 var jsonText = k.text;\n                 var jsonConvert = k.convert;\n                 if( jsonText.indexOf(str) > '-1'){\n                   if(jsonConvert){\n                     $(\"<div class='single'>\"+jsonConvert+\"</div>\").appendTo($(\".down\"));\n                   }else{\n                     $(\"<div class='single'>\"+jsonText+\"</div>\").appendTo($(\".down\"));\n                   }\n                 }\n                 });\n               });\n\n           }\n       }else{ //输入框中无数据\n         $(\".down\").remove();\n         flag = '0';\n       }\n     }\n     self.on({\n       keyup :function(e){\n         $(\".down\").remove();\n         flag = '0';\n         getFocus();\n         function translate(){\n           var string =self.val().toLowerCase();\n           $.each( record ,function(i,v){\n             $.each(v,function(j,k){\n             var jsonText = k.text;\n             var jsonMean = k.mean;\n             if( jsonText.indexOf(string) > '-1'){\n               $(\"#show\").text(string+\" ------ \" + jsonMean);\n             }\n             });\n           });\n         }\n         $(\".down\").on('click',\".single\",function(){\n           self.val($(this).text());\n           translate();\n           $(\".down\").remove();\n           flag = '0';\n         });\n         self.siblings('button').on('click',function(){\n           translate();\n         });\n       },\n       blur : function(e){\n         setTimeout(function(){\n           $(\".down\").remove();\n           flag = '0';\n         },200);\n       }\n     });\n\n   };\n })(jQuery);\n//调用\n$(\"#myInput\").autocomplete();\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/plugin.md","raw":"---\ntitle: jquery 简单插件教程\ndate: 2017-06-24\ntags: jq\n---\n插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。\n<font size=1>**如有转载，请注明出处。**</font>\n><i class=\"icon-cloud\"></i>简单的alert\n ```python\n//弹出alert弹框\n$.fn.alert = function(options){\n  var dets = {\n    Event : \"click\",  //默认使用click事件\n    msg : \"hello world!\" //默认弹出内容为hello，world\n  }\n  var opts = $.extend(dets,options);\n  var $this = $(this);\n  $this.on( opts.Event ,function(e){\n    alert(opts.msg);\n  });\n}\n\n//调用alert插件\n$(\"div\").alert({\n  Event :　\"mouseover\",\n  msg : \"我改变了默认弹出内容\"\n});\n```\n<!--more-->\n><i class=\"icon-cloud\"></i>输入自动完成插件\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\" />\n ```python\n ;(function($){\n   $.fn.autocomplete = function(options){\n     var defaults ={\n       borderColor : \"#C7F4EE\"\n     };\n     var opts = $.extend(defaults,options);\n     var self = $(this);\n     flag = '0'; //没有下拉框\n     record =\"\";\n     // 发起ajax请求拿数据\n     $.ajax({\n       url : '/autocomplete/json.htm',\n       type : 'GET',\n       dataType : 'json',\n       success : function(data){\n         record = data; //取到json数据\n       }\n     });\n     function getFocus(){\n       var len = self.val().length;\n       var str = self.val().toLowerCase();\n       if(len > 0){ //输入框中有数据\n           if(flag == '0'){\n             $(\"<div class='down'></div>\").css({\n                 'width':self.outerWidth()-2,\n                 'border': '1px solid',\n                 'border-color':opts.borderColor,\n                 'border-top':'none',\n                 'overflow' : 'hidden'\n               }).insertAfter(self);\n               flag = '1'; //容器已显示\n               // 遍历 data 取数据放入容器\n               $.each( record ,function(i,v){\n                 $.each(v,function(j,k){\n                 var jsonText = k.text;\n                 var jsonConvert = k.convert;\n                 if( jsonText.indexOf(str) > '-1'){\n                   if(jsonConvert){\n                     $(\"<div class='single'>\"+jsonConvert+\"</div>\").appendTo($(\".down\"));\n                   }else{\n                     $(\"<div class='single'>\"+jsonText+\"</div>\").appendTo($(\".down\"));\n                   }\n                 }\n                 });\n               });\n\n           }\n       }else{ //输入框中无数据\n         $(\".down\").remove();\n         flag = '0';\n       }\n     }\n     self.on({\n       keyup :function(e){\n         $(\".down\").remove();\n         flag = '0';\n         getFocus();\n         function translate(){\n           var string =self.val().toLowerCase();\n           $.each( record ,function(i,v){\n             $.each(v,function(j,k){\n             var jsonText = k.text;\n             var jsonMean = k.mean;\n             if( jsonText.indexOf(string) > '-1'){\n               $(\"#show\").text(string+\" ------ \" + jsonMean);\n             }\n             });\n           });\n         }\n         $(\".down\").on('click',\".single\",function(){\n           self.val($(this).text());\n           translate();\n           $(\".down\").remove();\n           flag = '0';\n         });\n         self.siblings('button').on('click',function(){\n           translate();\n         });\n       },\n       blur : function(e){\n         setTimeout(function(){\n           $(\".down\").remove();\n           flag = '0';\n         },200);\n       }\n     });\n\n   };\n })(jQuery);\n//调用\n$(\"#myInput\").autocomplete();\n  ```\n\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"plugin","published":1,"updated":"2020-02-26T10:26:36.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0zb0013000m1o8s25bx","content":"<p>插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的alert<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//弹出alert弹框</span><br><span class=\"line\">$.fn.alert = function(options)&#123;</span><br><span class=\"line\">  var dets = &#123;</span><br><span class=\"line\">    Event : <span class=\"string\">\"click\"</span>,  //默认使用click事件</span><br><span class=\"line\">    msg : <span class=\"string\">\"hello world!\"</span> //默认弹出内容为hello，world</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  var opts = $.extend(dets,options);</span><br><span class=\"line\">  var $this = $(this);</span><br><span class=\"line\">  $this.on( opts.Event ,function(e)&#123;</span><br><span class=\"line\">    alert(opts.msg);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//调用alert插件</span><br><span class=\"line\">$(<span class=\"string\">\"div\"</span>).alert(&#123;</span><br><span class=\"line\">  Event :　<span class=\"string\">\"mouseover\"</span>,</span><br><span class=\"line\">  msg : <span class=\"string\">\"我改变了默认弹出内容\"</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br><i class=\"icon-cloud\"></i>输入自动完成插件<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\" /><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ;(function($)&#123;</span><br><span class=\"line\">   $.fn.autocomplete = function(options)&#123;</span><br><span class=\"line\">     var defaults =&#123;</span><br><span class=\"line\">       borderColor : <span class=\"string\">\"#C7F4EE\"</span></span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\">     var opts = $.extend(defaults,options);</span><br><span class=\"line\">     var self = $(this);</span><br><span class=\"line\">     flag = <span class=\"string\">'0'</span>; //没有下拉框</span><br><span class=\"line\">     record =<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     // 发起ajax请求拿数据</span><br><span class=\"line\">     $.ajax(&#123;</span><br><span class=\"line\">       url : <span class=\"string\">'/autocomplete/json.htm'</span>,</span><br><span class=\"line\">       type : <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">       dataType : <span class=\"string\">'json'</span>,</span><br><span class=\"line\">       success : function(data)&#123;</span><br><span class=\"line\">         record = data; //取到json数据</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     function getFocus()&#123;</span><br><span class=\"line\">       var len = self.val().length;</span><br><span class=\"line\">       var str = self.val().toLowerCase();</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(len &gt; <span class=\"number\">0</span>)&#123; //输入框中有数据</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(flag == <span class=\"string\">'0'</span>)&#123;</span><br><span class=\"line\">             $(<span class=\"string\">\"&lt;div class='down'&gt;&lt;/div&gt;\"</span>).css(&#123;</span><br><span class=\"line\">                 <span class=\"string\">'width'</span>:self.outerWidth()<span class=\"number\">-2</span>,</span><br><span class=\"line\">                 <span class=\"string\">'border'</span>: <span class=\"string\">'1px solid'</span>,</span><br><span class=\"line\">                 <span class=\"string\">'border-color'</span>:opts.borderColor,</span><br><span class=\"line\">                 <span class=\"string\">'border-top'</span>:<span class=\"string\">'none'</span>,</span><br><span class=\"line\">                 <span class=\"string\">'overflow'</span> : <span class=\"string\">'hidden'</span></span><br><span class=\"line\">               &#125;).insertAfter(self);</span><br><span class=\"line\">               flag = <span class=\"string\">'1'</span>; //容器已显示</span><br><span class=\"line\">               // 遍历 data 取数据放入容器</span><br><span class=\"line\">               $.each( record ,function(i,v)&#123;</span><br><span class=\"line\">                 $.each(v,function(j,k)&#123;</span><br><span class=\"line\">                 var jsonText = k.text;</span><br><span class=\"line\">                 var jsonConvert = k.convert;</span><br><span class=\"line\">                 <span class=\"keyword\">if</span>( jsonText.indexOf(str) &gt; <span class=\"string\">'-1'</span>)&#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span>(jsonConvert)&#123;</span><br><span class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonConvert+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</span><br><span class=\"line\">                   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonText+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">                 &#125;</span><br><span class=\"line\">                 &#125;);</span><br><span class=\"line\">               &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;<span class=\"keyword\">else</span>&#123; //输入框中无数据</span><br><span class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">         flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     self.on(&#123;</span><br><span class=\"line\">       keyup :function(e)&#123;</span><br><span class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">         flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">         getFocus();</span><br><span class=\"line\">         function translate()&#123;</span><br><span class=\"line\">           var string =self.val().toLowerCase();</span><br><span class=\"line\">           $.each( record ,function(i,v)&#123;</span><br><span class=\"line\">             $.each(v,function(j,k)&#123;</span><br><span class=\"line\">             var jsonText = k.text;</span><br><span class=\"line\">             var jsonMean = k.mean;</span><br><span class=\"line\">             <span class=\"keyword\">if</span>( jsonText.indexOf(string) &gt; <span class=\"string\">'-1'</span>)&#123;</span><br><span class=\"line\">               $(<span class=\"string\">\"#show\"</span>).text(string+<span class=\"string\">\" ------ \"</span> + jsonMean);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             &#125;);</span><br><span class=\"line\">           &#125;);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         $(<span class=\"string\">\".down\"</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">\".single\"</span>,function()&#123;</span><br><span class=\"line\">           self.val($(this).text());</span><br><span class=\"line\">           translate();</span><br><span class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">           flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">         self.siblings(<span class=\"string\">'button'</span>).on(<span class=\"string\">'click'</span>,function()&#123;</span><br><span class=\"line\">           translate();</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       blur : function(e)&#123;</span><br><span class=\"line\">         setTimeout(function()&#123;</span><br><span class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">           flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">         &#125;,<span class=\"number\">200</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"> &#125;)(jQuery);</span><br><span class=\"line\">//调用</span><br><span class=\"line\">$(<span class=\"string\">\"#myInput\"</span>).autocomplete();</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<p>插件的引入使我们的代码变得越来越简单，我们只用过插件却很少有人动手写过插件。本文就以实例形式简单叙述了jQuery插件的实现方法。分享给大家供大家参考之用。</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p><i class=\"icon-cloud\"></i>简单的alert<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//弹出alert弹框</span><br><span class=\"line\">$.fn.alert = function(options)&#123;</span><br><span class=\"line\">  var dets = &#123;</span><br><span class=\"line\">    Event : <span class=\"string\">\"click\"</span>,  //默认使用click事件</span><br><span class=\"line\">    msg : <span class=\"string\">\"hello world!\"</span> //默认弹出内容为hello，world</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  var opts = $.extend(dets,options);</span><br><span class=\"line\">  var $this = $(this);</span><br><span class=\"line\">  $this.on( opts.Event ,function(e)&#123;</span><br><span class=\"line\">    alert(opts.msg);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//调用alert插件</span><br><span class=\"line\">$(<span class=\"string\">\"div\"</span>).alert(&#123;</span><br><span class=\"line\">  Event :　<span class=\"string\">\"mouseover\"</span>,</span><br><span class=\"line\">  msg : <span class=\"string\">\"我改变了默认弹出内容\"</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><br>","more":"<br><i class=\"icon-cloud\"></i>输入自动完成插件<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/image.png?raw=true\" /><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ;(function($)&#123;</span><br><span class=\"line\">   $.fn.autocomplete = function(options)&#123;</span><br><span class=\"line\">     var defaults =&#123;</span><br><span class=\"line\">       borderColor : <span class=\"string\">\"#C7F4EE\"</span></span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\">     var opts = $.extend(defaults,options);</span><br><span class=\"line\">     var self = $(this);</span><br><span class=\"line\">     flag = <span class=\"string\">'0'</span>; //没有下拉框</span><br><span class=\"line\">     record =<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     // 发起ajax请求拿数据</span><br><span class=\"line\">     $.ajax(&#123;</span><br><span class=\"line\">       url : <span class=\"string\">'/autocomplete/json.htm'</span>,</span><br><span class=\"line\">       type : <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">       dataType : <span class=\"string\">'json'</span>,</span><br><span class=\"line\">       success : function(data)&#123;</span><br><span class=\"line\">         record = data; //取到json数据</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     function getFocus()&#123;</span><br><span class=\"line\">       var len = self.val().length;</span><br><span class=\"line\">       var str = self.val().toLowerCase();</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(len &gt; <span class=\"number\">0</span>)&#123; //输入框中有数据</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(flag == <span class=\"string\">'0'</span>)&#123;</span><br><span class=\"line\">             $(<span class=\"string\">\"&lt;div class='down'&gt;&lt;/div&gt;\"</span>).css(&#123;</span><br><span class=\"line\">                 <span class=\"string\">'width'</span>:self.outerWidth()<span class=\"number\">-2</span>,</span><br><span class=\"line\">                 <span class=\"string\">'border'</span>: <span class=\"string\">'1px solid'</span>,</span><br><span class=\"line\">                 <span class=\"string\">'border-color'</span>:opts.borderColor,</span><br><span class=\"line\">                 <span class=\"string\">'border-top'</span>:<span class=\"string\">'none'</span>,</span><br><span class=\"line\">                 <span class=\"string\">'overflow'</span> : <span class=\"string\">'hidden'</span></span><br><span class=\"line\">               &#125;).insertAfter(self);</span><br><span class=\"line\">               flag = <span class=\"string\">'1'</span>; //容器已显示</span><br><span class=\"line\">               // 遍历 data 取数据放入容器</span><br><span class=\"line\">               $.each( record ,function(i,v)&#123;</span><br><span class=\"line\">                 $.each(v,function(j,k)&#123;</span><br><span class=\"line\">                 var jsonText = k.text;</span><br><span class=\"line\">                 var jsonConvert = k.convert;</span><br><span class=\"line\">                 <span class=\"keyword\">if</span>( jsonText.indexOf(str) &gt; <span class=\"string\">'-1'</span>)&#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span>(jsonConvert)&#123;</span><br><span class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonConvert+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</span><br><span class=\"line\">                   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                     $(<span class=\"string\">\"&lt;div class='single'&gt;\"</span>+jsonText+<span class=\"string\">\"&lt;/div&gt;\"</span>).appendTo($(<span class=\"string\">\".down\"</span>));</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">                 &#125;</span><br><span class=\"line\">                 &#125;);</span><br><span class=\"line\">               &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;<span class=\"keyword\">else</span>&#123; //输入框中无数据</span><br><span class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">         flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     self.on(&#123;</span><br><span class=\"line\">       keyup :function(e)&#123;</span><br><span class=\"line\">         $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">         flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">         getFocus();</span><br><span class=\"line\">         function translate()&#123;</span><br><span class=\"line\">           var string =self.val().toLowerCase();</span><br><span class=\"line\">           $.each( record ,function(i,v)&#123;</span><br><span class=\"line\">             $.each(v,function(j,k)&#123;</span><br><span class=\"line\">             var jsonText = k.text;</span><br><span class=\"line\">             var jsonMean = k.mean;</span><br><span class=\"line\">             <span class=\"keyword\">if</span>( jsonText.indexOf(string) &gt; <span class=\"string\">'-1'</span>)&#123;</span><br><span class=\"line\">               $(<span class=\"string\">\"#show\"</span>).text(string+<span class=\"string\">\" ------ \"</span> + jsonMean);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             &#125;);</span><br><span class=\"line\">           &#125;);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         $(<span class=\"string\">\".down\"</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">\".single\"</span>,function()&#123;</span><br><span class=\"line\">           self.val($(this).text());</span><br><span class=\"line\">           translate();</span><br><span class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">           flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">         self.siblings(<span class=\"string\">'button'</span>).on(<span class=\"string\">'click'</span>,function()&#123;</span><br><span class=\"line\">           translate();</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       blur : function(e)&#123;</span><br><span class=\"line\">         setTimeout(function()&#123;</span><br><span class=\"line\">           $(<span class=\"string\">\".down\"</span>).remove();</span><br><span class=\"line\">           flag = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">         &#125;,<span class=\"number\">200</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"> &#125;)(jQuery);</span><br><span class=\"line\">//调用</span><br><span class=\"line\">$(<span class=\"string\">\"#myInput\"</span>).autocomplete();</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"日常小计~","date":"2018-04-27T16:00:00.000Z","_content":"讲的都是些很基础的东西，觉得以后写代码能直接复制粘贴的哈哈哈~\n<font size=1>**如有转载，请注明出处。**</font>\n## Intersting\n## 1、移动端搜索框（键盘中是点击前往按钮）\n```javascript\n<form action=\"\" @keydown=\"handleKeydown\">\n  <input\n    ref=\"$input\"\n    type=\"text\"\n    v-model=\"val\"\n    @focus=\"isShow = true\"\n    class=\"search-input\"\n    placeholder=\"搜索\">\n    <span v-show=\"isShow\" @click=\"handleBlur\">取消</span>\n</form>\n```\n* 其实就是在input框外面加个form，哈哈哈~ 如果有其他更好的方法要跟我说哦~\n\n## 2、split按照不同分隔符进行分割\n```javascript\n'asdas,sdad，asdasd'.split(/[,，]/);\n```\n* 在前台展示是发现后台可能会传中英文的逗号过来，我就用正则进行分割啦哈哈\n\n<!--more-->\n## 3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用 reduce 来做到。\n```javascript\nconst cars = ['BMW','Benz', 'Benz', 'Tesla', 'BMW', 'Toyota'];\nconst carsObj = cars.reduce((obj, name) => {\n  obj[name] = obj[name] ? ++obj[name] : 1;\n    return obj;\n  }, {});\n  carsObj; // => { BMW: 2, Benz: 2, Tesla: 1, Toyota: 1 }\n}\n```\n\n## 4、 mapActions别名\n```javascript\n...mapActions('option/product', ['FETCH', 'CREATE', 'EDIT', 'DEL']),\n\n...mapActions({\n  foo: 'some/nested/module/foo',\n  bar: 'some/nested/module/bar'\n})\n```\n## 5、Cube-ui slide引用不到的问题\n* SlideItem在slide的Item中\n* cubeSlideItem: Slide.Item,\n\n## 6、element-ui中验证对象中的属性\n* prop这样写： prop=\"commercialInsurance.renewalDate\"\n\n```javascript\n// 验证规则这样写：\nrules: {\n  'commercialInsurance.renewalDate': [\n  { required: true, ...}\n  ],\n}\n```\n\n## 7、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/skill.md","raw":"---\ntitle: 日常小计~\ndate: 2018-04-28\ntags: 日常\n---\n讲的都是些很基础的东西，觉得以后写代码能直接复制粘贴的哈哈哈~\n<font size=1>**如有转载，请注明出处。**</font>\n## Intersting\n## 1、移动端搜索框（键盘中是点击前往按钮）\n```javascript\n<form action=\"\" @keydown=\"handleKeydown\">\n  <input\n    ref=\"$input\"\n    type=\"text\"\n    v-model=\"val\"\n    @focus=\"isShow = true\"\n    class=\"search-input\"\n    placeholder=\"搜索\">\n    <span v-show=\"isShow\" @click=\"handleBlur\">取消</span>\n</form>\n```\n* 其实就是在input框外面加个form，哈哈哈~ 如果有其他更好的方法要跟我说哦~\n\n## 2、split按照不同分隔符进行分割\n```javascript\n'asdas,sdad，asdasd'.split(/[,，]/);\n```\n* 在前台展示是发现后台可能会传中英文的逗号过来，我就用正则进行分割啦哈哈\n\n<!--more-->\n## 3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用 reduce 来做到。\n```javascript\nconst cars = ['BMW','Benz', 'Benz', 'Tesla', 'BMW', 'Toyota'];\nconst carsObj = cars.reduce((obj, name) => {\n  obj[name] = obj[name] ? ++obj[name] : 1;\n    return obj;\n  }, {});\n  carsObj; // => { BMW: 2, Benz: 2, Tesla: 1, Toyota: 1 }\n}\n```\n\n## 4、 mapActions别名\n```javascript\n...mapActions('option/product', ['FETCH', 'CREATE', 'EDIT', 'DEL']),\n\n...mapActions({\n  foo: 'some/nested/module/foo',\n  bar: 'some/nested/module/bar'\n})\n```\n## 5、Cube-ui slide引用不到的问题\n* SlideItem在slide的Item中\n* cubeSlideItem: Slide.Item,\n\n## 6、element-ui中验证对象中的属性\n* prop这样写： prop=\"commercialInsurance.renewalDate\"\n\n```javascript\n// 验证规则这样写：\nrules: {\n  'commercialInsurance.renewalDate': [\n  { required: true, ...}\n  ],\n}\n```\n\n## 7、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"skill","published":1,"updated":"2020-02-26T10:24:06.469Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0zc0016000m8z8q7po1","content":"<p>讲的都是些很基础的东西，觉得以后写代码能直接复制粘贴的哈哈哈~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Intersting\"><a href=\"#Intersting\" class=\"headerlink\" title=\"Intersting\"></a>Intersting</h2><h2 id=\"1、移动端搜索框（键盘中是点击前往按钮）\"><a href=\"#1、移动端搜索框（键盘中是点击前往按钮）\" class=\"headerlink\" title=\"1、移动端搜索框（键盘中是点击前往按钮）\"></a>1、移动端搜索框（键盘中是点击前往按钮）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form action=<span class=\"string\">\"\"</span> @keydown=<span class=\"string\">\"handleKeydown\"</span>&gt;</span><br><span class=\"line\">  &lt;input</span><br><span class=\"line\">    ref=<span class=\"string\">\"$input\"</span></span><br><span class=\"line\">    type=<span class=\"string\">\"text\"</span></span><br><span class=\"line\">    v-model=<span class=\"string\">\"val\"</span></span><br><span class=\"line\">    @focus=<span class=\"string\">\"isShow = true\"</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"search-input\"</span></span><br><span class=\"line\">    placeholder=<span class=\"string\">\"搜索\"</span>&gt;</span><br><span class=\"line\">    &lt;span v-show=<span class=\"string\">\"isShow\"</span> @click=<span class=\"string\">\"handleBlur\"</span>&gt;取消&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>form&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>其实就是在input框外面加个form，哈哈哈~ 如果有其他更好的方法要跟我说哦~</li>\n</ul>\n<h2 id=\"2、split按照不同分隔符进行分割\"><a href=\"#2、split按照不同分隔符进行分割\" class=\"headerlink\" title=\"2、split按照不同分隔符进行分割\"></a>2、split按照不同分隔符进行分割</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'asdas,sdad，asdasd'</span>.split(<span class=\"regexp\">/[,，]/</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在前台展示是发现后台可能会传中英文的逗号过来，我就用正则进行分割啦哈哈</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用-reduce-来做到。\"><a href=\"#3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用-reduce-来做到。\" class=\"headerlink\" title=\"3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用 reduce 来做到。\"></a>3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用 reduce 来做到。</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cars = [<span class=\"string\">'BMW'</span>,<span class=\"string\">'Benz'</span>, <span class=\"string\">'Benz'</span>, <span class=\"string\">'Tesla'</span>, <span class=\"string\">'BMW'</span>, <span class=\"string\">'Toyota'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> carsObj = cars.reduce(<span class=\"function\">(<span class=\"params\">obj, name</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  obj[name] = obj[name] ? ++obj[name] : <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">  &#125;, &#123;&#125;);</span><br><span class=\"line\">  carsObj; <span class=\"comment\">// =&gt; &#123; BMW: 2, Benz: 2, Tesla: 1, Toyota: 1 &#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4、-mapActions别名\"><a href=\"#4、-mapActions别名\" class=\"headerlink\" title=\"4、 mapActions别名\"></a>4、 mapActions别名</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...mapActions(<span class=\"string\">'option/product'</span>, [<span class=\"string\">'FETCH'</span>, <span class=\"string\">'CREATE'</span>, <span class=\"string\">'EDIT'</span>, <span class=\"string\">'DEL'</span>]),</span><br><span class=\"line\"></span><br><span class=\"line\">...mapActions(&#123;</span><br><span class=\"line\">  foo: <span class=\"string\">'some/nested/module/foo'</span>,</span><br><span class=\"line\">  bar: <span class=\"string\">'some/nested/module/bar'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"5、Cube-ui-slide引用不到的问题\"><a href=\"#5、Cube-ui-slide引用不到的问题\" class=\"headerlink\" title=\"5、Cube-ui slide引用不到的问题\"></a>5、Cube-ui slide引用不到的问题</h2><ul>\n<li>SlideItem在slide的Item中</li>\n<li>cubeSlideItem: Slide.Item,</li>\n</ul>\n<h2 id=\"6、element-ui中验证对象中的属性\"><a href=\"#6、element-ui中验证对象中的属性\" class=\"headerlink\" title=\"6、element-ui中验证对象中的属性\"></a>6、element-ui中验证对象中的属性</h2><ul>\n<li>prop这样写： prop=”commercialInsurance.renewalDate”</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 验证规则这样写：</span></span><br><span class=\"line\">rules: &#123;</span><br><span class=\"line\">  <span class=\"string\">'commercialInsurance.renewalDate'</span>: [</span><br><span class=\"line\">  &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, ...&#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7、请耐心等待，麦麦会不定期更新哒\"><a href=\"#7、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"7、请耐心等待，麦麦会不定期更新哒~\"></a>7、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<p>讲的都是些很基础的东西，觉得以后写代码能直接复制粘贴的哈哈哈~</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Intersting\"><a href=\"#Intersting\" class=\"headerlink\" title=\"Intersting\"></a>Intersting</h2><h2 id=\"1、移动端搜索框（键盘中是点击前往按钮）\"><a href=\"#1、移动端搜索框（键盘中是点击前往按钮）\" class=\"headerlink\" title=\"1、移动端搜索框（键盘中是点击前往按钮）\"></a>1、移动端搜索框（键盘中是点击前往按钮）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form action=<span class=\"string\">\"\"</span> @keydown=<span class=\"string\">\"handleKeydown\"</span>&gt;</span><br><span class=\"line\">  &lt;input</span><br><span class=\"line\">    ref=<span class=\"string\">\"$input\"</span></span><br><span class=\"line\">    type=<span class=\"string\">\"text\"</span></span><br><span class=\"line\">    v-model=<span class=\"string\">\"val\"</span></span><br><span class=\"line\">    @focus=<span class=\"string\">\"isShow = true\"</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"search-input\"</span></span><br><span class=\"line\">    placeholder=<span class=\"string\">\"搜索\"</span>&gt;</span><br><span class=\"line\">    &lt;span v-show=<span class=\"string\">\"isShow\"</span> @click=<span class=\"string\">\"handleBlur\"</span>&gt;取消&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>form&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>其实就是在input框外面加个form，哈哈哈~ 如果有其他更好的方法要跟我说哦~</li>\n</ul>\n<h2 id=\"2、split按照不同分隔符进行分割\"><a href=\"#2、split按照不同分隔符进行分割\" class=\"headerlink\" title=\"2、split按照不同分隔符进行分割\"></a>2、split按照不同分隔符进行分割</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'asdas,sdad，asdasd'</span>.split(<span class=\"regexp\">/[,，]/</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在前台展示是发现后台可能会传中英文的逗号过来，我就用正则进行分割啦哈哈</li>\n</ul>","more":"<h2 id=\"3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用-reduce-来做到。\"><a href=\"#3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用-reduce-来做到。\" class=\"headerlink\" title=\"3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用 reduce 来做到。\"></a>3、如果你想计算数组中元素出现的次数或者想把数组转为对象，那么你可以使用 reduce 来做到。</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cars = [<span class=\"string\">'BMW'</span>,<span class=\"string\">'Benz'</span>, <span class=\"string\">'Benz'</span>, <span class=\"string\">'Tesla'</span>, <span class=\"string\">'BMW'</span>, <span class=\"string\">'Toyota'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> carsObj = cars.reduce(<span class=\"function\">(<span class=\"params\">obj, name</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  obj[name] = obj[name] ? ++obj[name] : <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">  &#125;, &#123;&#125;);</span><br><span class=\"line\">  carsObj; <span class=\"comment\">// =&gt; &#123; BMW: 2, Benz: 2, Tesla: 1, Toyota: 1 &#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4、-mapActions别名\"><a href=\"#4、-mapActions别名\" class=\"headerlink\" title=\"4、 mapActions别名\"></a>4、 mapActions别名</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...mapActions(<span class=\"string\">'option/product'</span>, [<span class=\"string\">'FETCH'</span>, <span class=\"string\">'CREATE'</span>, <span class=\"string\">'EDIT'</span>, <span class=\"string\">'DEL'</span>]),</span><br><span class=\"line\"></span><br><span class=\"line\">...mapActions(&#123;</span><br><span class=\"line\">  foo: <span class=\"string\">'some/nested/module/foo'</span>,</span><br><span class=\"line\">  bar: <span class=\"string\">'some/nested/module/bar'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"5、Cube-ui-slide引用不到的问题\"><a href=\"#5、Cube-ui-slide引用不到的问题\" class=\"headerlink\" title=\"5、Cube-ui slide引用不到的问题\"></a>5、Cube-ui slide引用不到的问题</h2><ul>\n<li>SlideItem在slide的Item中</li>\n<li>cubeSlideItem: Slide.Item,</li>\n</ul>\n<h2 id=\"6、element-ui中验证对象中的属性\"><a href=\"#6、element-ui中验证对象中的属性\" class=\"headerlink\" title=\"6、element-ui中验证对象中的属性\"></a>6、element-ui中验证对象中的属性</h2><ul>\n<li>prop这样写： prop=”commercialInsurance.renewalDate”</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 验证规则这样写：</span></span><br><span class=\"line\">rules: &#123;</span><br><span class=\"line\">  <span class=\"string\">'commercialInsurance.renewalDate'</span>: [</span><br><span class=\"line\">  &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, ...&#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7、请耐心等待，麦麦会不定期更新哒\"><a href=\"#7、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"7、请耐心等待，麦麦会不定期更新哒~\"></a>7、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>"},{"title":"初学react 简单的table（包含增删查）","date":"2017-12-27T16:00:00.000Z","_content":"><i class=\"icon-cloud\"></i>react table\n> 注意：react的script标签必须type为\"text/babel\"！！！\n#主图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\" />\n#点击新增\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\" />\n#搜索\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\" />\n部分代码如下：\n ```python\n var CartBox = React.createClass({\n   //初始化数据，由state控制\n   getInitialState:function(){\n     return {\n       Itemd :\n       [\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ],\n       selItem :[\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ]\n     }\n   },\n   handleChange: function (rows) {\n        this.setState({\n            selItem : rows\n        });\n    },\n   render : function(){\n     return(\n       <div>\n         <WarpLeft onSear={this.handleChange} Itemdata={this.state.Itemd} />\n         <Prop onAdd={this.handleChange} Itemdata={this.state.Itemd} />\n         <WarpRight onDel={this.handleChange} Itemdata={this.state.selItem} />\n       </div>\n     );\n   }\n });\n //搜索\n var WarpLeft = React.createClass({\n   handleAdd :function(e){\n     e.preventDefault();\n     var self = this;\n     var string = self.refs.findVal.value;\n     var rows = self.props.Itemdata;\n     var dataIn = \"\";\n     var array =[];\n     if(string.length > 0){\n       $.each(rows,function(i,item){\n         dataIn = item.goodsname.indexOf(string);\n         if( dataIn > -1){\n           array.push(item);\n         }\n       });\n     }else{\n       array = self.props.Itemdata;\n     }\n     this.props.onSear(array);\n   },\n   render :function(){\n     var self = this;\n     return(\n       <div className=\"pull-left f2 he6 mt12\">\n         <form>\n           <input id=\"search\" ref=\"findVal\" type=\"text\" autoComplete=\"off\" placeholder=\"请输入名称搜索\"/>\n           <button className=\"btn-sm r btn\" onClick={self.handleAdd}>搜索</button>\n         </form>\n       </div>\n     );\n   }\n });\n //新增弹出框\n var Prop = React.createClass({\n   handleAdd : function(e){\n     var self = this;\n     $(\".propBox\").show();\n   },\n   handleCan : function(e){\n     var self = this;\n     $(\".propBox\").hide();\n   },\n   handleYes : function(e){\n     var self = this;\n     var goodsname = self.refs.goodsname.value.trim();\n     var batch = self.refs.batch.value.trim();\n     var goodscolor = self.refs.goodscolor.value.trim();\n     var prize = self.refs.prize.value.trim();\n     var rows = self.props.Itemdata;\n     if (goodsname != '' & batch != '' & goodscolor != '' & prize != '') {\n        rows.push({'goodsname':goodsname,'batch':batch,'goodscolor':goodscolor,'price':prize});\n        this.props.onAdd(rows);\n     }\n     self.refs.goodsname.value = \"\";\n     self.refs.batch.value= \"\";\n     self.refs.goodscolor.value=\"\";\n     self.refs.prize.value=\"\";\n     $(\".propBox\").hide();\n   },\n```\n<!--more-->\n```python\nrender :function(){\n  var self = this;\n  return (\n    <div>\n    <button onClick={self.handleAdd} className=\"addNew btn mt10 btn-primary\">新增</button>\n    <div className=\"propBox hide\"> <div onClick={self.handleCan} className=\"close\">×</div>\n    <br/>\n      <div className=\"row\">\n        <label htmlFor=\"goodsname\">物品：</label><input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"batch\">批号：</label><input ref=\"batch\" type=\"text\" id=\"batch\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"goodscolor\">颜色：</label><input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"prize\">价格：</label><input ref=\"prize\" type=\"text\" id=\"prize\"/>\n      </div>\n      <div className=\"row tc\">\n        <button onClick={self.handleYes} className=\"btn btn-sm btn-primary\">确定</button>\n      </div>\n    </div>\n    </div>\n);\n}\n});\n//展示数据\nvar WarpRight = React.createClass({\nhandleDel : function(e){\n  var delIndex = e.target.getAttribute('data-key');\n  this.props.Itemdata.splice(delIndex, 1);\n  this.props.onDel(this.props.Itemdata);\n},\nrender :function(){\n  var self = this;\n  return(\n    <div className=\"pull-right f6 he6 l\">\n    <table className=\"table mt10\">\n      <thead>\n        <tr>\n          <th>物品</th>\n          <th>批号</th>\n          <th>颜色</th>\n          <th>价格</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        this.props.Itemdata.map( function(item,i){\n          return (\n            <tr key={i}>\n              <td key={i}>{item.goodsname}</td>\n              <td>{item.batch}</td>\n              <td>{item.goodscolor}</td>\n              <td>{item.price}</td>\n              <td><button onClick={self.handleDel} className=\"destroy\"  data-key={i} >delete</button></td>\n            </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n    </div>\n  );\n}\n});\nReactDOM.render(\n<CartBox />,\ndocument.getElementById(\"warp\")\n);\n```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/react-table.md","raw":"---\ntitle: 初学react 简单的table（包含增删查）\ndate: 2017-12-28\ntags: React\n---\n><i class=\"icon-cloud\"></i>react table\n> 注意：react的script标签必须type为\"text/babel\"！！！\n#主图\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\" />\n#点击新增\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\" />\n#搜索\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\" />\n部分代码如下：\n ```python\n var CartBox = React.createClass({\n   //初始化数据，由state控制\n   getInitialState:function(){\n     return {\n       Itemd :\n       [\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ],\n       selItem :[\n         {\"goodsname\":\"手机\",\"batch\":\"P1556\",\"goodscolor\":\"金色\",\"price\":\"￥5876\"},\n         {\"goodsname\":\"杯垫\",\"batch\":\"P1586\",\"goodscolor\":\"红色\",\"price\":\"￥56\"},\n         {\"goodsname\":\"杯子\",\"batch\":\"P1542\",\"goodscolor\":\"红色\",\"price\":\"￥76\"},\n         {\"goodsname\":\"钢笔\",\"batch\":\"P7656\",\"goodscolor\":\"粉色\",\"price\":\"￥66\"},\n         {\"goodsname\":\"书本\",\"batch\":\"P3556\",\"goodscolor\":\"白色\",\"price\":\"￥6\"}\n       ]\n     }\n   },\n   handleChange: function (rows) {\n        this.setState({\n            selItem : rows\n        });\n    },\n   render : function(){\n     return(\n       <div>\n         <WarpLeft onSear={this.handleChange} Itemdata={this.state.Itemd} />\n         <Prop onAdd={this.handleChange} Itemdata={this.state.Itemd} />\n         <WarpRight onDel={this.handleChange} Itemdata={this.state.selItem} />\n       </div>\n     );\n   }\n });\n //搜索\n var WarpLeft = React.createClass({\n   handleAdd :function(e){\n     e.preventDefault();\n     var self = this;\n     var string = self.refs.findVal.value;\n     var rows = self.props.Itemdata;\n     var dataIn = \"\";\n     var array =[];\n     if(string.length > 0){\n       $.each(rows,function(i,item){\n         dataIn = item.goodsname.indexOf(string);\n         if( dataIn > -1){\n           array.push(item);\n         }\n       });\n     }else{\n       array = self.props.Itemdata;\n     }\n     this.props.onSear(array);\n   },\n   render :function(){\n     var self = this;\n     return(\n       <div className=\"pull-left f2 he6 mt12\">\n         <form>\n           <input id=\"search\" ref=\"findVal\" type=\"text\" autoComplete=\"off\" placeholder=\"请输入名称搜索\"/>\n           <button className=\"btn-sm r btn\" onClick={self.handleAdd}>搜索</button>\n         </form>\n       </div>\n     );\n   }\n });\n //新增弹出框\n var Prop = React.createClass({\n   handleAdd : function(e){\n     var self = this;\n     $(\".propBox\").show();\n   },\n   handleCan : function(e){\n     var self = this;\n     $(\".propBox\").hide();\n   },\n   handleYes : function(e){\n     var self = this;\n     var goodsname = self.refs.goodsname.value.trim();\n     var batch = self.refs.batch.value.trim();\n     var goodscolor = self.refs.goodscolor.value.trim();\n     var prize = self.refs.prize.value.trim();\n     var rows = self.props.Itemdata;\n     if (goodsname != '' & batch != '' & goodscolor != '' & prize != '') {\n        rows.push({'goodsname':goodsname,'batch':batch,'goodscolor':goodscolor,'price':prize});\n        this.props.onAdd(rows);\n     }\n     self.refs.goodsname.value = \"\";\n     self.refs.batch.value= \"\";\n     self.refs.goodscolor.value=\"\";\n     self.refs.prize.value=\"\";\n     $(\".propBox\").hide();\n   },\n```\n<!--more-->\n```python\nrender :function(){\n  var self = this;\n  return (\n    <div>\n    <button onClick={self.handleAdd} className=\"addNew btn mt10 btn-primary\">新增</button>\n    <div className=\"propBox hide\"> <div onClick={self.handleCan} className=\"close\">×</div>\n    <br/>\n      <div className=\"row\">\n        <label htmlFor=\"goodsname\">物品：</label><input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"batch\">批号：</label><input ref=\"batch\" type=\"text\" id=\"batch\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"goodscolor\">颜色：</label><input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/>\n      </div>\n      <div className=\"row\">\n        <label htmlFor=\"prize\">价格：</label><input ref=\"prize\" type=\"text\" id=\"prize\"/>\n      </div>\n      <div className=\"row tc\">\n        <button onClick={self.handleYes} className=\"btn btn-sm btn-primary\">确定</button>\n      </div>\n    </div>\n    </div>\n);\n}\n});\n//展示数据\nvar WarpRight = React.createClass({\nhandleDel : function(e){\n  var delIndex = e.target.getAttribute('data-key');\n  this.props.Itemdata.splice(delIndex, 1);\n  this.props.onDel(this.props.Itemdata);\n},\nrender :function(){\n  var self = this;\n  return(\n    <div className=\"pull-right f6 he6 l\">\n    <table className=\"table mt10\">\n      <thead>\n        <tr>\n          <th>物品</th>\n          <th>批号</th>\n          <th>颜色</th>\n          <th>价格</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        this.props.Itemdata.map( function(item,i){\n          return (\n            <tr key={i}>\n              <td key={i}>{item.goodsname}</td>\n              <td>{item.batch}</td>\n              <td>{item.goodscolor}</td>\n              <td>{item.price}</td>\n              <td><button onClick={self.handleDel} className=\"destroy\"  data-key={i} >delete</button></td>\n            </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n    </div>\n  );\n}\n});\nReactDOM.render(\n<CartBox />,\ndocument.getElementById(\"warp\")\n);\n```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"react-table","published":1,"updated":"2020-02-26T10:24:21.368Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0ze0018000mcy8ldcv6","content":"<blockquote>\n<p><i class=\"icon-cloud\"></i>react table<br>注意：react的script标签必须type为”text/babel”！！！</p>\n</blockquote>\n<p>#主图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\" /></p>\n<p>#点击新增<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\" /></p>\n<p>#搜索<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\" /><br>部分代码如下：<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var CartBox = React.createClass(&#123;</span><br><span class=\"line\">  //初始化数据，由state控制</span><br><span class=\"line\">  getInitialState:function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      Itemd :</span><br><span class=\"line\">      [</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"手机\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"金色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥5876\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯垫\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1586\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥56\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯子\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1542\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥76\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"钢笔\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P7656\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"粉色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥66\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"书本\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P3556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"白色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥6\"</span>&#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      selItem :[</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"手机\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"金色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥5876\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯垫\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1586\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥56\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯子\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1542\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥76\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"钢笔\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P7656\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"粉色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥66\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"书本\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P3556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"白色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥6\"</span>&#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  handleChange: function (rows) &#123;</span><br><span class=\"line\">       this.setState(&#123;</span><br><span class=\"line\">           selItem : rows</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">  render : function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;WarpLeft onSear=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</span><br><span class=\"line\">        &lt;Prop onAdd=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</span><br><span class=\"line\">        &lt;WarpRight onDel=&#123;this.handleChange&#125; Itemdata=&#123;this.state.selItem&#125; /&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//搜索</span><br><span class=\"line\">var WarpLeft = React.createClass(&#123;</span><br><span class=\"line\">  handleAdd :function(e)&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    var string = self.refs.findVal.value;</span><br><span class=\"line\">    var rows = self.props.Itemdata;</span><br><span class=\"line\">    var dataIn = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    var array =[];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(string.length &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      $.each(rows,function(i,item)&#123;</span><br><span class=\"line\">        dataIn = item.goodsname.indexOf(string);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( dataIn &gt; <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">          array.push(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      array = self.props.Itemdata;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    this.props.onSear(array);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  render :function()&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"pull-left f2 he6 mt12\"</span>&gt;</span><br><span class=\"line\">        &lt;form&gt;</span><br><span class=\"line\">          &lt;input id=<span class=\"string\">\"search\"</span> ref=<span class=\"string\">\"findVal\"</span> type=<span class=\"string\">\"text\"</span> autoComplete=<span class=\"string\">\"off\"</span> placeholder=<span class=\"string\">\"请输入名称搜索\"</span>/&gt;</span><br><span class=\"line\">          &lt;button className=\"btn-sm r btn\" onClick=&#123;self.handleAdd&#125;&gt;搜索&lt;/button&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//新增弹出框</span><br><span class=\"line\">var Prop = React.createClass(&#123;</span><br><span class=\"line\">  handleAdd : function(e)&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    $(<span class=\"string\">\".propBox\"</span>).show();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  handleCan : function(e)&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    $(<span class=\"string\">\".propBox\"</span>).hide();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  handleYes : function(e)&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    var goodsname = self.refs.goodsname.value.trim();</span><br><span class=\"line\">    var batch = self.refs.batch.value.trim();</span><br><span class=\"line\">    var goodscolor = self.refs.goodscolor.value.trim();</span><br><span class=\"line\">    var prize = self.refs.prize.value.trim();</span><br><span class=\"line\">    var rows = self.props.Itemdata;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (goodsname != <span class=\"string\">''</span> &amp; batch != <span class=\"string\">''</span> &amp; goodscolor != <span class=\"string\">''</span> &amp; prize != <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">       rows.push(&#123;<span class=\"string\">'goodsname'</span>:goodsname,<span class=\"string\">'batch'</span>:batch,<span class=\"string\">'goodscolor'</span>:goodscolor,<span class=\"string\">'price'</span>:prize&#125;);</span><br><span class=\"line\">       this.props.onAdd(rows);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    self.refs.goodsname.value = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    self.refs.batch.value= <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    self.refs.goodscolor.value=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    self.refs.prize.value=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    $(<span class=\"string\">\".propBox\"</span>).hide();</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render :function()&#123;</span><br><span class=\"line\">  var self = this;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">    &lt;button onClick=&#123;self.handleAdd&#125; className=\"addNew btn mt10 btn-primary\"&gt;新增&lt;/button&gt;</span><br><span class=\"line\">    &lt;div className=\"propBox hide\"&gt; &lt;div onClick=&#123;self.handleCan&#125; className=\"close\"&gt;×&lt;/div&gt;</span><br><span class=\"line\">    &lt;br/&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"goodsname\"&gt;物品：&lt;/label&gt;&lt;input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"batch\"&gt;批号：&lt;/label&gt;&lt;input ref=\"batch\" type=\"text\" id=\"batch\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"goodscolor\"&gt;颜色：&lt;/label&gt;&lt;input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"prize\"&gt;价格：&lt;/label&gt;&lt;input ref=\"prize\" type=\"text\" id=\"prize\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row tc\"</span>&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;self.handleYes&#125; className=\"btn btn-sm btn-primary\"&gt;确定&lt;/button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//展示数据</span><br><span class=\"line\">var WarpRight = React.createClass(&#123;</span><br><span class=\"line\">handleDel : function(e)&#123;</span><br><span class=\"line\">  var delIndex = e.target.getAttribute(<span class=\"string\">'data-key'</span>);</span><br><span class=\"line\">  this.props.Itemdata.splice(delIndex, <span class=\"number\">1</span>);</span><br><span class=\"line\">  this.props.onDel(this.props.Itemdata);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">render :function()&#123;</span><br><span class=\"line\">  var self = this;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(</span><br><span class=\"line\">    &lt;div className=<span class=\"string\">\"pull-right f6 he6 l\"</span>&gt;</span><br><span class=\"line\">    &lt;table className=<span class=\"string\">\"table mt10\"</span>&gt;</span><br><span class=\"line\">      &lt;thead&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;th&gt;物品&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;批号&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;颜色&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;价格&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">      &lt;/thead&gt;</span><br><span class=\"line\">      &lt;tbody&gt;</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        this.props.Itemdata.map( function(item,i)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;tr key=&#123;i&#125;&gt;</span><br><span class=\"line\">              &lt;td key=&#123;i&#125;&gt;&#123;item.goodsname&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&#123;item.batch&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&#123;item.goodscolor&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&#123;item.price&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&lt;button onClick=&#123;self.handleDel&#125; className=\"destroy\"  data-key=&#123;i&#125; &gt;delete&lt;/button&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;/tr&gt;</span><br><span class=\"line\">          )</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &lt;/tbody&gt;</span><br><span class=\"line\">    &lt;/table&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">&lt;CartBox /&gt;,</span><br><span class=\"line\">document.getElementById(<span class=\"string\">\"warp\"</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p><i class=\"icon-cloud\"></i>react table<br>注意：react的script标签必须type为”text/babel”！！！</p>\n</blockquote>\n<p>#主图<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/react.png?raw=true\" /></p>\n<p>#点击新增<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/new.png?raw=true\" /></p>\n<p>#搜索<br><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/search.png?raw=true\" /><br>部分代码如下：<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var CartBox = React.createClass(&#123;</span><br><span class=\"line\">  //初始化数据，由state控制</span><br><span class=\"line\">  getInitialState:function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      Itemd :</span><br><span class=\"line\">      [</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"手机\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"金色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥5876\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯垫\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1586\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥56\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯子\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1542\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥76\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"钢笔\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P7656\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"粉色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥66\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"书本\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P3556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"白色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥6\"</span>&#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      selItem :[</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"手机\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"金色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥5876\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯垫\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1586\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥56\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"杯子\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P1542\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"红色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥76\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"钢笔\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P7656\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"粉色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥66\"</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">\"goodsname\"</span>:<span class=\"string\">\"书本\"</span>,<span class=\"string\">\"batch\"</span>:<span class=\"string\">\"P3556\"</span>,<span class=\"string\">\"goodscolor\"</span>:<span class=\"string\">\"白色\"</span>,<span class=\"string\">\"price\"</span>:<span class=\"string\">\"￥6\"</span>&#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  handleChange: function (rows) &#123;</span><br><span class=\"line\">       this.setState(&#123;</span><br><span class=\"line\">           selItem : rows</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">  render : function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;WarpLeft onSear=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</span><br><span class=\"line\">        &lt;Prop onAdd=&#123;this.handleChange&#125; Itemdata=&#123;this.state.Itemd&#125; /&gt;</span><br><span class=\"line\">        &lt;WarpRight onDel=&#123;this.handleChange&#125; Itemdata=&#123;this.state.selItem&#125; /&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//搜索</span><br><span class=\"line\">var WarpLeft = React.createClass(&#123;</span><br><span class=\"line\">  handleAdd :function(e)&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    var string = self.refs.findVal.value;</span><br><span class=\"line\">    var rows = self.props.Itemdata;</span><br><span class=\"line\">    var dataIn = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    var array =[];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(string.length &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      $.each(rows,function(i,item)&#123;</span><br><span class=\"line\">        dataIn = item.goodsname.indexOf(string);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( dataIn &gt; <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">          array.push(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      array = self.props.Itemdata;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    this.props.onSear(array);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  render :function()&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"pull-left f2 he6 mt12\"</span>&gt;</span><br><span class=\"line\">        &lt;form&gt;</span><br><span class=\"line\">          &lt;input id=<span class=\"string\">\"search\"</span> ref=<span class=\"string\">\"findVal\"</span> type=<span class=\"string\">\"text\"</span> autoComplete=<span class=\"string\">\"off\"</span> placeholder=<span class=\"string\">\"请输入名称搜索\"</span>/&gt;</span><br><span class=\"line\">          &lt;button className=\"btn-sm r btn\" onClick=&#123;self.handleAdd&#125;&gt;搜索&lt;/button&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//新增弹出框</span><br><span class=\"line\">var Prop = React.createClass(&#123;</span><br><span class=\"line\">  handleAdd : function(e)&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    $(<span class=\"string\">\".propBox\"</span>).show();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  handleCan : function(e)&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    $(<span class=\"string\">\".propBox\"</span>).hide();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  handleYes : function(e)&#123;</span><br><span class=\"line\">    var self = this;</span><br><span class=\"line\">    var goodsname = self.refs.goodsname.value.trim();</span><br><span class=\"line\">    var batch = self.refs.batch.value.trim();</span><br><span class=\"line\">    var goodscolor = self.refs.goodscolor.value.trim();</span><br><span class=\"line\">    var prize = self.refs.prize.value.trim();</span><br><span class=\"line\">    var rows = self.props.Itemdata;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (goodsname != <span class=\"string\">''</span> &amp; batch != <span class=\"string\">''</span> &amp; goodscolor != <span class=\"string\">''</span> &amp; prize != <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">       rows.push(&#123;<span class=\"string\">'goodsname'</span>:goodsname,<span class=\"string\">'batch'</span>:batch,<span class=\"string\">'goodscolor'</span>:goodscolor,<span class=\"string\">'price'</span>:prize&#125;);</span><br><span class=\"line\">       this.props.onAdd(rows);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    self.refs.goodsname.value = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    self.refs.batch.value= <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    self.refs.goodscolor.value=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    self.refs.prize.value=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    $(<span class=\"string\">\".propBox\"</span>).hide();</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure><br>","more":"<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render :function()&#123;</span><br><span class=\"line\">  var self = this;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">    &lt;button onClick=&#123;self.handleAdd&#125; className=\"addNew btn mt10 btn-primary\"&gt;新增&lt;/button&gt;</span><br><span class=\"line\">    &lt;div className=\"propBox hide\"&gt; &lt;div onClick=&#123;self.handleCan&#125; className=\"close\"&gt;×&lt;/div&gt;</span><br><span class=\"line\">    &lt;br/&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"goodsname\"&gt;物品：&lt;/label&gt;&lt;input ref=\"goodsname\" type=\"text\" id=\"goodsname\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"batch\"&gt;批号：&lt;/label&gt;&lt;input ref=\"batch\" type=\"text\" id=\"batch\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"goodscolor\"&gt;颜色：&lt;/label&gt;&lt;input ref=\"goodscolor\" type=\"text\" id=\"goodscolor\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row\"</span>&gt;</span><br><span class=\"line\">        &lt;label htmlFor=\"prize\"&gt;价格：&lt;/label&gt;&lt;input ref=\"prize\" type=\"text\" id=\"prize\"/&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"row tc\"</span>&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;self.handleYes&#125; className=\"btn btn-sm btn-primary\"&gt;确定&lt;/button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//展示数据</span><br><span class=\"line\">var WarpRight = React.createClass(&#123;</span><br><span class=\"line\">handleDel : function(e)&#123;</span><br><span class=\"line\">  var delIndex = e.target.getAttribute(<span class=\"string\">'data-key'</span>);</span><br><span class=\"line\">  this.props.Itemdata.splice(delIndex, <span class=\"number\">1</span>);</span><br><span class=\"line\">  this.props.onDel(this.props.Itemdata);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">render :function()&#123;</span><br><span class=\"line\">  var self = this;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(</span><br><span class=\"line\">    &lt;div className=<span class=\"string\">\"pull-right f6 he6 l\"</span>&gt;</span><br><span class=\"line\">    &lt;table className=<span class=\"string\">\"table mt10\"</span>&gt;</span><br><span class=\"line\">      &lt;thead&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;th&gt;物品&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;批号&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;颜色&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;价格&lt;/th&gt;</span><br><span class=\"line\">          &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">      &lt;/thead&gt;</span><br><span class=\"line\">      &lt;tbody&gt;</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        this.props.Itemdata.map( function(item,i)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;tr key=&#123;i&#125;&gt;</span><br><span class=\"line\">              &lt;td key=&#123;i&#125;&gt;&#123;item.goodsname&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&#123;item.batch&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&#123;item.goodscolor&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&#123;item.price&#125;&lt;/td&gt;</span><br><span class=\"line\">              &lt;td&gt;&lt;button onClick=&#123;self.handleDel&#125; className=\"destroy\"  data-key=&#123;i&#125; &gt;delete&lt;/button&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;/tr&gt;</span><br><span class=\"line\">          )</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &lt;/tbody&gt;</span><br><span class=\"line\">    &lt;/table&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">&lt;CartBox /&gt;,</span><br><span class=\"line\">document.getElementById(<span class=\"string\">\"warp\"</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>"},{"title":"wangEditor 在光标处插入变量","date":"2020-03-25T16:00:00.000Z","_content":"hello~ 项目中需要用到编辑器，寻寻觅觅找了个中国本土的wangEditor， 传说中最轻量级的编辑器。用起来毫不费力，直到某天遇到了个问题\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n> 日常使用\n\n```javascript\n  import Editor from 'wangeditor';\n\n  const elem = this.editorElem; // this.editorElem是dom元素\n    this.editor = new Editor(elem);\n    this.editor.customConfig.menus = [\n      'head',\n      'bold',\n      'fontSize',\n      'foreColor',\n      'backColor',\n      'italic',\n      'link',\n      'list',\n      'underline',\n      'justify',\n      'image',\n      'table',\n      'emoticon',\n    ];\n    this.editor.customConfig.onchange = (html: any) => {\n      // change回调\n      this.setState({\n        editData: {\n          ...editData,\n          content: html\n        }\n      })\n    }\n    this.editor.create();\n\n    // HTML\n    <div ref={ref => { this.editorElem = ref }}></div> // 这是react的写法\n    <div ref=\"editorElem\" /> // 这是vue的写法\n```\n> 下面是点击在光标处插入你需要插入的dom\n\n```javascript\n  addContent = (clickTagText: any) => {\n    this.editor.cmd.do('insertHTML', `<span style=\"color: red;\">我是标签啊</span>`)\n  }\n```\n\n> 那么问题来了！人的欲望总是不穷无尽的 怎么才能实现删除的时候 整个删除标签呢？\n\n```javascript\n  // 用input去包裹 就能一整个删除拉，但是还是有点不好的地方 你需要去计算文字的宽度 一下我只做了中文的计算 一个中文差不多13个像素\n  /* clickTagText 是要插入的标签文字 */\n  this.editor.cmd.do('insertHTML', `<input readonly style=\"text-align: center;width: ${clickTagText.length * 13}px;border: none; height: 20px;color: red;\" value=\"${clickTagText}\" />`)\n```\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/wangEditor.md","raw":"---\ntitle: wangEditor 在光标处插入变量\ndate: 2020-03-26\ntags: react\n---\nhello~ 项目中需要用到编辑器，寻寻觅觅找了个中国本土的wangEditor， 传说中最轻量级的编辑器。用起来毫不费力，直到某天遇到了个问题\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n> 日常使用\n\n```javascript\n  import Editor from 'wangeditor';\n\n  const elem = this.editorElem; // this.editorElem是dom元素\n    this.editor = new Editor(elem);\n    this.editor.customConfig.menus = [\n      'head',\n      'bold',\n      'fontSize',\n      'foreColor',\n      'backColor',\n      'italic',\n      'link',\n      'list',\n      'underline',\n      'justify',\n      'image',\n      'table',\n      'emoticon',\n    ];\n    this.editor.customConfig.onchange = (html: any) => {\n      // change回调\n      this.setState({\n        editData: {\n          ...editData,\n          content: html\n        }\n      })\n    }\n    this.editor.create();\n\n    // HTML\n    <div ref={ref => { this.editorElem = ref }}></div> // 这是react的写法\n    <div ref=\"editorElem\" /> // 这是vue的写法\n```\n> 下面是点击在光标处插入你需要插入的dom\n\n```javascript\n  addContent = (clickTagText: any) => {\n    this.editor.cmd.do('insertHTML', `<span style=\"color: red;\">我是标签啊</span>`)\n  }\n```\n\n> 那么问题来了！人的欲望总是不穷无尽的 怎么才能实现删除的时候 整个删除标签呢？\n\n```javascript\n  // 用input去包裹 就能一整个删除拉，但是还是有点不好的地方 你需要去计算文字的宽度 一下我只做了中文的计算 一个中文差不多13个像素\n  /* clickTagText 是要插入的标签文字 */\n  this.editor.cmd.do('insertHTML', `<input readonly style=\"text-align: center;width: ${clickTagText.length * 13}px;border: none; height: 20px;color: red;\" value=\"${clickTagText}\" />`)\n```\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"wangEditor","published":1,"updated":"2021-05-14T07:09:09.812Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0zf001b000m6c5c094m","content":"<p>hello~ 项目中需要用到编辑器，寻寻觅觅找了个中国本土的wangEditor， 传说中最轻量级的编辑器。用起来毫不费力，直到某天遇到了个问题</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p>日常使用</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Editor <span class=\"keyword\">from</span> <span class=\"string\">'wangeditor'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> elem = <span class=\"keyword\">this</span>.editorElem; <span class=\"comment\">// this.editorElem是dom元素</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor = <span class=\"keyword\">new</span> Editor(elem);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.menus = [</span><br><span class=\"line\">    <span class=\"string\">'head'</span>,</span><br><span class=\"line\">    <span class=\"string\">'bold'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fontSize'</span>,</span><br><span class=\"line\">    <span class=\"string\">'foreColor'</span>,</span><br><span class=\"line\">    <span class=\"string\">'backColor'</span>,</span><br><span class=\"line\">    <span class=\"string\">'italic'</span>,</span><br><span class=\"line\">    <span class=\"string\">'link'</span>,</span><br><span class=\"line\">    <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    <span class=\"string\">'underline'</span>,</span><br><span class=\"line\">    <span class=\"string\">'justify'</span>,</span><br><span class=\"line\">    <span class=\"string\">'image'</span>,</span><br><span class=\"line\">    <span class=\"string\">'table'</span>,</span><br><span class=\"line\">    <span class=\"string\">'emoticon'</span>,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.onchange = <span class=\"function\">(<span class=\"params\">html: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// change回调</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      editData: &#123;</span><br><span class=\"line\">        ...editData,</span><br><span class=\"line\">        content: html</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.create();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// HTML</span></span><br><span class=\"line\">  &lt;div ref=&#123;ref =&gt; &#123; <span class=\"keyword\">this</span>.editorElem = ref &#125;&#125;&gt;&lt;<span class=\"regexp\">/div&gt; /</span><span class=\"regexp\">/ 这是react的写法</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div ref=\"editorElem\" /</span>&gt; <span class=\"comment\">// 这是vue的写法</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>下面是点击在光标处插入你需要插入的dom</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addContent = <span class=\"function\">(<span class=\"params\">clickTagText: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.cmd.do(<span class=\"string\">'insertHTML'</span>, <span class=\"string\">`&lt;span style=\"color: red;\"&gt;我是标签啊&lt;/span&gt;`</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>那么问题来了！人的欲望总是不穷无尽的 怎么才能实现删除的时候 整个删除标签呢？</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用input去包裹 就能一整个删除拉，但是还是有点不好的地方 你需要去计算文字的宽度 一下我只做了中文的计算 一个中文差不多13个像素</span></span><br><span class=\"line\"><span class=\"comment\">/* clickTagText 是要插入的标签文字 */</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.editor.cmd.do(<span class=\"string\">'insertHTML'</span>, <span class=\"string\">`&lt;input readonly style=\"text-align: center;width: <span class=\"subst\">$&#123;clickTagText.length * <span class=\"number\">13</span>&#125;</span>px;border: none; height: 20px;color: red;\" value=\"<span class=\"subst\">$&#123;clickTagText&#125;</span>\" /&gt;`</span>)</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>hello~ 项目中需要用到编辑器，寻寻觅觅找了个中国本土的wangEditor， 传说中最轻量级的编辑器。用起来毫不费力，直到某天遇到了个问题</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<blockquote>\n<p>日常使用</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Editor <span class=\"keyword\">from</span> <span class=\"string\">'wangeditor'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> elem = <span class=\"keyword\">this</span>.editorElem; <span class=\"comment\">// this.editorElem是dom元素</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor = <span class=\"keyword\">new</span> Editor(elem);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.menus = [</span><br><span class=\"line\">    <span class=\"string\">'head'</span>,</span><br><span class=\"line\">    <span class=\"string\">'bold'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fontSize'</span>,</span><br><span class=\"line\">    <span class=\"string\">'foreColor'</span>,</span><br><span class=\"line\">    <span class=\"string\">'backColor'</span>,</span><br><span class=\"line\">    <span class=\"string\">'italic'</span>,</span><br><span class=\"line\">    <span class=\"string\">'link'</span>,</span><br><span class=\"line\">    <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    <span class=\"string\">'underline'</span>,</span><br><span class=\"line\">    <span class=\"string\">'justify'</span>,</span><br><span class=\"line\">    <span class=\"string\">'image'</span>,</span><br><span class=\"line\">    <span class=\"string\">'table'</span>,</span><br><span class=\"line\">    <span class=\"string\">'emoticon'</span>,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.customConfig.onchange = <span class=\"function\">(<span class=\"params\">html: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// change回调</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      editData: &#123;</span><br><span class=\"line\">        ...editData,</span><br><span class=\"line\">        content: html</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.create();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// HTML</span></span><br><span class=\"line\">  &lt;div ref=&#123;ref =&gt; &#123; <span class=\"keyword\">this</span>.editorElem = ref &#125;&#125;&gt;&lt;<span class=\"regexp\">/div&gt; /</span><span class=\"regexp\">/ 这是react的写法</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div ref=\"editorElem\" /</span>&gt; <span class=\"comment\">// 这是vue的写法</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>下面是点击在光标处插入你需要插入的dom</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addContent = <span class=\"function\">(<span class=\"params\">clickTagText: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.editor.cmd.do(<span class=\"string\">'insertHTML'</span>, <span class=\"string\">`&lt;span style=\"color: red;\"&gt;我是标签啊&lt;/span&gt;`</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>那么问题来了！人的欲望总是不穷无尽的 怎么才能实现删除的时候 整个删除标签呢？</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用input去包裹 就能一整个删除拉，但是还是有点不好的地方 你需要去计算文字的宽度 一下我只做了中文的计算 一个中文差不多13个像素</span></span><br><span class=\"line\"><span class=\"comment\">/* clickTagText 是要插入的标签文字 */</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.editor.cmd.do(<span class=\"string\">'insertHTML'</span>, <span class=\"string\">`&lt;input readonly style=\"text-align: center;width: <span class=\"subst\">$&#123;clickTagText.length * <span class=\"number\">13</span>&#125;</span>px;border: none; height: 20px;color: red;\" value=\"<span class=\"subst\">$&#123;clickTagText&#125;</span>\" /&gt;`</span>)</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"vue或其他小难题整理","date":"2018-07-11T16:00:00.000Z","_content":"初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D\n<font size=1>**如有转载，请注明出处。**</font>\n## Vue\n## 1、emmet在jsx中不能使用的情况\n> 大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet\n> 我用的是atom编辑器。\n> 首先，当然是打开atom 安装emmet插件 打开设置->key bindings -> 点击 用户键盘映射 ->修改文件\n```javascript\n'atom-text-editor[data-grammar=\"source js jsx vue\"]':\n  'F12':'atom-html-preview:toggle',\n  'tab': 'emmet:expand-abbreviation-with-tab'\n```\n> 这样就ok啦~ 尽情的使用emmet吧！\n\n## 2、一个关于webpack的问题。\n> 起服务以后，用localhost访问可以访问，\n> 用具体ip 如：192.168.91.75:8080/index 却访问不到地址\n> 这是啥问题呐(⊙o⊙)?\n> 原来原来 只要在配置文件中加上 --host 0.0.0.0 就可以啦\n> 具体在哪里加呢 答案就是在**package.json**中的start中啦~\n```javascript\n\"scripts\": {\n  \"start\": \"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\",\n  \"build\": \"webpack --progress --profile --colors --config webpack.production.config.js\"\n}\n```\n\n## 3、说个vue的 外链css的问题\n> 再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css\n> 于是我import 'xxx.less' --->报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的\n> 后来我才知道 vue中 外链css 要卸载style标签内部 然后@import 'xxx.less'\n> 这样就没问题了~\n> 还有个如果你想在页面的style中使用less或sass要怎么办呢\n> 给style加个 lang=\"less\"就可以啦\n\n<!--more-->\n## 4、对于github一直要输入账户名密码问题\n> git config -- global user.name \"maimai123\"\n> git config --global user.email maimaixxx@163.com\n> git config -- global credential.helperstore\n\n## 5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\n> 路由中换个模式就好了\n> 那么怎么写呢 参考地址：[vue-router](http://router.vuejs.org/en/essentials/history-mode.html)\n\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\" />\n\n## 6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\n```javascript\n  devServer:{ //配置服务器环境\n    colors:true,\n    historyApiFallback:true,\n    inline:true, //自动刷新\n    port:'1234', //修改端口号\n    host : '0.0.0.0',\n    progress:true\n},\n\n```\n\nThere are some additional options:\n\n--content-base <file/directory/url/port>: base path for the content.\n--quiet: don’t output anything to the console.\n--no-info: suppress boring information.\n--colors: add some colors to the output.\n--no-colors: don’t use colors in the output.\n--compress: use gzip compression.\n--host <hostname/ip>: hostname or IP. 0.0.0.0 binds to all hosts.\n--port <number>: port.\n--inline: embed the webpack-dev-server runtime into the bundle.\n--hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.\n--hot --inline also adds the webpack/hot/dev-server entry.\n--public: overrides the host and port used in --inline mode for the client (useful for a VM or Docker).\n--lazy: no watching, compiles on request (cannot be combined with --hot).\n--https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.\n--cert, --cacert, --key: Paths the certificate files.\n--open: opens the url in default browser (for webpack-dev-server versions > 2.0).\n--history-api-fallback: enables support for history API fallback.\n--client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.\n\n> 也可以写在package.json的start中。如：webpack-dev-server --devtool eval --progress --colors --inline --hot --content-base build --port1234\n> 但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,\n\n## 7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\n> 我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。\n> 我在actions、mutations和getters中都默认输出了，即：export default{ ... }, 而在store中还以\n> import * as actions from './actions'\n> 这种方法引入。。。简直作死啊~~\n> 以后你们可别犯这种傻错啊\n\n## 8、换了新电脑是 --air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\n> 真是一步一个坎啊 我先跟大家说一下 我把我的博客的挣个文件夹都从原来的电脑里copy了过来，很难想象我要是脑筋粗大一点没拷过来会是怎样\n> 我在github上新建了仓库，里面啥东西也没有 我是打算用来存放我的hexo源文件的。\n> 然后我下载了git、xcode、sourcetree等工具。废话有点多 别介意啊\n> 我先查了一下我git 安装完成没有 git --vertion看一下版本号有版本号就是安装完成了\n> 当然你首先要安装node。这个总不用我教了吧？\n> 在安装hexo -> npm install -g hexo-cli\n> 安装完也看一下安装了没 然后在命令里新建个ssh文件 命令->ssh-keygen -t rsa -C youremail@example.com(你的Github登录名)\n> 然后复制id_rsa.pub的内容并将其填入Github那边的key。\n> 安装完 sourcetree 之后你就可以点击新仓库 从url克隆，把你的新仓库复制来放进去，选好文件夹拖进你的hexo源文件\n> 最后提交一下就好啦~\n> 你试着在hexo源文件下打hexo s 看看有没有起本地服务吧~\n> 当然在此之前你需要npm install一下来安装依赖啦 :-D\n\n## 9、vue的小问题\n> vue图片地址为空会报错 所以需要先给图片要做一个判断->v-if\n> 地址为空的时候不渲染\n> Img 添加路径（循环取变量）时要加bind 即:src=“item.imgUrl”\n> href、id、disabled也是一样\n> 如果是添加行内样式则是:style=“{backgroundImage:’url(‘+list.url+’)’}”\n> 双引号单引号你就自己看吧 哈哈 毕竟我也是一脸懵逼\n\n## 10、移动端阻止回弹\n> 一些移动设备有缺省的touchmove行为，比如说经典的iOSoverscroll效果，\n> 当滚动超出了内容的界限时就引发视图反弹。\n> 这种做法在许多多点触控应用中会带来混乱，所以要禁用它。\n```javascript\n  document.body.addEventListener('touchmove',function(event){\n  event.preventDefault();\n  },false);\n```\n\n## 11、vue props传递数据\n> 众所周知，vue中的props和react中的props一样，都是用来父子组件通信用的\n> 在父组件中传递给子组件 只需要在子组件上加要传递的数据 ps:注意动态的要用v-bind/:哦~\n> 还有个字面量语法问题 <comp some-prop=\"1\"></comp> 这样传递的是一个字符串\n> 如果想要传递number，也要使用v-bind\n> 在子组件中用props接收即可\n> 那么如果在子组件中调用父组件的方法呢？ 也是可以的\n> vue 使用v-on绑定自定义事件\n> 使用 \\$on(eventName) 监听事件\n> 使用 \\$emit(eventName) 触发事件\n> 父组件在使用子组件的地方直接用 v-on 来监听子组件触发的事件，直接在模板里绑定\n> 如：\n```javascript\n<button-counter @increment=\"incrementTotal\"></button-counter>\n```\n> incrementTotal是父组件的方法 increment是传递给子组件的props名字\n> 子组件用 this.$emit('increment') 调用\n\n\n\n\n## 12、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/small.md","raw":"---\ntitle: vue或其他小难题整理\ndate: 2018-07-12\ntags: vue\n---\n初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D\n<font size=1>**如有转载，请注明出处。**</font>\n## Vue\n## 1、emmet在jsx中不能使用的情况\n> 大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet\n> 我用的是atom编辑器。\n> 首先，当然是打开atom 安装emmet插件 打开设置->key bindings -> 点击 用户键盘映射 ->修改文件\n```javascript\n'atom-text-editor[data-grammar=\"source js jsx vue\"]':\n  'F12':'atom-html-preview:toggle',\n  'tab': 'emmet:expand-abbreviation-with-tab'\n```\n> 这样就ok啦~ 尽情的使用emmet吧！\n\n## 2、一个关于webpack的问题。\n> 起服务以后，用localhost访问可以访问，\n> 用具体ip 如：192.168.91.75:8080/index 却访问不到地址\n> 这是啥问题呐(⊙o⊙)?\n> 原来原来 只要在配置文件中加上 --host 0.0.0.0 就可以啦\n> 具体在哪里加呢 答案就是在**package.json**中的start中啦~\n```javascript\n\"scripts\": {\n  \"start\": \"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\",\n  \"build\": \"webpack --progress --profile --colors --config webpack.production.config.js\"\n}\n```\n\n## 3、说个vue的 外链css的问题\n> 再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css\n> 于是我import 'xxx.less' --->报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的\n> 后来我才知道 vue中 外链css 要卸载style标签内部 然后@import 'xxx.less'\n> 这样就没问题了~\n> 还有个如果你想在页面的style中使用less或sass要怎么办呢\n> 给style加个 lang=\"less\"就可以啦\n\n<!--more-->\n## 4、对于github一直要输入账户名密码问题\n> git config -- global user.name \"maimai123\"\n> git config --global user.email maimaixxx@163.com\n> git config -- global credential.helperstore\n\n## 5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\n> 路由中换个模式就好了\n> 那么怎么写呢 参考地址：[vue-router](http://router.vuejs.org/en/essentials/history-mode.html)\n\n<img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\" />\n\n## 6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\n```javascript\n  devServer:{ //配置服务器环境\n    colors:true,\n    historyApiFallback:true,\n    inline:true, //自动刷新\n    port:'1234', //修改端口号\n    host : '0.0.0.0',\n    progress:true\n},\n\n```\n\nThere are some additional options:\n\n--content-base <file/directory/url/port>: base path for the content.\n--quiet: don’t output anything to the console.\n--no-info: suppress boring information.\n--colors: add some colors to the output.\n--no-colors: don’t use colors in the output.\n--compress: use gzip compression.\n--host <hostname/ip>: hostname or IP. 0.0.0.0 binds to all hosts.\n--port <number>: port.\n--inline: embed the webpack-dev-server runtime into the bundle.\n--hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.\n--hot --inline also adds the webpack/hot/dev-server entry.\n--public: overrides the host and port used in --inline mode for the client (useful for a VM or Docker).\n--lazy: no watching, compiles on request (cannot be combined with --hot).\n--https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.\n--cert, --cacert, --key: Paths the certificate files.\n--open: opens the url in default browser (for webpack-dev-server versions > 2.0).\n--history-api-fallback: enables support for history API fallback.\n--client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.\n\n> 也可以写在package.json的start中。如：webpack-dev-server --devtool eval --progress --colors --inline --hot --content-base build --port1234\n> 但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,\n\n## 7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\n> 我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。\n> 我在actions、mutations和getters中都默认输出了，即：export default{ ... }, 而在store中还以\n> import * as actions from './actions'\n> 这种方法引入。。。简直作死啊~~\n> 以后你们可别犯这种傻错啊\n\n## 8、换了新电脑是 --air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\n> 真是一步一个坎啊 我先跟大家说一下 我把我的博客的挣个文件夹都从原来的电脑里copy了过来，很难想象我要是脑筋粗大一点没拷过来会是怎样\n> 我在github上新建了仓库，里面啥东西也没有 我是打算用来存放我的hexo源文件的。\n> 然后我下载了git、xcode、sourcetree等工具。废话有点多 别介意啊\n> 我先查了一下我git 安装完成没有 git --vertion看一下版本号有版本号就是安装完成了\n> 当然你首先要安装node。这个总不用我教了吧？\n> 在安装hexo -> npm install -g hexo-cli\n> 安装完也看一下安装了没 然后在命令里新建个ssh文件 命令->ssh-keygen -t rsa -C youremail@example.com(你的Github登录名)\n> 然后复制id_rsa.pub的内容并将其填入Github那边的key。\n> 安装完 sourcetree 之后你就可以点击新仓库 从url克隆，把你的新仓库复制来放进去，选好文件夹拖进你的hexo源文件\n> 最后提交一下就好啦~\n> 你试着在hexo源文件下打hexo s 看看有没有起本地服务吧~\n> 当然在此之前你需要npm install一下来安装依赖啦 :-D\n\n## 9、vue的小问题\n> vue图片地址为空会报错 所以需要先给图片要做一个判断->v-if\n> 地址为空的时候不渲染\n> Img 添加路径（循环取变量）时要加bind 即:src=“item.imgUrl”\n> href、id、disabled也是一样\n> 如果是添加行内样式则是:style=“{backgroundImage:’url(‘+list.url+’)’}”\n> 双引号单引号你就自己看吧 哈哈 毕竟我也是一脸懵逼\n\n## 10、移动端阻止回弹\n> 一些移动设备有缺省的touchmove行为，比如说经典的iOSoverscroll效果，\n> 当滚动超出了内容的界限时就引发视图反弹。\n> 这种做法在许多多点触控应用中会带来混乱，所以要禁用它。\n```javascript\n  document.body.addEventListener('touchmove',function(event){\n  event.preventDefault();\n  },false);\n```\n\n## 11、vue props传递数据\n> 众所周知，vue中的props和react中的props一样，都是用来父子组件通信用的\n> 在父组件中传递给子组件 只需要在子组件上加要传递的数据 ps:注意动态的要用v-bind/:哦~\n> 还有个字面量语法问题 <comp some-prop=\"1\"></comp> 这样传递的是一个字符串\n> 如果想要传递number，也要使用v-bind\n> 在子组件中用props接收即可\n> 那么如果在子组件中调用父组件的方法呢？ 也是可以的\n> vue 使用v-on绑定自定义事件\n> 使用 \\$on(eventName) 监听事件\n> 使用 \\$emit(eventName) 触发事件\n> 父组件在使用子组件的地方直接用 v-on 来监听子组件触发的事件，直接在模板里绑定\n> 如：\n```javascript\n<button-counter @increment=\"incrementTotal\"></button-counter>\n```\n> incrementTotal是父组件的方法 increment是传递给子组件的props名字\n> 子组件用 this.$emit('increment') 调用\n\n\n\n\n## 12、请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"small","published":1,"updated":"2020-02-26T10:28:33.197Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0zg001d000m80b456aj","content":"<p>初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h2 id=\"1、emmet在jsx中不能使用的情况\"><a href=\"#1、emmet在jsx中不能使用的情况\" class=\"headerlink\" title=\"1、emmet在jsx中不能使用的情况\"></a>1、emmet在jsx中不能使用的情况</h2><blockquote>\n<p>大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet<br>我用的是atom编辑器。<br>首先，当然是打开atom 安装emmet插件 打开设置-&gt;key bindings -&gt; 点击 用户键盘映射 -&gt;修改文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'atom-text-editor[data-grammar=\"source js jsx vue\"]'</span>:</span><br><span class=\"line\">  <span class=\"string\">'F12'</span>:<span class=\"string\">'atom-html-preview:toggle'</span>,</span><br><span class=\"line\">  <span class=\"string\">'tab'</span>: <span class=\"string\">'emmet:expand-abbreviation-with-tab'</span></span><br></pre></td></tr></table></figure><br>这样就ok啦~ 尽情的使用emmet吧！</p>\n</blockquote>\n<h2 id=\"2、一个关于webpack的问题。\"><a href=\"#2、一个关于webpack的问题。\" class=\"headerlink\" title=\"2、一个关于webpack的问题。\"></a>2、一个关于webpack的问题。</h2><blockquote>\n<p>起服务以后，用localhost访问可以访问，<br>用具体ip 如：192.168.91.75:8080/index 却访问不到地址<br>这是啥问题呐(⊙o⊙)?<br>原来原来 只要在配置文件中加上 –host 0.0.0.0 就可以啦<br>具体在哪里加呢 答案就是在<strong>package.json</strong>中的start中啦~<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --progress --profile --colors --config webpack.production.config.js\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"3、说个vue的-外链css的问题\"><a href=\"#3、说个vue的-外链css的问题\" class=\"headerlink\" title=\"3、说个vue的 外链css的问题\"></a>3、说个vue的 外链css的问题</h2><blockquote>\n<p>再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css<br>于是我import ‘xxx.less’ —&gt;报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的<br>后来我才知道 vue中 外链css 要卸载style标签内部 然后@import ‘xxx.less’<br>这样就没问题了~<br>还有个如果你想在页面的style中使用less或sass要怎么办呢<br>给style加个 lang=”less”就可以啦</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"4、对于github一直要输入账户名密码问题\"><a href=\"#4、对于github一直要输入账户名密码问题\" class=\"headerlink\" title=\"4、对于github一直要输入账户名密码问题\"></a>4、对于github一直要输入账户名密码问题</h2><blockquote>\n<p>git config – global user.name “maimai123”<br>git config –global user.email <a href=\"mailto:maimaixxx@163.com\">maimaixxx@163.com</a><br>git config – global credential.helperstore</p>\n</blockquote>\n<h2 id=\"5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\"><a href=\"#5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\" class=\"headerlink\" title=\"5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\"></a>5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，</h2><blockquote>\n<p>路由中换个模式就好了<br>那么怎么写呢 参考地址：<a href=\"http://router.vuejs.org/en/essentials/history-mode.html\" target=\"_blank\" rel=\"noopener\">vue-router</a></p>\n</blockquote>\n<p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\" /></p>\n<h2 id=\"6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\"><a href=\"#6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\" class=\"headerlink\" title=\"6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\"></a>6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  devServer:&#123; <span class=\"comment\">//配置服务器环境</span></span><br><span class=\"line\">    colors:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    historyApiFallback:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    inline:<span class=\"literal\">true</span>, <span class=\"comment\">//自动刷新</span></span><br><span class=\"line\">    port:<span class=\"string\">'1234'</span>, <span class=\"comment\">//修改端口号</span></span><br><span class=\"line\">    host : <span class=\"string\">'0.0.0.0'</span>,</span><br><span class=\"line\">    progress:<span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>There are some additional options:</p>\n<p>–content-base &lt;file/directory/url/port&gt;: base path for the content.<br>–quiet: don’t output anything to the console.<br>–no-info: suppress boring information.<br>–colors: add some colors to the output.<br>–no-colors: don’t use colors in the output.<br>–compress: use gzip compression.<br>–host &lt;hostname/ip&gt;: hostname or IP. 0.0.0.0 binds to all hosts.<br>–port <number>: port.<br>–inline: embed the webpack-dev-server runtime into the bundle.<br>–hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.<br>–hot –inline also adds the webpack/hot/dev-server entry.<br>–public: overrides the host and port used in –inline mode for the client (useful for a VM or Docker).<br>–lazy: no watching, compiles on request (cannot be combined with –hot).<br>–https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.<br>–cert, –cacert, –key: Paths the certificate files.<br>–open: opens the url in default browser (for webpack-dev-server versions &gt; 2.0).<br>–history-api-fallback: enables support for history API fallback.<br>–client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.</p>\n<blockquote>\n<p>也可以写在package.json的start中。如：webpack-dev-server –devtool eval –progress –colors –inline –hot –content-base build –port1234<br>但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,</p>\n</blockquote>\n<h2 id=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\"><a href=\"#7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\" class=\"headerlink\" title=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\"></a>7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法</h2><blockquote>\n<p>我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。<br>我在actions、mutations和getters中都默认输出了，即：export default{ … }, 而在store中还以<br>import * as actions from ‘./actions’<br>这种方法引入。。。简直作死啊~~<br>以后你们可别犯这种傻错啊</p>\n</blockquote>\n<h2 id=\"8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\"><a href=\"#8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\" class=\"headerlink\" title=\"8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\"></a>8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学</h2><blockquote>\n<p>真是一步一个坎啊 我先跟大家说一下 我把我的博客的挣个文件夹都从原来的电脑里copy了过来，很难想象我要是脑筋粗大一点没拷过来会是怎样<br>我在github上新建了仓库，里面啥东西也没有 我是打算用来存放我的hexo源文件的。<br>然后我下载了git、xcode、sourcetree等工具。废话有点多 别介意啊<br>我先查了一下我git 安装完成没有 git –vertion看一下版本号有版本号就是安装完成了<br>当然你首先要安装node。这个总不用我教了吧？<br>在安装hexo -&gt; npm install -g hexo-cli<br>安装完也看一下安装了没 然后在命令里新建个ssh文件 命令-&gt;ssh-keygen -t rsa -C <a href=\"mailto:youremail@example.com\">youremail@example.com</a>(你的Github登录名)<br>然后复制id_rsa.pub的内容并将其填入Github那边的key。<br>安装完 sourcetree 之后你就可以点击新仓库 从url克隆，把你的新仓库复制来放进去，选好文件夹拖进你的hexo源文件<br>最后提交一下就好啦~<br>你试着在hexo源文件下打hexo s 看看有没有起本地服务吧~<br>当然在此之前你需要npm install一下来安装依赖啦 :-D</p>\n</blockquote>\n<h2 id=\"9、vue的小问题\"><a href=\"#9、vue的小问题\" class=\"headerlink\" title=\"9、vue的小问题\"></a>9、vue的小问题</h2><blockquote>\n<p>vue图片地址为空会报错 所以需要先给图片要做一个判断-&gt;v-if<br>地址为空的时候不渲染<br>Img 添加路径（循环取变量）时要加bind 即:src=“item.imgUrl”<br>href、id、disabled也是一样<br>如果是添加行内样式则是:style=“{backgroundImage:’url(‘+list.url+’)’}”<br>双引号单引号你就自己看吧 哈哈 毕竟我也是一脸懵逼</p>\n</blockquote>\n<h2 id=\"10、移动端阻止回弹\"><a href=\"#10、移动端阻止回弹\" class=\"headerlink\" title=\"10、移动端阻止回弹\"></a>10、移动端阻止回弹</h2><blockquote>\n<p>一些移动设备有缺省的touchmove行为，比如说经典的iOSoverscroll效果，<br>当滚动超出了内容的界限时就引发视图反弹。<br>这种做法在许多多点触控应用中会带来混乱，所以要禁用它。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'touchmove'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">event.preventDefault();</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"11、vue-props传递数据\"><a href=\"#11、vue-props传递数据\" class=\"headerlink\" title=\"11、vue props传递数据\"></a>11、vue props传递数据</h2><blockquote>\n<p>众所周知，vue中的props和react中的props一样，都是用来父子组件通信用的<br>在父组件中传递给子组件 只需要在子组件上加要传递的数据 ps:注意动态的要用v-bind/:哦~<br>还有个字面量语法问题 <comp some-prop=\"1\"></comp> 这样传递的是一个字符串<br>如果想要传递number，也要使用v-bind<br>在子组件中用props接收即可<br>那么如果在子组件中调用父组件的方法呢？ 也是可以的<br>vue 使用v-on绑定自定义事件<br>使用 \\$on(eventName) 监听事件<br>使用 \\$emit(eventName) 触发事件<br>父组件在使用子组件的地方直接用 v-on 来监听子组件触发的事件，直接在模板里绑定<br>如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button-counter @increment=<span class=\"string\">\"incrementTotal\"</span>&gt;&lt;<span class=\"regexp\">/button-counter&gt;</span></span><br></pre></td></tr></table></figure><br>incrementTotal是父组件的方法 increment是传递给子组件的props名字<br>子组件用 this.$emit(‘increment’) 调用</p>\n</blockquote>\n<h2 id=\"12、请耐心等待，麦麦会不定期更新哒\"><a href=\"#12、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"12、请耐心等待，麦麦会不定期更新哒~\"></a>12、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"<p>初学vue或其他各种构建工具时会遇到各种问题，没错！这篇文章又是来整理这些愚蠢的问题的~ :-D</p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h2 id=\"1、emmet在jsx中不能使用的情况\"><a href=\"#1、emmet在jsx中不能使用的情况\" class=\"headerlink\" title=\"1、emmet在jsx中不能使用的情况\"></a>1、emmet在jsx中不能使用的情况</h2><blockquote>\n<p>大家一定深受其害吧？不怕不怕 麦麦这就告诉你怎么才能在jsx中使用emmet<br>我用的是atom编辑器。<br>首先，当然是打开atom 安装emmet插件 打开设置-&gt;key bindings -&gt; 点击 用户键盘映射 -&gt;修改文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'atom-text-editor[data-grammar=\"source js jsx vue\"]'</span>:</span><br><span class=\"line\">  <span class=\"string\">'F12'</span>:<span class=\"string\">'atom-html-preview:toggle'</span>,</span><br><span class=\"line\">  <span class=\"string\">'tab'</span>: <span class=\"string\">'emmet:expand-abbreviation-with-tab'</span></span><br></pre></td></tr></table></figure><br>这样就ok啦~ 尽情的使用emmet吧！</p>\n</blockquote>\n<h2 id=\"2、一个关于webpack的问题。\"><a href=\"#2、一个关于webpack的问题。\" class=\"headerlink\" title=\"2、一个关于webpack的问题。\"></a>2、一个关于webpack的问题。</h2><blockquote>\n<p>起服务以后，用localhost访问可以访问，<br>用具体ip 如：192.168.91.75:8080/index 却访问不到地址<br>这是啥问题呐(⊙o⊙)?<br>原来原来 只要在配置文件中加上 –host 0.0.0.0 就可以啦<br>具体在哪里加呢 答案就是在<strong>package.json</strong>中的start中啦~<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"webpack-dev-server --progress --profile --colors --hot --host 0.0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --progress --profile --colors --config webpack.production.config.js\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"3、说个vue的-外链css的问题\"><a href=\"#3、说个vue的-外链css的问题\" class=\"headerlink\" title=\"3、说个vue的 外链css的问题\"></a>3、说个vue的 外链css的问题</h2><blockquote>\n<p>再写vue的时候，虽说在页面内部可以写style来增加样式，但还是推荐外链css<br>于是我import ‘xxx.less’ —&gt;报错！！！我简直一个大写的懵逼啊 因为我在react中都是这么引入css的<br>后来我才知道 vue中 外链css 要卸载style标签内部 然后@import ‘xxx.less’<br>这样就没问题了~<br>还有个如果你想在页面的style中使用less或sass要怎么办呢<br>给style加个 lang=”less”就可以啦</p>\n</blockquote>","more":"<h2 id=\"4、对于github一直要输入账户名密码问题\"><a href=\"#4、对于github一直要输入账户名密码问题\" class=\"headerlink\" title=\"4、对于github一直要输入账户名密码问题\"></a>4、对于github一直要输入账户名密码问题</h2><blockquote>\n<p>git config – global user.name “maimai123”<br>git config –global user.email <a href=\"mailto:maimaixxx@163.com\">maimaixxx@163.com</a><br>git config – global credential.helperstore</p>\n</blockquote>\n<h2 id=\"5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\"><a href=\"#5、vue中路由在浏览器地址栏显示-的问题-与react-router中的hashHistory-browserHistory-一样的道理，\" class=\"headerlink\" title=\"5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，\"></a>5、vue中路由在浏览器地址栏显示/#/的问题 与react-router中的hashHistory browserHistory 一样的道理，</h2><blockquote>\n<p>路由中换个模式就好了<br>那么怎么写呢 参考地址：<a href=\"http://router.vuejs.org/en/essentials/history-mode.html\" target=\"_blank\" rel=\"noopener\">vue-router</a></p>\n</blockquote>\n<p><img src=\"https://github.com/maimai123/maimai123.github.io/blob/master/img/router.png?raw=true\" /></p>\n<h2 id=\"6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\"><a href=\"#6、vue-cli-webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack-config-json中的-devServer-中，写法如下：\" class=\"headerlink\" title=\"6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：\"></a>6、vue-cli+webpack搭建脚手架非常容易，但端口是默认为8080，在react时改变端口一般写在webpack.config.json中的 devServer 中，写法如下：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  devServer:&#123; <span class=\"comment\">//配置服务器环境</span></span><br><span class=\"line\">    colors:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    historyApiFallback:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    inline:<span class=\"literal\">true</span>, <span class=\"comment\">//自动刷新</span></span><br><span class=\"line\">    port:<span class=\"string\">'1234'</span>, <span class=\"comment\">//修改端口号</span></span><br><span class=\"line\">    host : <span class=\"string\">'0.0.0.0'</span>,</span><br><span class=\"line\">    progress:<span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>There are some additional options:</p>\n<p>–content-base &lt;file/directory/url/port&gt;: base path for the content.<br>–quiet: don’t output anything to the console.<br>–no-info: suppress boring information.<br>–colors: add some colors to the output.<br>–no-colors: don’t use colors in the output.<br>–compress: use gzip compression.<br>–host &lt;hostname/ip&gt;: hostname or IP. 0.0.0.0 binds to all hosts.<br>–port <number>: port.<br>–inline: embed the webpack-dev-server runtime into the bundle.<br>–hot: adds the HotModuleReplacementPlugin and switch the server to hot mode. Note: make sure you don’t add HotModuleReplacementPlugin twice.<br>–hot –inline also adds the webpack/hot/dev-server entry.<br>–public: overrides the host and port used in –inline mode for the client (useful for a VM or Docker).<br>–lazy: no watching, compiles on request (cannot be combined with –hot).<br>–https: serves webpack-dev-server over HTTPS Protocol. Includes a self-signed certificate that is used when serving the requests.<br>–cert, –cacert, –key: Paths the certificate files.<br>–open: opens the url in default browser (for webpack-dev-server versions &gt; 2.0).<br>–history-api-fallback: enables support for history API fallback.<br>–client-log-level: controls the console log messages shown in the browser. Use error, warning, info or none.</p>\n<blockquote>\n<p>也可以写在package.json的start中。如：webpack-dev-server –devtool eval –progress –colors –inline –hot –content-base build –port1234<br>但vue-cli中如果希望修改端口号，则进入~\\config\\index.js，修改dev下的port为希望启动的端口号。例如: port: 1234,</p>\n</blockquote>\n<h2 id=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\"><a href=\"#7、在学习vuex的时候，我曾遇到过一个愚蠢的问题-【捂脸】就是在dispatch-action中的方法时显示找不到这个方法\" class=\"headerlink\" title=\"7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法\"></a>7、在学习vuex的时候，我曾遇到过一个愚蠢的问题 【捂脸】就是在dispatch action中的方法时显示找不到这个方法</h2><blockquote>\n<p>我左看右看没找出问题在哪，最后求救师傅，才知道问题所在。<br>我在actions、mutations和getters中都默认输出了，即：export default{ … }, 而在store中还以<br>import * as actions from ‘./actions’<br>这种方法引入。。。简直作死啊~~<br>以后你们可别犯这种傻错啊</p>\n</blockquote>\n<h2 id=\"8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\"><a href=\"#8、换了新电脑是-–air-用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯-不过在努力学\" class=\"headerlink\" title=\"8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学\"></a>8、换了新电脑是 –air 用不惯，以前windows下个git就能完成的事现在需要安装一个xcode、sourcetree等搞得我用不惯 不过在努力学</h2><blockquote>\n<p>真是一步一个坎啊 我先跟大家说一下 我把我的博客的挣个文件夹都从原来的电脑里copy了过来，很难想象我要是脑筋粗大一点没拷过来会是怎样<br>我在github上新建了仓库，里面啥东西也没有 我是打算用来存放我的hexo源文件的。<br>然后我下载了git、xcode、sourcetree等工具。废话有点多 别介意啊<br>我先查了一下我git 安装完成没有 git –vertion看一下版本号有版本号就是安装完成了<br>当然你首先要安装node。这个总不用我教了吧？<br>在安装hexo -&gt; npm install -g hexo-cli<br>安装完也看一下安装了没 然后在命令里新建个ssh文件 命令-&gt;ssh-keygen -t rsa -C <a href=\"mailto:youremail@example.com\">youremail@example.com</a>(你的Github登录名)<br>然后复制id_rsa.pub的内容并将其填入Github那边的key。<br>安装完 sourcetree 之后你就可以点击新仓库 从url克隆，把你的新仓库复制来放进去，选好文件夹拖进你的hexo源文件<br>最后提交一下就好啦~<br>你试着在hexo源文件下打hexo s 看看有没有起本地服务吧~<br>当然在此之前你需要npm install一下来安装依赖啦 :-D</p>\n</blockquote>\n<h2 id=\"9、vue的小问题\"><a href=\"#9、vue的小问题\" class=\"headerlink\" title=\"9、vue的小问题\"></a>9、vue的小问题</h2><blockquote>\n<p>vue图片地址为空会报错 所以需要先给图片要做一个判断-&gt;v-if<br>地址为空的时候不渲染<br>Img 添加路径（循环取变量）时要加bind 即:src=“item.imgUrl”<br>href、id、disabled也是一样<br>如果是添加行内样式则是:style=“{backgroundImage:’url(‘+list.url+’)’}”<br>双引号单引号你就自己看吧 哈哈 毕竟我也是一脸懵逼</p>\n</blockquote>\n<h2 id=\"10、移动端阻止回弹\"><a href=\"#10、移动端阻止回弹\" class=\"headerlink\" title=\"10、移动端阻止回弹\"></a>10、移动端阻止回弹</h2><blockquote>\n<p>一些移动设备有缺省的touchmove行为，比如说经典的iOSoverscroll效果，<br>当滚动超出了内容的界限时就引发视图反弹。<br>这种做法在许多多点触控应用中会带来混乱，所以要禁用它。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'touchmove'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">event.preventDefault();</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"11、vue-props传递数据\"><a href=\"#11、vue-props传递数据\" class=\"headerlink\" title=\"11、vue props传递数据\"></a>11、vue props传递数据</h2><blockquote>\n<p>众所周知，vue中的props和react中的props一样，都是用来父子组件通信用的<br>在父组件中传递给子组件 只需要在子组件上加要传递的数据 ps:注意动态的要用v-bind/:哦~<br>还有个字面量语法问题 <comp some-prop=\"1\"></comp> 这样传递的是一个字符串<br>如果想要传递number，也要使用v-bind<br>在子组件中用props接收即可<br>那么如果在子组件中调用父组件的方法呢？ 也是可以的<br>vue 使用v-on绑定自定义事件<br>使用 \\$on(eventName) 监听事件<br>使用 \\$emit(eventName) 触发事件<br>父组件在使用子组件的地方直接用 v-on 来监听子组件触发的事件，直接在模板里绑定<br>如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button-counter @increment=<span class=\"string\">\"incrementTotal\"</span>&gt;&lt;<span class=\"regexp\">/button-counter&gt;</span></span><br></pre></td></tr></table></figure><br>incrementTotal是父组件的方法 increment是传递给子组件的props名字<br>子组件用 this.$emit(‘increment’) 调用</p>\n</blockquote>\n<h2 id=\"12、请耐心等待，麦麦会不定期更新哒\"><a href=\"#12、请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"12、请耐心等待，麦麦会不定期更新哒~\"></a>12、请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>"},{"title":"H5页面接入微信授权登录和分享","date":"2020-05-08T16:00:00.000Z","_content":"h5 在微信中接入授权分享等需要引入微信的jssdk，[地址在这](https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html)\n<font size=1>**如有转载，请注明出处。**</font>\n## 接入微信授权\n## 1、分**静默授权**和**非静默授权**\n\n> 静默授权： scope=snsapi_base，没有弹窗，只能获取用户的openId。\n> 非静默授权： scope=snsapi_userinfo，有弹框弹出需要用户手动点击确认授权。可以获取openId，用户的头像、昵称等\n\n\n## 请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/wechat.md","raw":"---\ntitle: H5页面接入微信授权登录和分享\ndate: 2020-05-09\ntags: wechat\n---\nh5 在微信中接入授权分享等需要引入微信的jssdk，[地址在这](https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html)\n<font size=1>**如有转载，请注明出处。**</font>\n## 接入微信授权\n## 1、分**静默授权**和**非静默授权**\n\n> 静默授权： scope=snsapi_base，没有弹窗，只能获取用户的openId。\n> 非静默授权： scope=snsapi_userinfo，有弹框弹出需要用户手动点击确认授权。可以获取openId，用户的头像、昵称等\n\n\n## 请耐心等待，麦麦会不定期更新哒~\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"wechat","published":1,"updated":"2021-05-14T07:09:56.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoo2u0zh001g000ma6461yn5","content":"<p>h5 在微信中接入授权分享等需要引入微信的jssdk，<a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html\" target=\"_blank\" rel=\"noopener\">地址在这</a></p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"接入微信授权\"><a href=\"#接入微信授权\" class=\"headerlink\" title=\"接入微信授权\"></a>接入微信授权</h2><h2 id=\"1、分静默授权和非静默授权\"><a href=\"#1、分静默授权和非静默授权\" class=\"headerlink\" title=\"1、分静默授权和非静默授权\"></a>1、分<strong>静默授权</strong>和<strong>非静默授权</strong></h2><blockquote>\n<p>静默授权： scope=snsapi_base，没有弹窗，只能获取用户的openId。<br>非静默授权： scope=snsapi_userinfo，有弹框弹出需要用户手动点击确认授权。可以获取openId，用户的头像、昵称等</p>\n</blockquote>\n<h2 id=\"请耐心等待，麦麦会不定期更新哒\"><a href=\"#请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"请耐心等待，麦麦会不定期更新哒~\"></a>请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>h5 在微信中接入授权分享等需要引入微信的jssdk，<a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html\" target=\"_blank\" rel=\"noopener\">地址在这</a></p>\n<p><font size=1><strong>如有转载，请注明出处。</strong></font></p>\n<h2 id=\"接入微信授权\"><a href=\"#接入微信授权\" class=\"headerlink\" title=\"接入微信授权\"></a>接入微信授权</h2><h2 id=\"1、分静默授权和非静默授权\"><a href=\"#1、分静默授权和非静默授权\" class=\"headerlink\" title=\"1、分静默授权和非静默授权\"></a>1、分<strong>静默授权</strong>和<strong>非静默授权</strong></h2><blockquote>\n<p>静默授权： scope=snsapi_base，没有弹窗，只能获取用户的openId。<br>非静默授权： scope=snsapi_userinfo，有弹框弹出需要用户手动点击确认授权。可以获取openId，用户的头像、昵称等</p>\n</blockquote>\n<h2 id=\"请耐心等待，麦麦会不定期更新哒\"><a href=\"#请耐心等待，麦麦会不定期更新哒\" class=\"headerlink\" title=\"请耐心等待，麦麦会不定期更新哒~\"></a>请耐心等待，麦麦会不定期更新哒~</h2><p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"},{"title":"hexo博客搭建","date":"2018-05-06T16:00:00.000Z","_content":"<font size=1>**如有转载，请注明出处。**</font>\n\n已经在D盘D:\\git\\hexo下面装好了hexo 只需要\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\" />\n输入 hexo generate 回车\n        hexo server就可以启动了\n本地访问localhost:4000可以访问了\n不知道github上 ，登录github账号\n\n在hexo的安装路径D:\\git\\hexo下找到_config.yml\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\" />\ndeploy:\n  type: git\n  repository: git@github.com:maimai123/maimai123.github.io.git\n  branch: master\n\n\n先按ctrl+c停止本地的再\n输入 hexo generate 回车\n        hexo deploy就可以部署了\n\n\n\n如果部署失败 则可能是没有设置ssh\nhttp://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\n\nssh内容在C:\\Users\\Administrator\\.ssh下\n设置完以后要查看邮箱\nssh密码为空\n部署到github上\nnpm install hexo-deployer-git --save\nhexo  generate\n hexo deploy\nbugs\n在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了\n\n同步到github上\nhexo s -g\nhexo d -g\n\n#主题丢失问题\n> 我发现我的yilia主题push到github上老丢失，下下来没有了\n> 执行\n* git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\n_config.yml设置如下\n```javascript\n# Header\n\nmenu:\n  主页: /\n  所有文章: /archives/\n\n# SubNav\nsubnav:\n  github: \"https://github.com/maimai123\"\n  weibo: \"http://weibo.com/marsmaimai\"\n  zhihu: \"https://www.zhihu.com/people/yu-ya-fei-27/activities\"\n  bilibili: \"https://space.bilibili.com/57022459?from=search&seid=2536533383147677614\"\n  mail: \"mailto:15867193547@163.com\"\n  #qq: \"#\"\n  #weixin: \"#\"\n  #jianshu: \"#\"\n  #douban: \"#\"\n  #segmentfault: \"#\"\n  #acfun: \"#\"\n  #facebook: \"#\"\n  #google: \"#\"\n  #twitter: \"#\"\n  #linkedin: \"#\"\n\nrss: /atom.xml\n\n# 是否需要修改 root 路径\n# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，\n# 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。\nroot: /\n\n# Content\n\n# 文章太长，截断按钮文字\nexcerpt_link: more\n# 文章卡片右下角常驻链接，不需要请设置为false\nshow_all_link: '展开全文'\n# 数学公式\nmathjax: false\n# 是否在新窗口打开链接\nopen_in_new: false\n\n# 打赏\n# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏\nreward_type: 2\n# 打赏wording\nreward_wording: '谢谢你请我吃糖果'\n# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg\nalipay: https://github.com/maimai123/hexo-source/blob/master/source/img/zhifu.jpg?raw=true\n# 微信二维码图片地址\nweixin:\n\n# 目录\n# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录\ntoc: 1\n# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false\ntoc_hide_index: true\n# 目录为空时的提示\ntoc_empty_wording: '目录，不存在的…'\n\n# 是否有快速回到顶部的按钮\ntop: true\n\n# Miscellaneous\nbaidu_analytics: ''\ngoogle_analytics: ''\nfavicon: /favicon.png\n\n#你的头像url\navatar: https://github.com/maimai123/hexo-source/blob/master/public/img/avatar.jpg\n\n#是否开启分享\nshare_jia: true\n\n#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment\n#不需要使用某项，直接设置值为false，或注释掉\n#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/\n\n#1、多说\nduoshuo: false\n\n#2、网易云跟帖\nwangyiyun: true\n\n#3、畅言\nchangyan_appid: false\nchangyan_conf: false\n\n#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的\ndisqus: false\n\n#5、Gitment\ngitment_owner: false      #你的 GitHub ID\ngitment_repo: ''          #存储评论的 repo\ngitment_oauth:\n  client_id: ''           #client ID\n  client_secret: ''       #client secret\n\n# 样式定制 - 一般不需要修改，除非有很强的定制欲望…\nstyle:\n  # 头像上面的背景颜色\n  header: '#4d4d4d'\n  # 右滑板块背景\n  slider: 'linear-gradient(200deg,#a0cfe4,#e8c37e)'\n\n# slider的设置\nslider:\n  showTags: true\n\n# 智能菜单\n# 如不需要，将该对应项置为false\n# 比如\n#smart_menu:\n#  friends: false\nsmart_menu:\n  innerArchive: '点我搜文章'\n  friends: '友链'\n  aboutme: '关于我'\n\nfriends:\n  小雷的博客: http://www.leridy.pw\n  麦麦的博客: https://www.marsmai.club/\n  李逵的博客: https://www.lcckup.com\n\naboutme: 很惭愧<br><br>很久没写博客了<br>谢谢你还能来逛逛\n\n```\n\n\nMore info: [麦麦](maimai123.github.io)\n","source":"_posts/yyf.md","raw":"---\ntitle: hexo博客搭建\ndate: 2018-05-07\ntags: hexo\n---\n<font size=1>**如有转载，请注明出处。**</font>\n\n已经在D盘D:\\git\\hexo下面装好了hexo 只需要\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\" />\n输入 hexo generate 回车\n        hexo server就可以启动了\n本地访问localhost:4000可以访问了\n不知道github上 ，登录github账号\n\n在hexo的安装路径D:\\git\\hexo下找到_config.yml\n<img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\" />\ndeploy:\n  type: git\n  repository: git@github.com:maimai123/maimai123.github.io.git\n  branch: master\n\n\n先按ctrl+c停止本地的再\n输入 hexo generate 回车\n        hexo deploy就可以部署了\n\n\n\n如果部署失败 则可能是没有设置ssh\nhttp://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\n\nssh内容在C:\\Users\\Administrator\\.ssh下\n设置完以后要查看邮箱\nssh密码为空\n部署到github上\nnpm install hexo-deployer-git --save\nhexo  generate\n hexo deploy\nbugs\n在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了\n\n同步到github上\nhexo s -g\nhexo d -g\n\n#主题丢失问题\n> 我发现我的yilia主题push到github上老丢失，下下来没有了\n> 执行\n* git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\n_config.yml设置如下\n```javascript\n# Header\n\nmenu:\n  主页: /\n  所有文章: /archives/\n\n# SubNav\nsubnav:\n  github: \"https://github.com/maimai123\"\n  weibo: \"http://weibo.com/marsmaimai\"\n  zhihu: \"https://www.zhihu.com/people/yu-ya-fei-27/activities\"\n  bilibili: \"https://space.bilibili.com/57022459?from=search&seid=2536533383147677614\"\n  mail: \"mailto:15867193547@163.com\"\n  #qq: \"#\"\n  #weixin: \"#\"\n  #jianshu: \"#\"\n  #douban: \"#\"\n  #segmentfault: \"#\"\n  #acfun: \"#\"\n  #facebook: \"#\"\n  #google: \"#\"\n  #twitter: \"#\"\n  #linkedin: \"#\"\n\nrss: /atom.xml\n\n# 是否需要修改 root 路径\n# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，\n# 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。\nroot: /\n\n# Content\n\n# 文章太长，截断按钮文字\nexcerpt_link: more\n# 文章卡片右下角常驻链接，不需要请设置为false\nshow_all_link: '展开全文'\n# 数学公式\nmathjax: false\n# 是否在新窗口打开链接\nopen_in_new: false\n\n# 打赏\n# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏\nreward_type: 2\n# 打赏wording\nreward_wording: '谢谢你请我吃糖果'\n# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg\nalipay: https://github.com/maimai123/hexo-source/blob/master/source/img/zhifu.jpg?raw=true\n# 微信二维码图片地址\nweixin:\n\n# 目录\n# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录\ntoc: 1\n# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false\ntoc_hide_index: true\n# 目录为空时的提示\ntoc_empty_wording: '目录，不存在的…'\n\n# 是否有快速回到顶部的按钮\ntop: true\n\n# Miscellaneous\nbaidu_analytics: ''\ngoogle_analytics: ''\nfavicon: /favicon.png\n\n#你的头像url\navatar: https://github.com/maimai123/hexo-source/blob/master/public/img/avatar.jpg\n\n#是否开启分享\nshare_jia: true\n\n#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment\n#不需要使用某项，直接设置值为false，或注释掉\n#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/\n\n#1、多说\nduoshuo: false\n\n#2、网易云跟帖\nwangyiyun: true\n\n#3、畅言\nchangyan_appid: false\nchangyan_conf: false\n\n#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的\ndisqus: false\n\n#5、Gitment\ngitment_owner: false      #你的 GitHub ID\ngitment_repo: ''          #存储评论的 repo\ngitment_oauth:\n  client_id: ''           #client ID\n  client_secret: ''       #client secret\n\n# 样式定制 - 一般不需要修改，除非有很强的定制欲望…\nstyle:\n  # 头像上面的背景颜色\n  header: '#4d4d4d'\n  # 右滑板块背景\n  slider: 'linear-gradient(200deg,#a0cfe4,#e8c37e)'\n\n# slider的设置\nslider:\n  showTags: true\n\n# 智能菜单\n# 如不需要，将该对应项置为false\n# 比如\n#smart_menu:\n#  friends: false\nsmart_menu:\n  innerArchive: '点我搜文章'\n  friends: '友链'\n  aboutme: '关于我'\n\nfriends:\n  小雷的博客: http://www.leridy.pw\n  麦麦的博客: https://www.marsmai.club/\n  李逵的博客: https://www.lcckup.com\n\naboutme: 很惭愧<br><br>很久没写博客了<br>谢谢你还能来逛逛\n\n```\n\n\nMore info: [麦麦](maimai123.github.io)\n","slug":"yyf","published":1,"updated":"2022-01-16T04:44:37.729Z","_id":"ckoo2u0zi001i000mfcobg46b","comments":1,"layout":"post","photos":[],"link":"","content":"<font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<p>已经在D盘D:\\git\\hexo下面装好了hexo 只需要<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\" /><br>输入 hexo generate 回车<br>        hexo server就可以启动了<br>本地访问localhost:4000可以访问了<br>不知道github上 ，登录github账号</p>\n<p>在hexo的安装路径D:\\git\\hexo下找到_config.yml<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\" /><br>deploy:<br>  type: git<br>  repository: <a href=\"mailto:git@github.com\">git@github.com</a>:maimai123/maimai123.github.io.git<br>  branch: master</p>\n<p>先按ctrl+c停止本地的再<br>输入 hexo generate 回车<br>        hexo deploy就可以部署了</p>\n<p>如果部署失败 则可能是没有设置ssh<br><a href=\"http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\" target=\"_blank\" rel=\"noopener\">http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html</a></p>\n<p>ssh内容在C:\\Users\\Administrator.ssh下<br>设置完以后要查看邮箱<br>ssh密码为空<br>部署到github上<br>npm install hexo-deployer-git –save<br>hexo  generate<br> hexo deploy<br>bugs<br>在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了</p>\n<p>同步到github上<br>hexo s -g<br>hexo d -g</p>\n<p>#主题丢失问题</p>\n<blockquote>\n<p>我发现我的yilia主题push到github上老丢失，下下来没有了<br>执行</p>\n<ul>\n<li>git clone <a href=\"https://github.com/litten/hexo-theme-yilia.git\" target=\"_blank\" rel=\"noopener\">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia</li>\n</ul>\n</blockquote>\n<p>_config.yml设置如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Header</span><br><span class=\"line\"></span><br><span class=\"line\">menu:</span><br><span class=\"line\">  主页: <span class=\"regexp\">/</span></span><br><span class=\"line\"><span class=\"regexp\">  所有文章: /</span>archives/</span><br><span class=\"line\"></span><br><span class=\"line\"># SubNav</span><br><span class=\"line\">subnav:</span><br><span class=\"line\">  github: <span class=\"string\">\"https://github.com/maimai123\"</span></span><br><span class=\"line\">  weibo: <span class=\"string\">\"http://weibo.com/marsmaimai\"</span></span><br><span class=\"line\">  zhihu: <span class=\"string\">\"https://www.zhihu.com/people/yu-ya-fei-27/activities\"</span></span><br><span class=\"line\">  bilibili: <span class=\"string\">\"https://space.bilibili.com/57022459?from=search&amp;seid=2536533383147677614\"</span></span><br><span class=\"line\">  mail: <span class=\"string\">\"mailto:15867193547@163.com\"</span></span><br><span class=\"line\">  #qq: \"#\"</span><br><span class=\"line\">  #weixin: \"#\"</span><br><span class=\"line\">  #jianshu: \"#\"</span><br><span class=\"line\">  #douban: \"#\"</span><br><span class=\"line\">  #segmentfault: \"#\"</span><br><span class=\"line\">  #acfun: \"#\"</span><br><span class=\"line\">  #facebook: \"#\"</span><br><span class=\"line\">  #google: \"#\"</span><br><span class=\"line\">  #twitter: \"#\"</span><br><span class=\"line\">  #linkedin: \"#\"</span><br><span class=\"line\"></span><br><span class=\"line\">rss: <span class=\"regexp\">/atom.xml</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># 是否需要修改 root 路径</span></span><br><span class=\"line\"><span class=\"regexp\"># 如果您的网站存放在子目录中，例如 http:/</span><span class=\"regexp\">/yoursite.com/</span>blog，</span><br><span class=\"line\"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span><br><span class=\"line\">root: <span class=\"regexp\">/</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># Content</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># 文章太长，截断按钮文字</span></span><br><span class=\"line\"><span class=\"regexp\">excerpt_link: more</span></span><br><span class=\"line\"><span class=\"regexp\"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class=\"line\"><span class=\"regexp\">show_all_link: '展开全文'</span></span><br><span class=\"line\"><span class=\"regexp\"># 数学公式</span></span><br><span class=\"line\"><span class=\"regexp\">mathjax: false</span></span><br><span class=\"line\"><span class=\"regexp\"># 是否在新窗口打开链接</span></span><br><span class=\"line\"><span class=\"regexp\">open_in_new: false</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># 打赏</span></span><br><span class=\"line\"><span class=\"regexp\"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class=\"line\"><span class=\"regexp\">reward_type: 2</span></span><br><span class=\"line\"><span class=\"regexp\"># 打赏wording</span></span><br><span class=\"line\"><span class=\"regexp\">reward_wording: '谢谢你请我吃糖果'</span></span><br><span class=\"line\"><span class=\"regexp\"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/</span>assets/img/alipay.jpg</span><br><span class=\"line\">alipay: https:<span class=\"comment\">//github.com/maimai123/hexo-source/blob/master/source/img/zhifu.jpg?raw=true</span></span><br><span class=\"line\"># 微信二维码图片地址</span><br><span class=\"line\">weixin:</span><br><span class=\"line\"></span><br><span class=\"line\"># 目录</span><br><span class=\"line\"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span><br><span class=\"line\">toc: <span class=\"number\">1</span></span><br><span class=\"line\"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span><br><span class=\"line\">toc_hide_index: <span class=\"literal\">true</span></span><br><span class=\"line\"># 目录为空时的提示</span><br><span class=\"line\">toc_empty_wording: <span class=\"string\">'目录，不存在的…'</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 是否有快速回到顶部的按钮</span><br><span class=\"line\">top: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># Miscellaneous</span><br><span class=\"line\">baidu_analytics: <span class=\"string\">''</span></span><br><span class=\"line\">google_analytics: <span class=\"string\">''</span></span><br><span class=\"line\">favicon: <span class=\"regexp\">/favicon.png</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#你的头像url</span></span><br><span class=\"line\"><span class=\"regexp\">avatar: https:/</span><span class=\"regexp\">/github.com/m</span>aimai123/hexo-source/blob/master/public/img/avatar.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">#是否开启分享</span><br><span class=\"line\">share_jia: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span><br><span class=\"line\">#不需要使用某项，直接设置值为false，或注释掉</span><br><span class=\"line\">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span><br><span class=\"line\"></span><br><span class=\"line\">#1、多说</span><br><span class=\"line\">duoshuo: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">#2、网易云跟帖</span><br><span class=\"line\">wangyiyun: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">#3、畅言</span><br><span class=\"line\">changyan_appid: <span class=\"literal\">false</span></span><br><span class=\"line\">changyan_conf: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span><br><span class=\"line\">disqus: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">#5、Gitment</span><br><span class=\"line\">gitment_owner: false      #你的 GitHub ID</span><br><span class=\"line\">gitment_repo: ''          #存储评论的 repo</span><br><span class=\"line\">gitment_oauth:</span><br><span class=\"line\">  client_id: ''           #client ID</span><br><span class=\"line\">  client_secret: ''       #client secret</span><br><span class=\"line\"></span><br><span class=\"line\"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span><br><span class=\"line\">style:</span><br><span class=\"line\">  # 头像上面的背景颜色</span><br><span class=\"line\">  header: <span class=\"string\">'#4d4d4d'</span></span><br><span class=\"line\">  # 右滑板块背景</span><br><span class=\"line\">  slider: <span class=\"string\">'linear-gradient(200deg,#a0cfe4,#e8c37e)'</span></span><br><span class=\"line\"></span><br><span class=\"line\"># slider的设置</span><br><span class=\"line\">slider:</span><br><span class=\"line\">  showTags: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 智能菜单</span><br><span class=\"line\"># 如不需要，将该对应项置为false</span><br><span class=\"line\"># 比如</span><br><span class=\"line\">#smart_menu:</span><br><span class=\"line\">#  friends: false</span><br><span class=\"line\">smart_menu:</span><br><span class=\"line\">  innerArchive: <span class=\"string\">'点我搜文章'</span></span><br><span class=\"line\">  friends: <span class=\"string\">'友链'</span></span><br><span class=\"line\">  aboutme: <span class=\"string\">'关于我'</span></span><br><span class=\"line\"></span><br><span class=\"line\">friends:</span><br><span class=\"line\">  小雷的博客: http:<span class=\"comment\">//www.leridy.pw</span></span><br><span class=\"line\">  麦麦的博客: https:<span class=\"comment\">//www.marsmai.club/</span></span><br><span class=\"line\">  李逵的博客: https:<span class=\"comment\">//www.lcckup.com</span></span><br><span class=\"line\"></span><br><span class=\"line\">aboutme: 很惭愧&lt;br&gt;&lt;br&gt;很久没写博客了&lt;br&gt;谢谢你还能来逛逛</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<p>已经在D盘D:\\git\\hexo下面装好了hexo 只需要<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/HbhW5r8SCO9iyIpUE8QS7pfUEqaVShMRHWfXyjCZLSY!/b/dI8AAAAAAAAA&bo=AAOoAAAAAAADB4k!&rf=viewer_4\" /><br>输入 hexo generate 回车<br>        hexo server就可以启动了<br>本地访问localhost:4000可以访问了<br>不知道github上 ，登录github账号</p>\n<p>在hexo的安装路径D:\\git\\hexo下找到_config.yml<br><img src=\"http://a3.qpic.cn/psb?/e780e515-0f41-4fd9-b116-910ac87c9a9d/K7wRFP5VSOigejKjT6vTaOVBvDqHBy1vRsN4TRTDdlw!/b/dA0BAAAAAAAA&bo=0QLWAAAAAAADByc!&rf=viewer_4\" /><br>deploy:<br>  type: git<br>  repository: <a href=\"mailto:git@github.com\">git@github.com</a>:maimai123/maimai123.github.io.git<br>  branch: master</p>\n<p>先按ctrl+c停止本地的再<br>输入 hexo generate 回车<br>        hexo deploy就可以部署了</p>\n<p>如果部署失败 则可能是没有设置ssh<br><a href=\"http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html\" target=\"_blank\" rel=\"noopener\">http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html</a></p>\n<p>ssh内容在C:\\Users\\Administrator.ssh下<br>设置完以后要查看邮箱<br>ssh密码为空<br>部署到github上<br>npm install hexo-deployer-git –save<br>hexo  generate<br> hexo deploy<br>bugs<br>在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了</p>\n<p>同步到github上<br>hexo s -g<br>hexo d -g</p>\n<p>#主题丢失问题</p>\n<blockquote>\n<p>我发现我的yilia主题push到github上老丢失，下下来没有了<br>执行</p>\n<ul>\n<li>git clone <a href=\"https://github.com/litten/hexo-theme-yilia.git\" target=\"_blank\" rel=\"noopener\">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia</li>\n</ul>\n</blockquote>\n<p>_config.yml设置如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Header</span><br><span class=\"line\"></span><br><span class=\"line\">menu:</span><br><span class=\"line\">  主页: <span class=\"regexp\">/</span></span><br><span class=\"line\"><span class=\"regexp\">  所有文章: /</span>archives/</span><br><span class=\"line\"></span><br><span class=\"line\"># SubNav</span><br><span class=\"line\">subnav:</span><br><span class=\"line\">  github: <span class=\"string\">\"https://github.com/maimai123\"</span></span><br><span class=\"line\">  weibo: <span class=\"string\">\"http://weibo.com/marsmaimai\"</span></span><br><span class=\"line\">  zhihu: <span class=\"string\">\"https://www.zhihu.com/people/yu-ya-fei-27/activities\"</span></span><br><span class=\"line\">  bilibili: <span class=\"string\">\"https://space.bilibili.com/57022459?from=search&amp;seid=2536533383147677614\"</span></span><br><span class=\"line\">  mail: <span class=\"string\">\"mailto:15867193547@163.com\"</span></span><br><span class=\"line\">  #qq: \"#\"</span><br><span class=\"line\">  #weixin: \"#\"</span><br><span class=\"line\">  #jianshu: \"#\"</span><br><span class=\"line\">  #douban: \"#\"</span><br><span class=\"line\">  #segmentfault: \"#\"</span><br><span class=\"line\">  #acfun: \"#\"</span><br><span class=\"line\">  #facebook: \"#\"</span><br><span class=\"line\">  #google: \"#\"</span><br><span class=\"line\">  #twitter: \"#\"</span><br><span class=\"line\">  #linkedin: \"#\"</span><br><span class=\"line\"></span><br><span class=\"line\">rss: <span class=\"regexp\">/atom.xml</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># 是否需要修改 root 路径</span></span><br><span class=\"line\"><span class=\"regexp\"># 如果您的网站存放在子目录中，例如 http:/</span><span class=\"regexp\">/yoursite.com/</span>blog，</span><br><span class=\"line\"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span><br><span class=\"line\">root: <span class=\"regexp\">/</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># Content</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># 文章太长，截断按钮文字</span></span><br><span class=\"line\"><span class=\"regexp\">excerpt_link: more</span></span><br><span class=\"line\"><span class=\"regexp\"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class=\"line\"><span class=\"regexp\">show_all_link: '展开全文'</span></span><br><span class=\"line\"><span class=\"regexp\"># 数学公式</span></span><br><span class=\"line\"><span class=\"regexp\">mathjax: false</span></span><br><span class=\"line\"><span class=\"regexp\"># 是否在新窗口打开链接</span></span><br><span class=\"line\"><span class=\"regexp\">open_in_new: false</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\"># 打赏</span></span><br><span class=\"line\"><span class=\"regexp\"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class=\"line\"><span class=\"regexp\">reward_type: 2</span></span><br><span class=\"line\"><span class=\"regexp\"># 打赏wording</span></span><br><span class=\"line\"><span class=\"regexp\">reward_wording: '谢谢你请我吃糖果'</span></span><br><span class=\"line\"><span class=\"regexp\"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/</span>assets/img/alipay.jpg</span><br><span class=\"line\">alipay: https:<span class=\"comment\">//github.com/maimai123/hexo-source/blob/master/source/img/zhifu.jpg?raw=true</span></span><br><span class=\"line\"># 微信二维码图片地址</span><br><span class=\"line\">weixin:</span><br><span class=\"line\"></span><br><span class=\"line\"># 目录</span><br><span class=\"line\"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span><br><span class=\"line\">toc: <span class=\"number\">1</span></span><br><span class=\"line\"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span><br><span class=\"line\">toc_hide_index: <span class=\"literal\">true</span></span><br><span class=\"line\"># 目录为空时的提示</span><br><span class=\"line\">toc_empty_wording: <span class=\"string\">'目录，不存在的…'</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 是否有快速回到顶部的按钮</span><br><span class=\"line\">top: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># Miscellaneous</span><br><span class=\"line\">baidu_analytics: <span class=\"string\">''</span></span><br><span class=\"line\">google_analytics: <span class=\"string\">''</span></span><br><span class=\"line\">favicon: <span class=\"regexp\">/favicon.png</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#你的头像url</span></span><br><span class=\"line\"><span class=\"regexp\">avatar: https:/</span><span class=\"regexp\">/github.com/m</span>aimai123/hexo-source/blob/master/public/img/avatar.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">#是否开启分享</span><br><span class=\"line\">share_jia: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span><br><span class=\"line\">#不需要使用某项，直接设置值为false，或注释掉</span><br><span class=\"line\">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span><br><span class=\"line\"></span><br><span class=\"line\">#1、多说</span><br><span class=\"line\">duoshuo: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">#2、网易云跟帖</span><br><span class=\"line\">wangyiyun: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">#3、畅言</span><br><span class=\"line\">changyan_appid: <span class=\"literal\">false</span></span><br><span class=\"line\">changyan_conf: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span><br><span class=\"line\">disqus: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">#5、Gitment</span><br><span class=\"line\">gitment_owner: false      #你的 GitHub ID</span><br><span class=\"line\">gitment_repo: ''          #存储评论的 repo</span><br><span class=\"line\">gitment_oauth:</span><br><span class=\"line\">  client_id: ''           #client ID</span><br><span class=\"line\">  client_secret: ''       #client secret</span><br><span class=\"line\"></span><br><span class=\"line\"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span><br><span class=\"line\">style:</span><br><span class=\"line\">  # 头像上面的背景颜色</span><br><span class=\"line\">  header: <span class=\"string\">'#4d4d4d'</span></span><br><span class=\"line\">  # 右滑板块背景</span><br><span class=\"line\">  slider: <span class=\"string\">'linear-gradient(200deg,#a0cfe4,#e8c37e)'</span></span><br><span class=\"line\"></span><br><span class=\"line\"># slider的设置</span><br><span class=\"line\">slider:</span><br><span class=\"line\">  showTags: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 智能菜单</span><br><span class=\"line\"># 如不需要，将该对应项置为false</span><br><span class=\"line\"># 比如</span><br><span class=\"line\">#smart_menu:</span><br><span class=\"line\">#  friends: false</span><br><span class=\"line\">smart_menu:</span><br><span class=\"line\">  innerArchive: <span class=\"string\">'点我搜文章'</span></span><br><span class=\"line\">  friends: <span class=\"string\">'友链'</span></span><br><span class=\"line\">  aboutme: <span class=\"string\">'关于我'</span></span><br><span class=\"line\"></span><br><span class=\"line\">friends:</span><br><span class=\"line\">  小雷的博客: http:<span class=\"comment\">//www.leridy.pw</span></span><br><span class=\"line\">  麦麦的博客: https:<span class=\"comment\">//www.marsmai.club/</span></span><br><span class=\"line\">  李逵的博客: https:<span class=\"comment\">//www.lcckup.com</span></span><br><span class=\"line\"></span><br><span class=\"line\">aboutme: 很惭愧&lt;br&gt;&lt;br&gt;很久没写博客了&lt;br&gt;谢谢你还能来逛逛</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"maimai123.github.io\">麦麦</a></p>\n"},{"title":"用 canvas 实现泡泡龙","date":"2021-05-18T16:00:00.000Z","_content":"今天在掘金上看到一个很有意思的，用一张图片生成泡泡龙，[传送门](https://juejin.cn/post/6963476650356916254?utm_source=gold_browser_extension#heading-8)\n\n效果图是这样的\n\n![image](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d686084e16d4dc88b5b17a1d7cd0e1a~tplv-k3u1fbpfcp-watermark.image)\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 先找到一张龙的剪映，要是明暗差比较大的那种，将图片绘制到canvas中\n\n```javascript\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n\n  const image = new Image();\n  image.src = jg;\n\n  image.onload = () => {\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    ctx.drawImage(image,0,0);\n  }\n\n```\n> 获取并裁剪画布的点阵信息 (放在img的onload时间内，确保图片已经加载完成)\n\n```javascript\n  const imageData = ctx.getImageData(0, 0, image.width, image.height).data;\n  ctx.fillStyle = '#ffffff';\n  ctx.fillRect(0, 0, image.width, image.height);\n\n  const gap = 7; // 这个是气泡的密度（数值越大越密）\n\n  for (let h = 0; h < image.height; h += gap) {\n    for (let w = 0; w < image.width; w += gap) {\n      const position = (image.width * h + w) * 4;\n      const r = imageData[position];\n      const g = imageData[position + 1];\n      const b = imageData[position + 2];\n\n      if (r + g + b == 0) {\n        ctx.fillStyle = '#000';\n        ctx.fillRect(w, h, 4, 4);\n      }\n    }\n  }\n\n```\n\n这样我们就得到了 ![dragon](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab8c4d11d4e54e0980f0eb02b5426131~tplv-k3u1fbpfcp-watermark.image)\n\n> 通过点阵信息生成气泡dom\n```javascript\n  const dragonContainer = document.getElementById('container');\n  const dragonScale = 2; // 这个是龙的大小\n\n  for (let h = 0; h < image.height; h += gap) {\n    for (let w = 0; w < image.width; w += gap) {\n      const position = (image.width * h + w) * 4;\n      const r = imageData[position];\n      const g = imageData[position + 1];\n      const b = imageData[position + 2];\n\n      if (r + g + b == 0) {\n        const bubble = document.createElement('img');\n        bubble.src = bubblej;\n        bubble.setAttribute('class', 'bubble');\n\n        const bubbleSize = Math.random() * 10 + 20;\n        bubble.style.left = `${w * dragonScale - bubbleSize / 2}px`;\n        bubble.style.top = `${h * dragonScale - bubbleSize / 2}px`;\n        bubble.style.width = bubble.style.height = `${bubbleSize}px`;\n        bubble.style.animationDuration = `${Math.random() * 6 + 4}s`;\n\n        dragonContainer.appendChild(bubble);\n      }\n    }\n  }\n\n  // html的结构是这样的\n  <div\n    id=\"container\"\n    style={{\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      zIndex: 2,\n      background: 'black',\n    }}\n  />\n  <canvas id=\"canvas\" />\n\n  // css代码为\n  .bubble {\n\t\tposition: absolute;\n\t\tanimation-timing-function: linear;\n\t\tanimation-name: floating;\n\t\tanimation-iteration-count: infinite;\n\t}\n\n\t@keyframes floating {\n\t\t0%{\n\t\t\ttransform: translateY(0px);\n\t\t}\n\t\t50%{\n\t\t\ttransform: translateY(-5px);\n\t\t}\n\t\t100%{\n\t\t\ttransform: translateY(0px);\n\t\t}\n\t}\n```\n\n> 这里的重点在于取到画布的`像素数据`，也就是getImageData\n> getImageData() 方法返回 ImageData 对象，该对象拷贝了画布指定矩形的像素数据。\n\n> 对于 ImageData 对象中的每个像素，都存在着四方面的信息，即 RGBA 值：\n\n> R - 红色 (0-255)\n> G - 绿色 (0-255)\n> B - 蓝色 (0-255)\n> A - alpha 通道 (0-255; 0 是透明的，255 是完全可见的)\n\ncolor/alpha 以数组形式存在，并存储于 ImageData 对象的 data 属性中。\n\n提示：在操作完成数组中的 color/alpha 信息之后，您可以使用 putImageData() 方法将图像数据拷贝回画布上\n\n```javascript\n  red = imgData.data[0];\n  green = imgData.data[1];\n  blue = imgData.data[2];\n  alpha = imgData.data[3];\n```\n\n> 您也可以使用 getImageData() 方法来反转画布上某个图像的每个像素的颜色。\n\n```javascript\n  red = 255-old_red;\n  green = 255-old_green;\n  blue = 255-old_blue;\n\n  const c=document.getElementById(\"myCanvas\");\n  const ctx=c.getContext(\"2d\");\n  const img=document.getElementById(\"tulip\");\n  ctx.drawImage(img,0,0);\n  const imgData=ctx.getImageData(0,0,c.width,c.height);\n\n  // 反转颜色\n  for (let i=0;i<imgData.data.length;i+=4)\n    {\n    imgData.data[i]=255-imgData.data[i];\n    imgData.data[i+1]=255-imgData.data[i+1];\n    imgData.data[i+2]=255-imgData.data[i+2];\n    imgData.data[i+3]=255;\n    }\n  ctx.putImageData(imgData,0,0);\n\n  // 改上面的部分代码，就得到一个被气泡围绕的空心龙\n  const r = 255 - imageData[position];\n  const g = 255 - imageData[position + 1];\n  const b = 255 - imageData[position + 2];\n```\n\n\n\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/dragon.md","raw":"---\ntitle: 用 canvas 实现泡泡龙\ndate: 2021-05-19\ntags: react\n---\n今天在掘金上看到一个很有意思的，用一张图片生成泡泡龙，[传送门](https://juejin.cn/post/6963476650356916254?utm_source=gold_browser_extension#heading-8)\n\n效果图是这样的\n\n![image](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d686084e16d4dc88b5b17a1d7cd0e1a~tplv-k3u1fbpfcp-watermark.image)\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 先找到一张龙的剪映，要是明暗差比较大的那种，将图片绘制到canvas中\n\n```javascript\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n\n  const image = new Image();\n  image.src = jg;\n\n  image.onload = () => {\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    ctx.drawImage(image,0,0);\n  }\n\n```\n> 获取并裁剪画布的点阵信息 (放在img的onload时间内，确保图片已经加载完成)\n\n```javascript\n  const imageData = ctx.getImageData(0, 0, image.width, image.height).data;\n  ctx.fillStyle = '#ffffff';\n  ctx.fillRect(0, 0, image.width, image.height);\n\n  const gap = 7; // 这个是气泡的密度（数值越大越密）\n\n  for (let h = 0; h < image.height; h += gap) {\n    for (let w = 0; w < image.width; w += gap) {\n      const position = (image.width * h + w) * 4;\n      const r = imageData[position];\n      const g = imageData[position + 1];\n      const b = imageData[position + 2];\n\n      if (r + g + b == 0) {\n        ctx.fillStyle = '#000';\n        ctx.fillRect(w, h, 4, 4);\n      }\n    }\n  }\n\n```\n\n这样我们就得到了 ![dragon](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab8c4d11d4e54e0980f0eb02b5426131~tplv-k3u1fbpfcp-watermark.image)\n\n> 通过点阵信息生成气泡dom\n```javascript\n  const dragonContainer = document.getElementById('container');\n  const dragonScale = 2; // 这个是龙的大小\n\n  for (let h = 0; h < image.height; h += gap) {\n    for (let w = 0; w < image.width; w += gap) {\n      const position = (image.width * h + w) * 4;\n      const r = imageData[position];\n      const g = imageData[position + 1];\n      const b = imageData[position + 2];\n\n      if (r + g + b == 0) {\n        const bubble = document.createElement('img');\n        bubble.src = bubblej;\n        bubble.setAttribute('class', 'bubble');\n\n        const bubbleSize = Math.random() * 10 + 20;\n        bubble.style.left = `${w * dragonScale - bubbleSize / 2}px`;\n        bubble.style.top = `${h * dragonScale - bubbleSize / 2}px`;\n        bubble.style.width = bubble.style.height = `${bubbleSize}px`;\n        bubble.style.animationDuration = `${Math.random() * 6 + 4}s`;\n\n        dragonContainer.appendChild(bubble);\n      }\n    }\n  }\n\n  // html的结构是这样的\n  <div\n    id=\"container\"\n    style={{\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      zIndex: 2,\n      background: 'black',\n    }}\n  />\n  <canvas id=\"canvas\" />\n\n  // css代码为\n  .bubble {\n\t\tposition: absolute;\n\t\tanimation-timing-function: linear;\n\t\tanimation-name: floating;\n\t\tanimation-iteration-count: infinite;\n\t}\n\n\t@keyframes floating {\n\t\t0%{\n\t\t\ttransform: translateY(0px);\n\t\t}\n\t\t50%{\n\t\t\ttransform: translateY(-5px);\n\t\t}\n\t\t100%{\n\t\t\ttransform: translateY(0px);\n\t\t}\n\t}\n```\n\n> 这里的重点在于取到画布的`像素数据`，也就是getImageData\n> getImageData() 方法返回 ImageData 对象，该对象拷贝了画布指定矩形的像素数据。\n\n> 对于 ImageData 对象中的每个像素，都存在着四方面的信息，即 RGBA 值：\n\n> R - 红色 (0-255)\n> G - 绿色 (0-255)\n> B - 蓝色 (0-255)\n> A - alpha 通道 (0-255; 0 是透明的，255 是完全可见的)\n\ncolor/alpha 以数组形式存在，并存储于 ImageData 对象的 data 属性中。\n\n提示：在操作完成数组中的 color/alpha 信息之后，您可以使用 putImageData() 方法将图像数据拷贝回画布上\n\n```javascript\n  red = imgData.data[0];\n  green = imgData.data[1];\n  blue = imgData.data[2];\n  alpha = imgData.data[3];\n```\n\n> 您也可以使用 getImageData() 方法来反转画布上某个图像的每个像素的颜色。\n\n```javascript\n  red = 255-old_red;\n  green = 255-old_green;\n  blue = 255-old_blue;\n\n  const c=document.getElementById(\"myCanvas\");\n  const ctx=c.getContext(\"2d\");\n  const img=document.getElementById(\"tulip\");\n  ctx.drawImage(img,0,0);\n  const imgData=ctx.getImageData(0,0,c.width,c.height);\n\n  // 反转颜色\n  for (let i=0;i<imgData.data.length;i+=4)\n    {\n    imgData.data[i]=255-imgData.data[i];\n    imgData.data[i+1]=255-imgData.data[i+1];\n    imgData.data[i+2]=255-imgData.data[i+2];\n    imgData.data[i+3]=255;\n    }\n  ctx.putImageData(imgData,0,0);\n\n  // 改上面的部分代码，就得到一个被气泡围绕的空心龙\n  const r = 255 - imageData[position];\n  const g = 255 - imageData[position + 1];\n  const b = 255 - imageData[position + 2];\n```\n\n\n\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"dragon","published":1,"updated":"2021-05-19T03:01:43.500Z","_id":"ckouux3w50000w9s63h4296z2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天在掘金上看到一个很有意思的，用一张图片生成泡泡龙，<a href=\"https://juejin.cn/post/6963476650356916254?utm_source=gold_browser_extension#heading-8\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>效果图是这样的</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d686084e16d4dc88b5b17a1d7cd0e1a~tplv-k3u1fbpfcp-watermark.image\" alt=\"image\"></p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>先找到一张龙的剪映，要是明暗差比较大的那种，将图片绘制到canvas中</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> image = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">image.src = jg;</span><br><span class=\"line\"></span><br><span class=\"line\">image.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  canvas.width = image.width;</span><br><span class=\"line\">  canvas.height = image.height;</span><br><span class=\"line\"></span><br><span class=\"line\">  ctx.drawImage(image,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取并裁剪画布的点阵信息 (放在img的onload时间内，确保图片已经加载完成)</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> imageData = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, image.width, image.height).data;</span><br><span class=\"line\">ctx.fillStyle = <span class=\"string\">'#ffffff'</span>;</span><br><span class=\"line\">ctx.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, image.width, image.height);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> gap = <span class=\"number\">7</span>; <span class=\"comment\">// 这个是气泡的密度（数值越大越密）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> h = <span class=\"number\">0</span>; h &lt; image.height; h += gap) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w = <span class=\"number\">0</span>; w &lt; image.width; w += gap) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> position = (image.width * h + w) * <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> r = imageData[position];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> g = imageData[position + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> b = imageData[position + <span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r + g + b == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      ctx.fillStyle = <span class=\"string\">'#000'</span>;</span><br><span class=\"line\">      ctx.fillRect(w, h, <span class=\"number\">4</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们就得到了 <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab8c4d11d4e54e0980f0eb02b5426131~tplv-k3u1fbpfcp-watermark.image\" alt=\"dragon\"></p>\n<blockquote>\n<p>通过点阵信息生成气泡dom<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> dragonContainer = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'container'</span>);</span><br><span class=\"line\"> <span class=\"keyword\">const</span> dragonScale = <span class=\"number\">2</span>; <span class=\"comment\">// 这个是龙的大小</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> h = <span class=\"number\">0</span>; h &lt; image.height; h += gap) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w = <span class=\"number\">0</span>; w &lt; image.width; w += gap) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">const</span> position = (image.width * h + w) * <span class=\"number\">4</span>;</span><br><span class=\"line\">     <span class=\"keyword\">const</span> r = imageData[position];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> g = imageData[position + <span class=\"number\">1</span>];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> b = imageData[position + <span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (r + g + b == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">const</span> bubble = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>);</span><br><span class=\"line\">       bubble.src = bubblej;</span><br><span class=\"line\">       bubble.setAttribute(<span class=\"string\">'class'</span>, <span class=\"string\">'bubble'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">const</span> bubbleSize = <span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span> + <span class=\"number\">20</span>;</span><br><span class=\"line\">       bubble.style.left = <span class=\"string\">`<span class=\"subst\">$&#123;w * dragonScale - bubbleSize <span class=\"regexp\">/ 2&#125;px`;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">       bubble.style.top = `$&#123;h * dragonScale - bubbleSize /</span> <span class=\"number\">2</span>&#125;</span>px`</span>;</span><br><span class=\"line\">       bubble.style.width = bubble.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;bubbleSize&#125;</span>px`</span>;</span><br><span class=\"line\">       bubble.style.animationDuration = <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.random() * <span class=\"number\">6</span> + <span class=\"number\">4</span>&#125;</span>s`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       dragonContainer.appendChild(bubble);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// html的结构是这样的</span></span><br><span class=\"line\"> &lt;div</span><br><span class=\"line\">   id=<span class=\"string\">\"container\"</span></span><br><span class=\"line\">   style=&#123;&#123;</span><br><span class=\"line\">     width: <span class=\"string\">'100%'</span>,</span><br><span class=\"line\">     height: <span class=\"string\">'100%'</span>,</span><br><span class=\"line\">     position: <span class=\"string\">'absolute'</span>,</span><br><span class=\"line\">     zIndex: <span class=\"number\">2</span>,</span><br><span class=\"line\">     background: <span class=\"string\">'black'</span>,</span><br><span class=\"line\">   &#125;&#125;</span><br><span class=\"line\"> /&gt;</span><br><span class=\"line\"> &lt;canvas id=<span class=\"string\">\"canvas\"</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// css代码为</span></span><br><span class=\"line\"> .bubble &#123;</span><br><span class=\"line\">\tposition: absolute;</span><br><span class=\"line\">\tanimation-timing-<span class=\"function\"><span class=\"keyword\">function</span>: <span class=\"title\">linear</span>;</span></span><br><span class=\"line\"><span class=\"function\">\t<span class=\"title\">animation</span>-<span class=\"title\">name</span>: <span class=\"title\">floating</span>;</span></span><br><span class=\"line\"><span class=\"function\">\t<span class=\"title\">animation</span>-<span class=\"title\">iteration</span>-<span class=\"title\">count</span>: <span class=\"title\">infinite</span>;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">@<span class=\"title\">keyframes</span> <span class=\"title\">floating</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"number\">0</span>%&#123;</span><br><span class=\"line\">\t\ttransform: translateY(<span class=\"number\">0</span>px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"number\">50</span>%&#123;</span><br><span class=\"line\">\t\ttransform: translateY(<span class=\"number\">-5</span>px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"number\">100</span>%&#123;</span><br><span class=\"line\">\t\ttransform: translateY(<span class=\"number\">0</span>px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>这里的重点在于取到画布的<code>像素数据</code>，也就是getImageData<br>getImageData() 方法返回 ImageData 对象，该对象拷贝了画布指定矩形的像素数据。</p>\n</blockquote>\n<blockquote>\n<p>对于 ImageData 对象中的每个像素，都存在着四方面的信息，即 RGBA 值：</p>\n</blockquote>\n<blockquote>\n<p>R - 红色 (0-255)<br>G - 绿色 (0-255)<br>B - 蓝色 (0-255)<br>A - alpha 通道 (0-255; 0 是透明的，255 是完全可见的)</p>\n</blockquote>\n<p>color/alpha 以数组形式存在，并存储于 ImageData 对象的 data 属性中。</p>\n<p>提示：在操作完成数组中的 color/alpha 信息之后，您可以使用 putImageData() 方法将图像数据拷贝回画布上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">red = imgData.data[<span class=\"number\">0</span>];</span><br><span class=\"line\">green = imgData.data[<span class=\"number\">1</span>];</span><br><span class=\"line\">blue = imgData.data[<span class=\"number\">2</span>];</span><br><span class=\"line\">alpha = imgData.data[<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>您也可以使用 getImageData() 方法来反转画布上某个图像的每个像素的颜色。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">red = <span class=\"number\">255</span>-old_red;</span><br><span class=\"line\">green = <span class=\"number\">255</span>-old_green;</span><br><span class=\"line\">blue = <span class=\"number\">255</span>-old_blue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> c=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myCanvas\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx=c.getContext(<span class=\"string\">\"2d\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> img=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"tulip\"</span>);</span><br><span class=\"line\">ctx.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> imgData=ctx.getImageData(<span class=\"number\">0</span>,<span class=\"number\">0</span>,c.width,c.height);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反转颜色</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;imgData.data.length;i+=<span class=\"number\">4</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  imgData.data[i]=<span class=\"number\">255</span>-imgData.data[i];</span><br><span class=\"line\">  imgData.data[i+<span class=\"number\">1</span>]=<span class=\"number\">255</span>-imgData.data[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">  imgData.data[i+<span class=\"number\">2</span>]=<span class=\"number\">255</span>-imgData.data[i+<span class=\"number\">2</span>];</span><br><span class=\"line\">  imgData.data[i+<span class=\"number\">3</span>]=<span class=\"number\">255</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">ctx.putImageData(imgData,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 改上面的部分代码，就得到一个被气泡围绕的空心龙</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> r = <span class=\"number\">255</span> - imageData[position];</span><br><span class=\"line\"><span class=\"keyword\">const</span> g = <span class=\"number\">255</span> - imageData[position + <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"number\">255</span> - imageData[position + <span class=\"number\">2</span>];</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天在掘金上看到一个很有意思的，用一张图片生成泡泡龙，<a href=\"https://juejin.cn/post/6963476650356916254?utm_source=gold_browser_extension#heading-8\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>效果图是这样的</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d686084e16d4dc88b5b17a1d7cd0e1a~tplv-k3u1fbpfcp-watermark.image\" alt=\"image\"></p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>先找到一张龙的剪映，要是明暗差比较大的那种，将图片绘制到canvas中</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> image = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">image.src = jg;</span><br><span class=\"line\"></span><br><span class=\"line\">image.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  canvas.width = image.width;</span><br><span class=\"line\">  canvas.height = image.height;</span><br><span class=\"line\"></span><br><span class=\"line\">  ctx.drawImage(image,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取并裁剪画布的点阵信息 (放在img的onload时间内，确保图片已经加载完成)</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> imageData = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, image.width, image.height).data;</span><br><span class=\"line\">ctx.fillStyle = <span class=\"string\">'#ffffff'</span>;</span><br><span class=\"line\">ctx.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, image.width, image.height);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> gap = <span class=\"number\">7</span>; <span class=\"comment\">// 这个是气泡的密度（数值越大越密）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> h = <span class=\"number\">0</span>; h &lt; image.height; h += gap) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w = <span class=\"number\">0</span>; w &lt; image.width; w += gap) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> position = (image.width * h + w) * <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> r = imageData[position];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> g = imageData[position + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> b = imageData[position + <span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r + g + b == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      ctx.fillStyle = <span class=\"string\">'#000'</span>;</span><br><span class=\"line\">      ctx.fillRect(w, h, <span class=\"number\">4</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们就得到了 <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab8c4d11d4e54e0980f0eb02b5426131~tplv-k3u1fbpfcp-watermark.image\" alt=\"dragon\"></p>\n<blockquote>\n<p>通过点阵信息生成气泡dom<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> dragonContainer = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'container'</span>);</span><br><span class=\"line\"> <span class=\"keyword\">const</span> dragonScale = <span class=\"number\">2</span>; <span class=\"comment\">// 这个是龙的大小</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> h = <span class=\"number\">0</span>; h &lt; image.height; h += gap) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w = <span class=\"number\">0</span>; w &lt; image.width; w += gap) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">const</span> position = (image.width * h + w) * <span class=\"number\">4</span>;</span><br><span class=\"line\">     <span class=\"keyword\">const</span> r = imageData[position];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> g = imageData[position + <span class=\"number\">1</span>];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> b = imageData[position + <span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (r + g + b == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">const</span> bubble = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>);</span><br><span class=\"line\">       bubble.src = bubblej;</span><br><span class=\"line\">       bubble.setAttribute(<span class=\"string\">'class'</span>, <span class=\"string\">'bubble'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">const</span> bubbleSize = <span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span> + <span class=\"number\">20</span>;</span><br><span class=\"line\">       bubble.style.left = <span class=\"string\">`<span class=\"subst\">$&#123;w * dragonScale - bubbleSize <span class=\"regexp\">/ 2&#125;px`;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">       bubble.style.top = `$&#123;h * dragonScale - bubbleSize /</span> <span class=\"number\">2</span>&#125;</span>px`</span>;</span><br><span class=\"line\">       bubble.style.width = bubble.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;bubbleSize&#125;</span>px`</span>;</span><br><span class=\"line\">       bubble.style.animationDuration = <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.random() * <span class=\"number\">6</span> + <span class=\"number\">4</span>&#125;</span>s`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       dragonContainer.appendChild(bubble);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// html的结构是这样的</span></span><br><span class=\"line\"> &lt;div</span><br><span class=\"line\">   id=<span class=\"string\">\"container\"</span></span><br><span class=\"line\">   style=&#123;&#123;</span><br><span class=\"line\">     width: <span class=\"string\">'100%'</span>,</span><br><span class=\"line\">     height: <span class=\"string\">'100%'</span>,</span><br><span class=\"line\">     position: <span class=\"string\">'absolute'</span>,</span><br><span class=\"line\">     zIndex: <span class=\"number\">2</span>,</span><br><span class=\"line\">     background: <span class=\"string\">'black'</span>,</span><br><span class=\"line\">   &#125;&#125;</span><br><span class=\"line\"> /&gt;</span><br><span class=\"line\"> &lt;canvas id=<span class=\"string\">\"canvas\"</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// css代码为</span></span><br><span class=\"line\"> .bubble &#123;</span><br><span class=\"line\">\tposition: absolute;</span><br><span class=\"line\">\tanimation-timing-<span class=\"function\"><span class=\"keyword\">function</span>: <span class=\"title\">linear</span>;</span></span><br><span class=\"line\"><span class=\"function\">\t<span class=\"title\">animation</span>-<span class=\"title\">name</span>: <span class=\"title\">floating</span>;</span></span><br><span class=\"line\"><span class=\"function\">\t<span class=\"title\">animation</span>-<span class=\"title\">iteration</span>-<span class=\"title\">count</span>: <span class=\"title\">infinite</span>;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">@<span class=\"title\">keyframes</span> <span class=\"title\">floating</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"number\">0</span>%&#123;</span><br><span class=\"line\">\t\ttransform: translateY(<span class=\"number\">0</span>px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"number\">50</span>%&#123;</span><br><span class=\"line\">\t\ttransform: translateY(<span class=\"number\">-5</span>px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"number\">100</span>%&#123;</span><br><span class=\"line\">\t\ttransform: translateY(<span class=\"number\">0</span>px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>这里的重点在于取到画布的<code>像素数据</code>，也就是getImageData<br>getImageData() 方法返回 ImageData 对象，该对象拷贝了画布指定矩形的像素数据。</p>\n</blockquote>\n<blockquote>\n<p>对于 ImageData 对象中的每个像素，都存在着四方面的信息，即 RGBA 值：</p>\n</blockquote>\n<blockquote>\n<p>R - 红色 (0-255)<br>G - 绿色 (0-255)<br>B - 蓝色 (0-255)<br>A - alpha 通道 (0-255; 0 是透明的，255 是完全可见的)</p>\n</blockquote>\n<p>color/alpha 以数组形式存在，并存储于 ImageData 对象的 data 属性中。</p>\n<p>提示：在操作完成数组中的 color/alpha 信息之后，您可以使用 putImageData() 方法将图像数据拷贝回画布上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">red = imgData.data[<span class=\"number\">0</span>];</span><br><span class=\"line\">green = imgData.data[<span class=\"number\">1</span>];</span><br><span class=\"line\">blue = imgData.data[<span class=\"number\">2</span>];</span><br><span class=\"line\">alpha = imgData.data[<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>您也可以使用 getImageData() 方法来反转画布上某个图像的每个像素的颜色。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">red = <span class=\"number\">255</span>-old_red;</span><br><span class=\"line\">green = <span class=\"number\">255</span>-old_green;</span><br><span class=\"line\">blue = <span class=\"number\">255</span>-old_blue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> c=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myCanvas\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx=c.getContext(<span class=\"string\">\"2d\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> img=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"tulip\"</span>);</span><br><span class=\"line\">ctx.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> imgData=ctx.getImageData(<span class=\"number\">0</span>,<span class=\"number\">0</span>,c.width,c.height);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反转颜色</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;imgData.data.length;i+=<span class=\"number\">4</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  imgData.data[i]=<span class=\"number\">255</span>-imgData.data[i];</span><br><span class=\"line\">  imgData.data[i+<span class=\"number\">1</span>]=<span class=\"number\">255</span>-imgData.data[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">  imgData.data[i+<span class=\"number\">2</span>]=<span class=\"number\">255</span>-imgData.data[i+<span class=\"number\">2</span>];</span><br><span class=\"line\">  imgData.data[i+<span class=\"number\">3</span>]=<span class=\"number\">255</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">ctx.putImageData(imgData,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 改上面的部分代码，就得到一个被气泡围绕的空心龙</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> r = <span class=\"number\">255</span> - imageData[position];</span><br><span class=\"line\"><span class=\"keyword\">const</span> g = <span class=\"number\">255</span> - imageData[position + <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"number\">255</span> - imageData[position + <span class=\"number\">2</span>];</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"},{"title":"打造自己的组件库","date":"2021-08-19T16:00:00.000Z","_content":"用dumi+father打造一个自己的组件库\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 新建一个文件夹。然后使用脚手架初始项目\n\n```javascript\n  mkdir mars-lib && cd mars-lib\n\n  npx @umijs/create-dumi-lib\n  # or\n  yarn create @umijs/dumi-lib\n  // 安装依赖\n  yarn\n\n  yarn start\n\n```\n> .umirc.ts 中可以修改左侧的标题 logo等信息,也可以修改themeConfig配置主题信息\n[dumi文档地址](https://d.umijs.org/zh-CN/guide)\n\n\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/doc.md","raw":"---\ntitle: 打造自己的组件库\ndate: 2021-08-20\ntags: react\n---\n用dumi+father打造一个自己的组件库\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 新建一个文件夹。然后使用脚手架初始项目\n\n```javascript\n  mkdir mars-lib && cd mars-lib\n\n  npx @umijs/create-dumi-lib\n  # or\n  yarn create @umijs/dumi-lib\n  // 安装依赖\n  yarn\n\n  yarn start\n\n```\n> .umirc.ts 中可以修改左侧的标题 logo等信息,也可以修改themeConfig配置主题信息\n[dumi文档地址](https://d.umijs.org/zh-CN/guide)\n\n\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"doc","published":1,"updated":"2022-01-16T15:39:18.363Z","_id":"ckygrrgv40000ej0m1hvx0w6a","comments":1,"layout":"post","photos":[],"link":"","content":"<p>用dumi+father打造一个自己的组件库</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>新建一个文件夹。然后使用脚手架初始项目</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir mars-lib &amp;&amp; cd mars-lib</span><br><span class=\"line\"></span><br><span class=\"line\">npx @umijs/create-dumi-lib</span><br><span class=\"line\"># or</span><br><span class=\"line\">yarn create @umijs/dumi-lib</span><br><span class=\"line\"><span class=\"comment\">// 安装依赖</span></span><br><span class=\"line\">yarn</span><br><span class=\"line\"></span><br><span class=\"line\">yarn start</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>.umirc.ts 中可以修改左侧的标题 logo等信息,也可以修改themeConfig配置主题信息<br><a href=\"https://d.umijs.org/zh-CN/guide\" target=\"_blank\" rel=\"noopener\">dumi文档地址</a></p>\n</blockquote>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>用dumi+father打造一个自己的组件库</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>新建一个文件夹。然后使用脚手架初始项目</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir mars-lib &amp;&amp; cd mars-lib</span><br><span class=\"line\"></span><br><span class=\"line\">npx @umijs/create-dumi-lib</span><br><span class=\"line\"># or</span><br><span class=\"line\">yarn create @umijs/dumi-lib</span><br><span class=\"line\"><span class=\"comment\">// 安装依赖</span></span><br><span class=\"line\">yarn</span><br><span class=\"line\"></span><br><span class=\"line\">yarn start</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>.umirc.ts 中可以修改左侧的标题 logo等信息,也可以修改themeConfig配置主题信息<br><a href=\"https://d.umijs.org/zh-CN/guide\" target=\"_blank\" rel=\"noopener\">dumi文档地址</a></p>\n</blockquote>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"},{"title":"服务端渲染原理初探","date":"2022-01-14T16:00:00.000Z","_content":"服务端渲染到底是怎么回事呢？为什么要做服务端渲染，有什么好处？带着这些问题，我们来看看服务端渲染的真面目吧~\n\n有很多时候，我们做项目的时候，接入服务端渲染都是用一些应用框架，如react的Next.js， vue的Nuxt.js、vue-server-renderer插件，那么本质是什么呢？\n没有深入了解之前，我知道是通过renderToString()方法，用来将组件输出成 HTML 字符串，node作为中间层，把html字符串返回给浏览器，那么具体实现是怎么样呢？以下以 React 项目举例。\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 为什么要做服务端渲染\n\n1. 利于SEO，搜索引擎爬虫工具可以查看到完全渲染的页面，有利于排到搜索引擎的前面。\n2. 提高首屏加载速度，无需等待所有的js加载执行完，用户可以更快地看到完整的页面。\n在 SPA 单页模式下，所有的数据请求和 Dom 渲染都在浏览器端完成，所以当我们第一次访问页面的时候很可能会存在“白屏”等待，而服务端渲染所有数据请求和 html内容已在服务端处理完成，浏览器收到的是完整的 html 内容，可以更快的看到渲染内容。\n\n虽然服务端渲染有一说好处，但也有缺点\n1. 需要在node server环境上运行，而完全静态的SPA可以在任何静态文件服务器上运行。\n2. 更多的服务端负载。\n\n因此在使用ssr之前要权衡下是否真的需要它，取决于对首屏加载时间的要求和SEO优化。服务端渲染适合特别依赖搜索引擎流量或对首屏时间有特殊要求的项目，如官网等。\n\n> 如何做服务端渲染？\n\n在前文中提到利用renderToString()方法可以有能力将虚拟dom编译成 HTML 字符串，但我们在开发过程中UI有一些事件绑定，编译出来的 HTML 事件绑定无效，因为 renderToString 并没有做事件相关的处理，因此返回给浏览器的内容不会有事件绑定。那么怎么解决这个问题呢？\n\n这就需要【同构】了。所谓同构，通俗的讲，就是服务端渲染完成页面结构，浏览器端渲染完成事件绑定。即后端渲染和前端交互。\n\n同构的流程如下：\n【服务端运行React代码生成HTML】 => 【发送HTML给浏览器】 => 【浏览器显示内容】 => 【浏览器加载js文件】 => 【执行js并接管页面的操作】\n\n接下来让我们实践一下吧~\n\n```javascript\n  npm init\n  npm i react express react-dom react-router-dom\n```\n\n新建server.js\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst React = require('react');\nconst {renderToString} = require('react-dom/server');\nconst App = class extends React.PureComponent{\n  render(){\n    return React.createElement(\"h1\",null,\"Hello World\");;\n  }\n};\napp.get('/',function(req,res){\n  const content = renderToString(React.createElement(App));\n  res.send(content);\n});\napp.listen(3000);\n```\nnode server.js启动localhost:3000就能看到浏览器输出的 Hello World。\n打开源代码也可以看到相对应的Dom。如果是客户端渲染的话，是无法看到了Hello World的。\n\n上面的代码我们不能使用jsx,也不能使用es6的import、export语法，\n所以我们加入webpack, 修改webpack配置, 引入babel。\n\n```javascript\nnpm i webpack babel-loader @babel/core @babel/preset-react @babel/preset-env --save-dev\n\n// 新增.babelrc文件，写入\n{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\n}\n\n// 新建webpack文件 build/webpack.serve.js\nconst path = require('path');\nconst nodeExternals = require('webpack-node-externals');\n\nmodule.exports = {\n  entry:{\n    index:path.resolve(__dirname,'../server.js')\n  },\n  mode:'development',\n  target:'node',\n  output:{\n    filename:'[name].js',\n    path:path.resolve(__dirname,'../dist/server')\n  },\n  externals:[nodeExternals()],\n  resolve:{\n    alias:{\n      '@':path.resolve(__dirname,'../src')\n    },\n    extensions:['.js', '.jsx']\n  },\n  module:{\n    rules:[{\n      test:/\\.js|.jsx$/, // 注意要配置jsx结尾的文件，不然解析不了jsx\n      use:'babel-loader',\n      exclude:/node_modules/\n    }]\n  },\n}\n\n```\n\n在package.json中添加script\n```javascript\n  \"scripts\": {\n    \"build\": \"npm-run-all --parallel build:* -l -n\",\n    \"build:server\": \"webpack --config build/webpack.server.js --watch\",\n    \"build:client\": \"webpack --config build/webpack.client.js --watch\",\n    \"server\": \"nodemon dist/server/index.js\"\n  },\n```\n\n```javascript\n// 修改 server.js\nimport express from 'express';\nimport React from 'react';\nconst app = express();\nconst {renderToString} = require('react-dom/server');\nimport App from '@/index';\napp.get('/',function(req,res){\n  const content = renderToString(<App/>);\n  console.log(content);\n  res.send(content);\n});\napp.listen(3000);\n\n// app.jsx\nimport React from 'react';\n\nexport default () => {\n    const handleClick = () => {\n        console.log(111)\n    }\n\n    return (\n        <div>\n            <h1>Page</h1>\n            <button onClick={handleClick}>点击</button>\n        </div>\n    )\n}\n```\n\nnpm run server 启动以后我们发现，点击按钮还是没反应的，这时候就需要执行客户端打包，引用打包出来的js代码\n\n修改如下\n```javascript\n// 新增webpack.client.js\nconst path = require('path');\nmodule.exports = {\n  entry:{\n    index:path.resolve(__dirname,'../src/index.jsx')\n  },\n  mode:'development',\n  output:{\n    filename:'[name].js',\n    path:path.resolve(__dirname,'../dist/client')\n  },\n  resolve:{\n    alias:{\n      '@':path.resolve(__dirname,'../src')\n    },\n    extensions:['.js', '.jsx']\n  },\n  module:{\n    rules:[{\n      test:/\\.js|.jsx$/,\n      use:'babel-loader',\n      exclude:/node_modules/\n    }]\n  }\n}\n\n// index.js\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport App from './app';\nhydrate(<App/>,document.getElementById(\"root\"));\n\n// 修改 server.js\nimport express from 'express';\nimport React from 'react';\nconst app = express();\nconst {renderToString} = require('react-dom/server');\nimport App from '@/App';\napp.use(express.static(\"dist\"))\napp.get('/',function(req,res){\n  const content = renderToString(<App/>);\n  res.send(`\n        <!doctype html>\n        <html>\n            <title>ssr</title>\n            <body>\n                <div id=\"root\">${content}</div>\n                <script src=\"/client/index.js\"></script>\n            </body>\n        </html>\n    `);\n});\napp.listen(3000);\n```\n虽然已经可以点击执行函数了，但是chrome会报一个警告：Warning: render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.\n提醒我们在服务端渲染时用ReactDOM.hydrate()来取代ReactDOM.render()，并警告我们在react17时将不能用ReactDOM.render()去混合服务端渲染出来的标签。\n\n> ReactDOM.render()会将挂载dom节点的所有子节点全部清空掉，再重新生成子节点。\n> ReactDOM.hydrate()则会复用挂载dom节点的子节点，并将其与react的virtualDom关联上。\n\n改下index.js代码\n```javascript\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport App from './app';\nhydrate(<App/>,document.getElementById(\"root\"));\n```\n\n好啦~ 以上代码已经讲解了如何最简单的实现服务端渲染。下一篇讲如何加入路由、redux等...\n\n不定期更新~~~\n\nMore info: [麦麦](https://github.com/maimai123)\n","source":"_posts/ssr.md","raw":"---\ntitle: 服务端渲染原理初探\ndate: 2022-01-15\ntags: ssr\n---\n服务端渲染到底是怎么回事呢？为什么要做服务端渲染，有什么好处？带着这些问题，我们来看看服务端渲染的真面目吧~\n\n有很多时候，我们做项目的时候，接入服务端渲染都是用一些应用框架，如react的Next.js， vue的Nuxt.js、vue-server-renderer插件，那么本质是什么呢？\n没有深入了解之前，我知道是通过renderToString()方法，用来将组件输出成 HTML 字符串，node作为中间层，把html字符串返回给浏览器，那么具体实现是怎么样呢？以下以 React 项目举例。\n\n# let's start!\n<font size=1>**如有转载，请注明出处。**</font>\n\n> 为什么要做服务端渲染\n\n1. 利于SEO，搜索引擎爬虫工具可以查看到完全渲染的页面，有利于排到搜索引擎的前面。\n2. 提高首屏加载速度，无需等待所有的js加载执行完，用户可以更快地看到完整的页面。\n在 SPA 单页模式下，所有的数据请求和 Dom 渲染都在浏览器端完成，所以当我们第一次访问页面的时候很可能会存在“白屏”等待，而服务端渲染所有数据请求和 html内容已在服务端处理完成，浏览器收到的是完整的 html 内容，可以更快的看到渲染内容。\n\n虽然服务端渲染有一说好处，但也有缺点\n1. 需要在node server环境上运行，而完全静态的SPA可以在任何静态文件服务器上运行。\n2. 更多的服务端负载。\n\n因此在使用ssr之前要权衡下是否真的需要它，取决于对首屏加载时间的要求和SEO优化。服务端渲染适合特别依赖搜索引擎流量或对首屏时间有特殊要求的项目，如官网等。\n\n> 如何做服务端渲染？\n\n在前文中提到利用renderToString()方法可以有能力将虚拟dom编译成 HTML 字符串，但我们在开发过程中UI有一些事件绑定，编译出来的 HTML 事件绑定无效，因为 renderToString 并没有做事件相关的处理，因此返回给浏览器的内容不会有事件绑定。那么怎么解决这个问题呢？\n\n这就需要【同构】了。所谓同构，通俗的讲，就是服务端渲染完成页面结构，浏览器端渲染完成事件绑定。即后端渲染和前端交互。\n\n同构的流程如下：\n【服务端运行React代码生成HTML】 => 【发送HTML给浏览器】 => 【浏览器显示内容】 => 【浏览器加载js文件】 => 【执行js并接管页面的操作】\n\n接下来让我们实践一下吧~\n\n```javascript\n  npm init\n  npm i react express react-dom react-router-dom\n```\n\n新建server.js\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst React = require('react');\nconst {renderToString} = require('react-dom/server');\nconst App = class extends React.PureComponent{\n  render(){\n    return React.createElement(\"h1\",null,\"Hello World\");;\n  }\n};\napp.get('/',function(req,res){\n  const content = renderToString(React.createElement(App));\n  res.send(content);\n});\napp.listen(3000);\n```\nnode server.js启动localhost:3000就能看到浏览器输出的 Hello World。\n打开源代码也可以看到相对应的Dom。如果是客户端渲染的话，是无法看到了Hello World的。\n\n上面的代码我们不能使用jsx,也不能使用es6的import、export语法，\n所以我们加入webpack, 修改webpack配置, 引入babel。\n\n```javascript\nnpm i webpack babel-loader @babel/core @babel/preset-react @babel/preset-env --save-dev\n\n// 新增.babelrc文件，写入\n{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\n}\n\n// 新建webpack文件 build/webpack.serve.js\nconst path = require('path');\nconst nodeExternals = require('webpack-node-externals');\n\nmodule.exports = {\n  entry:{\n    index:path.resolve(__dirname,'../server.js')\n  },\n  mode:'development',\n  target:'node',\n  output:{\n    filename:'[name].js',\n    path:path.resolve(__dirname,'../dist/server')\n  },\n  externals:[nodeExternals()],\n  resolve:{\n    alias:{\n      '@':path.resolve(__dirname,'../src')\n    },\n    extensions:['.js', '.jsx']\n  },\n  module:{\n    rules:[{\n      test:/\\.js|.jsx$/, // 注意要配置jsx结尾的文件，不然解析不了jsx\n      use:'babel-loader',\n      exclude:/node_modules/\n    }]\n  },\n}\n\n```\n\n在package.json中添加script\n```javascript\n  \"scripts\": {\n    \"build\": \"npm-run-all --parallel build:* -l -n\",\n    \"build:server\": \"webpack --config build/webpack.server.js --watch\",\n    \"build:client\": \"webpack --config build/webpack.client.js --watch\",\n    \"server\": \"nodemon dist/server/index.js\"\n  },\n```\n\n```javascript\n// 修改 server.js\nimport express from 'express';\nimport React from 'react';\nconst app = express();\nconst {renderToString} = require('react-dom/server');\nimport App from '@/index';\napp.get('/',function(req,res){\n  const content = renderToString(<App/>);\n  console.log(content);\n  res.send(content);\n});\napp.listen(3000);\n\n// app.jsx\nimport React from 'react';\n\nexport default () => {\n    const handleClick = () => {\n        console.log(111)\n    }\n\n    return (\n        <div>\n            <h1>Page</h1>\n            <button onClick={handleClick}>点击</button>\n        </div>\n    )\n}\n```\n\nnpm run server 启动以后我们发现，点击按钮还是没反应的，这时候就需要执行客户端打包，引用打包出来的js代码\n\n修改如下\n```javascript\n// 新增webpack.client.js\nconst path = require('path');\nmodule.exports = {\n  entry:{\n    index:path.resolve(__dirname,'../src/index.jsx')\n  },\n  mode:'development',\n  output:{\n    filename:'[name].js',\n    path:path.resolve(__dirname,'../dist/client')\n  },\n  resolve:{\n    alias:{\n      '@':path.resolve(__dirname,'../src')\n    },\n    extensions:['.js', '.jsx']\n  },\n  module:{\n    rules:[{\n      test:/\\.js|.jsx$/,\n      use:'babel-loader',\n      exclude:/node_modules/\n    }]\n  }\n}\n\n// index.js\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport App from './app';\nhydrate(<App/>,document.getElementById(\"root\"));\n\n// 修改 server.js\nimport express from 'express';\nimport React from 'react';\nconst app = express();\nconst {renderToString} = require('react-dom/server');\nimport App from '@/App';\napp.use(express.static(\"dist\"))\napp.get('/',function(req,res){\n  const content = renderToString(<App/>);\n  res.send(`\n        <!doctype html>\n        <html>\n            <title>ssr</title>\n            <body>\n                <div id=\"root\">${content}</div>\n                <script src=\"/client/index.js\"></script>\n            </body>\n        </html>\n    `);\n});\napp.listen(3000);\n```\n虽然已经可以点击执行函数了，但是chrome会报一个警告：Warning: render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.\n提醒我们在服务端渲染时用ReactDOM.hydrate()来取代ReactDOM.render()，并警告我们在react17时将不能用ReactDOM.render()去混合服务端渲染出来的标签。\n\n> ReactDOM.render()会将挂载dom节点的所有子节点全部清空掉，再重新生成子节点。\n> ReactDOM.hydrate()则会复用挂载dom节点的子节点，并将其与react的virtualDom关联上。\n\n改下index.js代码\n```javascript\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport App from './app';\nhydrate(<App/>,document.getElementById(\"root\"));\n```\n\n好啦~ 以上代码已经讲解了如何最简单的实现服务端渲染。下一篇讲如何加入路由、redux等...\n\n不定期更新~~~\n\nMore info: [麦麦](https://github.com/maimai123)\n","slug":"ssr","published":1,"updated":"2022-01-16T15:18:15.562Z","_id":"ckygs2eeq0002lw0mh3uv0shh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>服务端渲染到底是怎么回事呢？为什么要做服务端渲染，有什么好处？带着这些问题，我们来看看服务端渲染的真面目吧~</p>\n<p>有很多时候，我们做项目的时候，接入服务端渲染都是用一些应用框架，如react的Next.js， vue的Nuxt.js、vue-server-renderer插件，那么本质是什么呢？<br>没有深入了解之前，我知道是通过renderToString()方法，用来将组件输出成 HTML 字符串，node作为中间层，把html字符串返回给浏览器，那么具体实现是怎么样呢？以下以 React 项目举例。</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>为什么要做服务端渲染</p>\n</blockquote>\n<ol>\n<li>利于SEO，搜索引擎爬虫工具可以查看到完全渲染的页面，有利于排到搜索引擎的前面。</li>\n<li>提高首屏加载速度，无需等待所有的js加载执行完，用户可以更快地看到完整的页面。<br>在 SPA 单页模式下，所有的数据请求和 Dom 渲染都在浏览器端完成，所以当我们第一次访问页面的时候很可能会存在“白屏”等待，而服务端渲染所有数据请求和 html内容已在服务端处理完成，浏览器收到的是完整的 html 内容，可以更快的看到渲染内容。</li>\n</ol>\n<p>虽然服务端渲染有一说好处，但也有缺点</p>\n<ol>\n<li>需要在node server环境上运行，而完全静态的SPA可以在任何静态文件服务器上运行。</li>\n<li>更多的服务端负载。</li>\n</ol>\n<p>因此在使用ssr之前要权衡下是否真的需要它，取决于对首屏加载时间的要求和SEO优化。服务端渲染适合特别依赖搜索引擎流量或对首屏时间有特殊要求的项目，如官网等。</p>\n<blockquote>\n<p>如何做服务端渲染？</p>\n</blockquote>\n<p>在前文中提到利用renderToString()方法可以有能力将虚拟dom编译成 HTML 字符串，但我们在开发过程中UI有一些事件绑定，编译出来的 HTML 事件绑定无效，因为 renderToString 并没有做事件相关的处理，因此返回给浏览器的内容不会有事件绑定。那么怎么解决这个问题呢？</p>\n<p>这就需要【同构】了。所谓同构，通俗的讲，就是服务端渲染完成页面结构，浏览器端渲染完成事件绑定。即后端渲染和前端交互。</p>\n<p>同构的流程如下：<br>【服务端运行React代码生成HTML】 =&gt; 【发送HTML给浏览器】 =&gt; 【浏览器显示内容】 =&gt; 【浏览器加载js文件】 =&gt; 【执行js并接管页面的操作】</p>\n<p>接下来让我们实践一下吧~</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br><span class=\"line\">npm i react express react-dom react-router-dom</span><br></pre></td></tr></table></figure>\n<p>新建server.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\"><span class=\"keyword\">const</span> React = <span class=\"built_in\">require</span>(<span class=\"string\">'react'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;renderToString&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dom/server'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> App = <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">PureComponent</span></span>&#123;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> React.createElement(<span class=\"string\">\"h1\"</span>,<span class=\"literal\">null</span>,<span class=\"string\">\"Hello World\"</span>);;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = renderToString(React.createElement(App));</span><br><span class=\"line\">  res.send(content);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure>\n<p>node server.js启动localhost:3000就能看到浏览器输出的 Hello World。<br>打开源代码也可以看到相对应的Dom。如果是客户端渲染的话，是无法看到了Hello World的。</p>\n<p>上面的代码我们不能使用jsx,也不能使用es6的import、export语法，<br>所以我们加入webpack, 修改webpack配置, 引入babel。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i webpack babel-loader @babel/core @babel/preset-react @babel/preset-env --save-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 新增.babelrc文件，写入</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"@babel/preset-env\"</span>, <span class=\"string\">\"@babel/preset-react\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 新建webpack文件 build/webpack.serve.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> nodeExternals = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-node-externals'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry:&#123;</span><br><span class=\"line\">    index:path.resolve(__dirname,<span class=\"string\">'../server.js'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mode:<span class=\"string\">'development'</span>,</span><br><span class=\"line\">  target:<span class=\"string\">'node'</span>,</span><br><span class=\"line\">  output:&#123;</span><br><span class=\"line\">    filename:<span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">    path:path.resolve(__dirname,<span class=\"string\">'../dist/server'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  externals:[nodeExternals()],</span><br><span class=\"line\">  resolve:&#123;</span><br><span class=\"line\">    alias:&#123;</span><br><span class=\"line\">      <span class=\"string\">'@'</span>:path.resolve(__dirname,<span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    extensions:[<span class=\"string\">'.js'</span>, <span class=\"string\">'.jsx'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>:&#123;</span><br><span class=\"line\">    rules:[&#123;</span><br><span class=\"line\">      test:<span class=\"regexp\">/\\.js|.jsx$/</span>, <span class=\"comment\">// 注意要配置jsx结尾的文件，不然解析不了jsx</span></span><br><span class=\"line\">      use:<span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">      exclude:<span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在package.json中添加script<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"npm-run-all --parallel build:* -l -n\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"build:server\"</span>: <span class=\"string\">\"webpack --config build/webpack.server.js --watch\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"build:client\"</span>: <span class=\"string\">\"webpack --config build/webpack.client.js --watch\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"server\"</span>: <span class=\"string\">\"nodemon dist/server/index.js\"</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改 server.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">'express'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;renderToString&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dom/server'</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'@/index'</span>;</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = renderToString(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">  res.send(content);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// app.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> handleClick = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"number\">111</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">            &lt;h1&gt;Page&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;button onClick=&#123;handleClick&#125;&gt;点击&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>npm run server 启动以后我们发现，点击按钮还是没反应的，这时候就需要执行客户端打包，引用打包出来的js代码</p>\n<p>修改如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新增webpack.client.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry:&#123;</span><br><span class=\"line\">    index:path.resolve(__dirname,<span class=\"string\">'../src/index.jsx'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mode:<span class=\"string\">'development'</span>,</span><br><span class=\"line\">  output:&#123;</span><br><span class=\"line\">    filename:<span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">    path:path.resolve(__dirname,<span class=\"string\">'../dist/client'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve:&#123;</span><br><span class=\"line\">    alias:&#123;</span><br><span class=\"line\">      <span class=\"string\">'@'</span>:path.resolve(__dirname,<span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    extensions:[<span class=\"string\">'.js'</span>, <span class=\"string\">'.jsx'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>:&#123;</span><br><span class=\"line\">    rules:[&#123;</span><br><span class=\"line\">      test:<span class=\"regexp\">/\\.js|.jsx$/</span>,</span><br><span class=\"line\">      use:<span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">      exclude:<span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; hydrate &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</span><br><span class=\"line\">hydrate(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>,<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"root\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改 server.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">'express'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;renderToString&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dom/server'</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'@/App'</span>;</span><br><span class=\"line\">app.use(express.static(<span class=\"string\">\"dist\"</span>))</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = renderToString(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>);</span><br><span class=\"line\">  res.send(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;html&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;title&gt;ssr&lt;/title&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;div id=\"root\"&gt;<span class=\"subst\">$&#123;content&#125;</span>&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;script src=\"/client/index.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/html&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure><br>虽然已经可以点击执行函数了，但是chrome会报一个警告：Warning: render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.<br>提醒我们在服务端渲染时用ReactDOM.hydrate()来取代ReactDOM.render()，并警告我们在react17时将不能用ReactDOM.render()去混合服务端渲染出来的标签。</p>\n<blockquote>\n<p>ReactDOM.render()会将挂载dom节点的所有子节点全部清空掉，再重新生成子节点。<br>ReactDOM.hydrate()则会复用挂载dom节点的子节点，并将其与react的virtualDom关联上。</p>\n</blockquote>\n<p>改下index.js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; hydrate &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</span><br><span class=\"line\">hydrate(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>,<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"root\"</span>));</span><br></pre></td></tr></table></figure></p>\n<p>好啦~ 以上代码已经讲解了如何最简单的实现服务端渲染。下一篇讲如何加入路由、redux等…</p>\n<p>不定期更新~~~</p>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>服务端渲染到底是怎么回事呢？为什么要做服务端渲染，有什么好处？带着这些问题，我们来看看服务端渲染的真面目吧~</p>\n<p>有很多时候，我们做项目的时候，接入服务端渲染都是用一些应用框架，如react的Next.js， vue的Nuxt.js、vue-server-renderer插件，那么本质是什么呢？<br>没有深入了解之前，我知道是通过renderToString()方法，用来将组件输出成 HTML 字符串，node作为中间层，把html字符串返回给浏览器，那么具体实现是怎么样呢？以下以 React 项目举例。</p>\n<h1 id=\"let’s-start\"><a href=\"#let’s-start\" class=\"headerlink\" title=\"let’s start!\"></a>let’s start!</h1><font size=1><strong>如有转载，请注明出处。</strong></font>\n\n<blockquote>\n<p>为什么要做服务端渲染</p>\n</blockquote>\n<ol>\n<li>利于SEO，搜索引擎爬虫工具可以查看到完全渲染的页面，有利于排到搜索引擎的前面。</li>\n<li>提高首屏加载速度，无需等待所有的js加载执行完，用户可以更快地看到完整的页面。<br>在 SPA 单页模式下，所有的数据请求和 Dom 渲染都在浏览器端完成，所以当我们第一次访问页面的时候很可能会存在“白屏”等待，而服务端渲染所有数据请求和 html内容已在服务端处理完成，浏览器收到的是完整的 html 内容，可以更快的看到渲染内容。</li>\n</ol>\n<p>虽然服务端渲染有一说好处，但也有缺点</p>\n<ol>\n<li>需要在node server环境上运行，而完全静态的SPA可以在任何静态文件服务器上运行。</li>\n<li>更多的服务端负载。</li>\n</ol>\n<p>因此在使用ssr之前要权衡下是否真的需要它，取决于对首屏加载时间的要求和SEO优化。服务端渲染适合特别依赖搜索引擎流量或对首屏时间有特殊要求的项目，如官网等。</p>\n<blockquote>\n<p>如何做服务端渲染？</p>\n</blockquote>\n<p>在前文中提到利用renderToString()方法可以有能力将虚拟dom编译成 HTML 字符串，但我们在开发过程中UI有一些事件绑定，编译出来的 HTML 事件绑定无效，因为 renderToString 并没有做事件相关的处理，因此返回给浏览器的内容不会有事件绑定。那么怎么解决这个问题呢？</p>\n<p>这就需要【同构】了。所谓同构，通俗的讲，就是服务端渲染完成页面结构，浏览器端渲染完成事件绑定。即后端渲染和前端交互。</p>\n<p>同构的流程如下：<br>【服务端运行React代码生成HTML】 =&gt; 【发送HTML给浏览器】 =&gt; 【浏览器显示内容】 =&gt; 【浏览器加载js文件】 =&gt; 【执行js并接管页面的操作】</p>\n<p>接下来让我们实践一下吧~</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br><span class=\"line\">npm i react express react-dom react-router-dom</span><br></pre></td></tr></table></figure>\n<p>新建server.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\"><span class=\"keyword\">const</span> React = <span class=\"built_in\">require</span>(<span class=\"string\">'react'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;renderToString&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dom/server'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> App = <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">PureComponent</span></span>&#123;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> React.createElement(<span class=\"string\">\"h1\"</span>,<span class=\"literal\">null</span>,<span class=\"string\">\"Hello World\"</span>);;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = renderToString(React.createElement(App));</span><br><span class=\"line\">  res.send(content);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure>\n<p>node server.js启动localhost:3000就能看到浏览器输出的 Hello World。<br>打开源代码也可以看到相对应的Dom。如果是客户端渲染的话，是无法看到了Hello World的。</p>\n<p>上面的代码我们不能使用jsx,也不能使用es6的import、export语法，<br>所以我们加入webpack, 修改webpack配置, 引入babel。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i webpack babel-loader @babel/core @babel/preset-react @babel/preset-env --save-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 新增.babelrc文件，写入</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"@babel/preset-env\"</span>, <span class=\"string\">\"@babel/preset-react\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 新建webpack文件 build/webpack.serve.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> nodeExternals = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-node-externals'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry:&#123;</span><br><span class=\"line\">    index:path.resolve(__dirname,<span class=\"string\">'../server.js'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mode:<span class=\"string\">'development'</span>,</span><br><span class=\"line\">  target:<span class=\"string\">'node'</span>,</span><br><span class=\"line\">  output:&#123;</span><br><span class=\"line\">    filename:<span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">    path:path.resolve(__dirname,<span class=\"string\">'../dist/server'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  externals:[nodeExternals()],</span><br><span class=\"line\">  resolve:&#123;</span><br><span class=\"line\">    alias:&#123;</span><br><span class=\"line\">      <span class=\"string\">'@'</span>:path.resolve(__dirname,<span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    extensions:[<span class=\"string\">'.js'</span>, <span class=\"string\">'.jsx'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>:&#123;</span><br><span class=\"line\">    rules:[&#123;</span><br><span class=\"line\">      test:<span class=\"regexp\">/\\.js|.jsx$/</span>, <span class=\"comment\">// 注意要配置jsx结尾的文件，不然解析不了jsx</span></span><br><span class=\"line\">      use:<span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">      exclude:<span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在package.json中添加script<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"npm-run-all --parallel build:* -l -n\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"build:server\"</span>: <span class=\"string\">\"webpack --config build/webpack.server.js --watch\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"build:client\"</span>: <span class=\"string\">\"webpack --config build/webpack.client.js --watch\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"server\"</span>: <span class=\"string\">\"nodemon dist/server/index.js\"</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改 server.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">'express'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;renderToString&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dom/server'</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'@/index'</span>;</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = renderToString(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">  res.send(content);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// app.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> handleClick = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"number\">111</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">            &lt;h1&gt;Page&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;button onClick=&#123;handleClick&#125;&gt;点击&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>npm run server 启动以后我们发现，点击按钮还是没反应的，这时候就需要执行客户端打包，引用打包出来的js代码</p>\n<p>修改如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新增webpack.client.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry:&#123;</span><br><span class=\"line\">    index:path.resolve(__dirname,<span class=\"string\">'../src/index.jsx'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mode:<span class=\"string\">'development'</span>,</span><br><span class=\"line\">  output:&#123;</span><br><span class=\"line\">    filename:<span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">    path:path.resolve(__dirname,<span class=\"string\">'../dist/client'</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve:&#123;</span><br><span class=\"line\">    alias:&#123;</span><br><span class=\"line\">      <span class=\"string\">'@'</span>:path.resolve(__dirname,<span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    extensions:[<span class=\"string\">'.js'</span>, <span class=\"string\">'.jsx'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>:&#123;</span><br><span class=\"line\">    rules:[&#123;</span><br><span class=\"line\">      test:<span class=\"regexp\">/\\.js|.jsx$/</span>,</span><br><span class=\"line\">      use:<span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">      exclude:<span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; hydrate &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</span><br><span class=\"line\">hydrate(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>,<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"root\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改 server.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">'express'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;renderToString&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dom/server'</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'@/App'</span>;</span><br><span class=\"line\">app.use(express.static(<span class=\"string\">\"dist\"</span>))</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = renderToString(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>);</span><br><span class=\"line\">  res.send(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;html&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;title&gt;ssr&lt;/title&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;div id=\"root\"&gt;<span class=\"subst\">$&#123;content&#125;</span>&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;script src=\"/client/index.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/html&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure><br>虽然已经可以点击执行函数了，但是chrome会报一个警告：Warning: render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.<br>提醒我们在服务端渲染时用ReactDOM.hydrate()来取代ReactDOM.render()，并警告我们在react17时将不能用ReactDOM.render()去混合服务端渲染出来的标签。</p>\n<blockquote>\n<p>ReactDOM.render()会将挂载dom节点的所有子节点全部清空掉，再重新生成子节点。<br>ReactDOM.hydrate()则会复用挂载dom节点的子节点，并将其与react的virtualDom关联上。</p>\n</blockquote>\n<p>改下index.js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; hydrate &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app'</span>;</span><br><span class=\"line\">hydrate(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span>,<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"root\"</span>));</span><br></pre></td></tr></table></figure></p>\n<p>好啦~ 以上代码已经讲解了如何最简单的实现服务端渲染。下一篇讲如何加入路由、redux等…</p>\n<p>不定期更新~~~</p>\n<p>More info: <a href=\"https://github.com/maimai123\" target=\"_blank\" rel=\"noopener\">麦麦</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckoo2u0yo0000000m4r0x3haw","tag_id":"ckoo2u0yu0002000m3g4cexbx","_id":"ckoo2u0yx0007000m36k7fps7"},{"post_id":"ckoo2u0yy0008000m1dpecblb","tag_id":"ckoo2u0yx0006000m0zx42z5d","_id":"ckoo2u0yz000b000m18a8agj7"},{"post_id":"ckoo2u0ys0001000mhgir3g79","tag_id":"ckoo2u0yx0006000m0zx42z5d","_id":"ckoo2u0z1000d000m9fo75zfw"},{"post_id":"ckoo2u0yv0003000mbwky6qib","tag_id":"ckoo2u0yz000a000m79vvdl84","_id":"ckoo2u0z4000h000m2962gznp"},{"post_id":"ckoo2u0z2000g000m3rg9dyud","tag_id":"ckoo2u0yz000a000m79vvdl84","_id":"ckoo2u0z5000k000m1mndgu9q"},{"post_id":"ckoo2u0yw0004000m16fsas40","tag_id":"ckoo2u0yz000a000m79vvdl84","_id":"ckoo2u0z6000m000m4n83605r"},{"post_id":"ckoo2u0z5000l000m4tslbygg","tag_id":"ckoo2u0yz000a000m79vvdl84","_id":"ckoo2u0z6000o000m9xtrbv4l"},{"post_id":"ckoo2u0yw0005000maax02a6s","tag_id":"ckoo2u0z5000j000mb2jt7zxf","_id":"ckoo2u0z7000r000m4q3jftg8"},{"post_id":"ckoo2u0yy0009000mbxl223t6","tag_id":"ckoo2u0z6000p000melsg095u","_id":"ckoo2u0z9000v000m6a5y92t2"},{"post_id":"ckoo2u0z8000t000m91z656d9","tag_id":"ckoo2u0yu0002000m3g4cexbx","_id":"ckoo2u0z9000x000m3b9d789m"},{"post_id":"ckoo2u0z9000w000m9sal1xem","tag_id":"ckoo2u0z5000j000mb2jt7zxf","_id":"ckoo2u0za0010000m1br10qyw"},{"post_id":"ckoo2u0yz000c000m2ls8b8a3","tag_id":"ckoo2u0z8000u000mebnl3ij1","_id":"ckoo2u0zb0012000m3kkzdfek"},{"post_id":"ckoo2u0za0011000m3p6g1lz3","tag_id":"ckoo2u0z5000j000mb2jt7zxf","_id":"ckoo2u0zc0015000mbb0832ly"},{"post_id":"ckoo2u0z1000e000m2ox7epmg","tag_id":"ckoo2u0z5000j000mb2jt7zxf","_id":"ckoo2u0ze0017000m4gla68oi"},{"post_id":"ckoo2u0zb0013000m1o8s25bx","tag_id":"ckoo2u0yu0002000m3g4cexbx","_id":"ckoo2u0zf001a000m0f0cgj9y"},{"post_id":"ckoo2u0z4000i000m6agwc05h","tag_id":"ckoo2u0zc0014000m3pv4djzi","_id":"ckoo2u0zg001c000mh02shdgk"},{"post_id":"ckoo2u0ze0018000mcy8ldcv6","tag_id":"ckoo2u0zc0014000m3pv4djzi","_id":"ckoo2u0zh001f000md69w0gd8"},{"post_id":"ckoo2u0zf001b000m6c5c094m","tag_id":"ckoo2u0z5000j000mb2jt7zxf","_id":"ckoo2u0zh001h000mcz5ahr11"},{"post_id":"ckoo2u0z6000n000mdoit9tlx","tag_id":"ckoo2u0zc0014000m3pv4djzi","_id":"ckoo2u0zi001k000mdpboe5zy"},{"post_id":"ckoo2u0zg001d000m80b456aj","tag_id":"ckoo2u0yx0006000m0zx42z5d","_id":"ckoo2u0zj001l000mc1mih6hb"},{"post_id":"ckoo2u0z7000q000m81oi06pr","tag_id":"ckoo2u0zg001e000mhdlh4v9i","_id":"ckoo2u0zj001m000m3ikuhuk3"},{"post_id":"ckoo2u0z7000s000m85yad3wv","tag_id":"ckoo2u0zi001j000m1w6lhvq4","_id":"ckoo2u0zk001o000mbgrihad7"},{"post_id":"ckoo2u0z9000y000mfs3dggy9","tag_id":"ckoo2u0zc0014000m3pv4djzi","_id":"ckoo2u0zl001q000m5ax1fqeu"},{"post_id":"ckoo2u0zc0016000m8z8q7po1","tag_id":"ckoo2u0zk001p000m9jek2x9x","_id":"ckoo2u0zm001s000m0g2a1sop"},{"post_id":"ckoo2u0zh001g000ma6461yn5","tag_id":"ckoo2u0zl001r000mgwxx3yse","_id":"ckoo2u0zm001u000m4kdffsz8"},{"post_id":"ckoo2u0zi001i000mfcobg46b","tag_id":"ckoo2u0zm001t000me97608b9","_id":"ckoo2u0zm001v000m0vns9ecp"},{"post_id":"ckouux3w50000w9s63h4296z2","tag_id":"ckoo2u0z5000j000mb2jt7zxf","_id":"ckouux3wa0001w9s66716amgn"},{"post_id":"ckygrrgv40000ej0m1hvx0w6a","tag_id":"ckoo2u0z5000j000mb2jt7zxf","_id":"ckygrrgv90001ej0mh1po1cuz"},{"post_id":"ckygs2eeq0002lw0mh3uv0shh","tag_id":"ckyh0rm8a0004lw0mf47l2gc3","_id":"ckyh0rm8d0005lw0mdoccan71"}],"Tag":[{"name":"jq","_id":"ckoo2u0yu0002000m3g4cexbx"},{"name":"vue","_id":"ckoo2u0yx0006000m0zx42z5d"},{"name":"js","_id":"ckoo2u0yz000a000m79vvdl84"},{"name":"react","_id":"ckoo2u0z5000j000mb2jt7zxf"},{"name":"css","_id":"ckoo2u0z6000p000melsg095u"},{"name":"extensions","_id":"ckoo2u0z8000u000mebnl3ij1"},{"name":"React","_id":"ckoo2u0zc0014000m3pv4djzi"},{"name":"vuex","_id":"ckoo2u0zg001e000mhdlh4v9i"},{"name":"mac","_id":"ckoo2u0zi001j000m1w6lhvq4"},{"name":"日常","_id":"ckoo2u0zk001p000m9jek2x9x"},{"name":"wechat","_id":"ckoo2u0zl001r000mgwxx3yse"},{"name":"hexo","_id":"ckoo2u0zm001t000me97608b9"},{"name":"ssr","_id":"ckyh0rm8a0004lw0mf47l2gc3"}]}}